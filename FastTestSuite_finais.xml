<?xml version="1.0" encoding="UTF-8"?><testrun name="FastTestSuite" project="jgrapht-core" tests="3058" started="3055" failures="20" errors="29" ignored="0">
  <testsuite name="org.jgrapht.FastTestSuite" incomplete="true" displayname="FastTestSuite" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]">
    <testsuite name="org.jgrapht.graph.DirectedGraphTest" time="0.047" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedGraphTest]">
      <testcase name="testEdgeSetFactory" classname="org.jgrapht.graph.DirectedGraphTest" time="0.035" displayname="testEdgeSetFactory" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedGraphTest]/[test:testEdgeSetFactory(org.jgrapht.graph.DirectedGraphTest)]"/>
      <testcase name="testInDegreeOf" classname="org.jgrapht.graph.DirectedGraphTest" time="0.001" displayname="testInDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedGraphTest]/[test:testInDegreeOf(org.jgrapht.graph.DirectedGraphTest)]"/>
      <testcase name="testEdgeOrderDeterminism" classname="org.jgrapht.graph.DirectedGraphTest" time="0.001" displayname="testEdgeOrderDeterminism" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedGraphTest]/[test:testEdgeOrderDeterminism(org.jgrapht.graph.DirectedGraphTest)]"/>
      <testcase name="testOutDegreeOf" classname="org.jgrapht.graph.DirectedGraphTest" time="0.001" displayname="testOutDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedGraphTest]/[test:testOutDegreeOf(org.jgrapht.graph.DirectedGraphTest)]"/>
      <testcase name="testVertexOrderDeterminism" classname="org.jgrapht.graph.DirectedGraphTest" time="0.0" displayname="testVertexOrderDeterminism" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedGraphTest]/[test:testVertexOrderDeterminism(org.jgrapht.graph.DirectedGraphTest)]"/>
      <testcase name="testEdgesOf" classname="org.jgrapht.graph.DirectedGraphTest" time="0.0" displayname="testEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedGraphTest]/[test:testEdgesOf(org.jgrapht.graph.DirectedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="28.21" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]">
      <testcase name="testMaxFlow_MinimumNumberOfArcs" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="2.412" displayname="testMaxFlow_MinimumNumberOfArcs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testMaxFlow_MinimumNumberOfArcs(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testMinCostFlow_MaximumArcNum" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="4.051" displayname="testMinCostFlow_MaximumArcNum" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testMinCostFlow_MaximumArcNum(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testMaxFlow_MaximumNumberOfArcs" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="3.661" displayname="testMaxFlow_MaximumNumberOfArcs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testMaxFlow_MaximumNumberOfArcs(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testBipartiteMatchingProblem_MinimumNumberOfArcs" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="0.511" displayname="testBipartiteMatchingProblem_MinimumNumberOfArcs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testBipartiteMatchingProblem_MinimumNumberOfArcs(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testBipartiteMatchingProblem_MaximumNumberOfArcs" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="0.754" displayname="testBipartiteMatchingProblem_MaximumNumberOfArcs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testBipartiteMatchingProblem_MaximumNumberOfArcs(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testMinCostFlow_MinimumArcNumA" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="0.001" displayname="testMinCostFlow_MinimumArcNumA" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testMinCostFlow_MinimumArcNumA(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testBipartiteMatchingProblem_LargeProblem" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="14.199" displayname="testBipartiteMatchingProblem_LargeProblem" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testBipartiteMatchingProblem_LargeProblem(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testMinCostFlow_MinimumArcNum" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="0.488" displayname="testMinCostFlow_MinimumArcNum" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testMinCostFlow_MinimumArcNum(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testMaxFlow_RandomNumberOfArcs" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="1.81" displayname="testMaxFlow_RandomNumberOfArcs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testMaxFlow_RandomNumberOfArcs(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
      <testcase name="testBipartiteMatchingProblem_RandomNumberOfArcs" classname="org.jgrapht.generate.netgen.NetworkGeneratorTest" time="0.308" displayname="testBipartiteMatchingProblem_RandomNumberOfArcs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorTest]/[test:testBipartiteMatchingProblem_RandomNumberOfArcs(org.jgrapht.generate.netgen.NetworkGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.06" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]">
      <testcase name="testMinCutSmallWeight" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.036" displayname="testMinCutSmallWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutSmallWeight(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCutUnweighted" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.002" displayname="testMinCutUnweighted" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutUnweighted(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCut14" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.004" displayname="testMinCut14" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCut14(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCutDisconnected" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.002" displayname="testMinCutDisconnected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutDisconnected(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCutMultigraph" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.009" displayname="testMinCutMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutMultigraph(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCutSingleton" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.001" displayname="testMinCutSingleton" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutSingleton(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCutEmpty" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.001" displayname="testMinCutEmpty" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutEmpty(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCutSmall" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.001" displayname="testMinCutSmall" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutSmall(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCutDoubleton" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.001" displayname="testMinCutDoubleton" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCutDoubleton(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
      <testcase name="testMinCut0Weight" classname="org.jgrapht.alg.StoerWagnerMinimumCutTest" time="0.002" displayname="testMinCut0Weight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.StoerWagnerMinimumCutTest]/[test:testMinCut0Weight(org.jgrapht.alg.StoerWagnerMinimumCutTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.util.PrefetchIteratorTest" time="0.032" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.PrefetchIteratorTest]">
      <testcase name="testIteratorInterface" classname="org.jgrapht.util.PrefetchIteratorTest" time="0.03" displayname="testIteratorInterface" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.PrefetchIteratorTest]/[test:testIteratorInterface(org.jgrapht.util.PrefetchIteratorTest)]"/>
      <testcase name="testEnumInterface" classname="org.jgrapht.util.PrefetchIteratorTest" time="0.001" displayname="testEnumInterface" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.PrefetchIteratorTest]/[test:testEnumInterface(org.jgrapht.util.PrefetchIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.PreferentialAttachmentIndexLinkPredictionTest" time="0.026" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.PreferentialAttachmentIndexLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.PreferentialAttachmentIndexLinkPredictionTest" time="0.026" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.PreferentialAttachmentIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.PreferentialAttachmentIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.335" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]">
      <testcase name="testCubicalGraph" classname="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.234" displayname="testCubicalGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]/[test:testCubicalGraph(org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest)]"/>
      <testcase name="testDuererGraphGraph" classname="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.08" displayname="testDuererGraphGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]/[test:testDuererGraphGraph(org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest)]"/>
      <testcase name="testNauruGraphGraph" classname="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.009" displayname="testNauruGraphGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]/[test:testNauruGraphGraph(org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest)]"/>
      <testcase name="testPetersenGraph" classname="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.001" displayname="testPetersenGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]/[test:testPetersenGraph(org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest)]"/>
      <testcase name="testDesarguesGraphGraph" classname="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.004" displayname="testDesarguesGraphGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]/[test:testDesarguesGraphGraph(org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest)]"/>
      <testcase name="testDodecahedronGraphGraph" classname="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.003" displayname="testDodecahedronGraphGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]/[test:testDodecahedronGraphGraph(org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest)]"/>
      <testcase name="testMoebiusKantorGraph" classname="org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest" time="0.001" displayname="testMoebiusKantorGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest]/[test:testMoebiusKantorGraph(org.jgrapht.generate.GeneralizedPetersenGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest" time="0.031" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest]">
      <testcase name="testDirectedWithUniform" classname="org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest" time="0.023" displayname="testDirectedWithUniform" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest]/[test:testDirectedWithUniform(org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest)]"/>
      <testcase name="testDirected" classname="org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest" time="0.005" displayname="testDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest]/[test:testDirected(org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest" time="0.002" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest]/[test:testUndirected(org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest" time="0.0" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.KleinbergSmallWorldGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.tour.TwoApproxMetricTSPTest" time="0.437" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.TwoApproxMetricTSPTest]">
      <testcase name="testStar" classname="org.jgrapht.alg.tour.TwoApproxMetricTSPTest" time="0.177" displayname="testStar" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.TwoApproxMetricTSPTest]/[test:testStar(org.jgrapht.alg.tour.TwoApproxMetricTSPTest)]"/>
      <testcase name="testComplete" classname="org.jgrapht.alg.tour.TwoApproxMetricTSPTest" time="0.257" displayname="testComplete" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.TwoApproxMetricTSPTest]/[test:testComplete(org.jgrapht.alg.tour.TwoApproxMetricTSPTest)]"/>
      <testcase name="testInvalidInstanceNotComplete" classname="org.jgrapht.alg.tour.TwoApproxMetricTSPTest" time="0.001" displayname="testInvalidInstanceNotComplete" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.TwoApproxMetricTSPTest]/[test:testInvalidInstanceNotComplete(org.jgrapht.alg.tour.TwoApproxMetricTSPTest)]"/>
      <testcase name="testInvalidInstanceDirected" classname="org.jgrapht.alg.tour.TwoApproxMetricTSPTest" time="0.001" displayname="testInvalidInstanceDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.TwoApproxMetricTSPTest]/[test:testInvalidInstanceDirected(org.jgrapht.alg.tour.TwoApproxMetricTSPTest)]"/>
      <testcase name="testWikiExampleSymmetric4Cities" classname="org.jgrapht.alg.tour.TwoApproxMetricTSPTest" time="0.001" displayname="testWikiExampleSymmetric4Cities" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.TwoApproxMetricTSPTest]/[test:testWikiExampleSymmetric4Cities(org.jgrapht.alg.tour.TwoApproxMetricTSPTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.BreadthFirstIteratorTest" time="0.276" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.BreadthFirstIteratorTest]">
      <testcase name="searchTreeTest" classname="org.jgrapht.traverse.BreadthFirstIteratorTest" time="0.176" displayname="searchTreeTest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.BreadthFirstIteratorTest]/[test:searchTreeTest(org.jgrapht.traverse.BreadthFirstIteratorTest)]"/>
      <testcase name="searchTreeDirectedCycleTest" classname="org.jgrapht.traverse.BreadthFirstIteratorTest" time="0.001" displayname="searchTreeDirectedCycleTest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.BreadthFirstIteratorTest]/[test:searchTreeDirectedCycleTest(org.jgrapht.traverse.BreadthFirstIteratorTest)]"/>
      <testcase name="testNonCrossComponentTraversal" classname="org.jgrapht.traverse.BreadthFirstIteratorTest" time="0.032" displayname="testNonCrossComponentTraversal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.BreadthFirstIteratorTest]/[test:testNonCrossComponentTraversal(org.jgrapht.traverse.BreadthFirstIteratorTest)]"/>
      <testcase name="testDirectedGraphNullConstructors" classname="org.jgrapht.traverse.BreadthFirstIteratorTest" time="0.009" displayname="testDirectedGraphNullConstructors" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.BreadthFirstIteratorTest]/[test:testDirectedGraphNullConstructors(org.jgrapht.traverse.BreadthFirstIteratorTest)]"/>
      <testcase name="testDirectedGraphViaCCI" classname="org.jgrapht.traverse.BreadthFirstIteratorTest" time="0.052" displayname="testDirectedGraphViaCCI" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.BreadthFirstIteratorTest]/[test:testDirectedGraphViaCCI(org.jgrapht.traverse.BreadthFirstIteratorTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.traverse.BreadthFirstIteratorTest" time="0.005" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.BreadthFirstIteratorTest]/[test:testDirectedGraph(org.jgrapht.traverse.BreadthFirstIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="1.452" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]">
      <testcase name="testPath1" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.042" displayname="testPath1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testPath1(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testPath2" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.001" displayname="testPath2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testPath2(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testNegativeAndZeroEdges1" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.0" displayname="testNegativeAndZeroEdges1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testNegativeAndZeroEdges1(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testNegativeAndZeroEdges2" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.0" displayname="testNegativeAndZeroEdges2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testNegativeAndZeroEdges2(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testSelfLoops" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.001" displayname="testSelfLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testSelfLoops(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="test3over4Approximation" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.001" displayname="test3over4Approximation" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:test3over4Approximation(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testBnGraph" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="1.376" displayname="testBnGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testBnGraph(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testNegativeAndZeroEdges" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.022" displayname="testNegativeAndZeroEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testNegativeAndZeroEdges(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testDisconnectedAndIsolatedVertices" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.001" displayname="testDisconnectedAndIsolatedVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testDisconnectedAndIsolatedVertices(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testMultiGraph" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.001" displayname="testMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testMultiGraph(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testDirected" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.001" displayname="testDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testDirected(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testGraph1(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
      <testcase name="testSelfLoop" classname="org.jgrapht.alg.matching.GreedyWeightedMatchingTest" time="0.0" displayname="testSelfLoop" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyWeightedMatchingTest]/[test:testSelfLoop(org.jgrapht.alg.matching.GreedyWeightedMatchingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest" time="0.024" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest]">
      <testcase name="testUndirectedWithGraphWhichAlreadyHasSomeVertices" classname="org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest" time="0.016" displayname="testUndirectedWithGraphWhichAlreadyHasSomeVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest]/[test:testUndirectedWithGraphWhichAlreadyHasSomeVertices(org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest)]"/>
      <testcase name="testDirectedWithOneInitialNode" classname="org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest" time="0.002" displayname="testDirectedWithOneInitialNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest]/[test:testDirectedWithOneInitialNode(org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest)]"/>
      <testcase name="testUndirectedWithOneInitialNode" classname="org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest" time="0.001" displayname="testUndirectedWithOneInitialNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest]/[test:testUndirectedWithOneInitialNode(org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest)]"/>
      <testcase name="testDirected" classname="org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest" time="0.001" displayname="testDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest]/[test:testDirected(org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest" time="0.001" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest]/[test:testUndirected(org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest" time="0.001" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.BarabasiAlbertGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="17.353" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]">
      <testcase name="testNoSourceGraph" classname="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="0.032" displayname="testNoSourceGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]/[test:testNoSourceGraph(org.jgrapht.alg.shortestpath.YenKShortestPathTest)]"/>
      <testcase name="testKEqualsZero" classname="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="0.002" displayname="testKEqualsZero" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]/[test:testKEqualsZero(org.jgrapht.alg.shortestpath.YenKShortestPathTest)]"/>
      <testcase name="testNegativeK" classname="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="0.001" displayname="testNegativeK" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]/[test:testNegativeK(org.jgrapht.alg.shortestpath.YenKShortestPathTest)]"/>
      <testcase name="testNoSinkGraph" classname="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="0.0" displayname="testNoSinkGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]/[test:testNoSinkGraph(org.jgrapht.alg.shortestpath.YenKShortestPathTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="17.303" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.YenKShortestPathTest)]"/>
      <testcase name="testCyclicGraph" classname="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="0.002" displayname="testCyclicGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]/[test:testCyclicGraph(org.jgrapht.alg.shortestpath.YenKShortestPathTest)]"/>
      <testcase name="testLessThanKPaths" classname="org.jgrapht.alg.shortestpath.YenKShortestPathTest" time="0.002" displayname="testLessThanKPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenKShortestPathTest]/[test:testLessThanKPaths(org.jgrapht.alg.shortestpath.YenKShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.FRQuadTreeTest" time="0.525" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.FRQuadTreeTest]">
      <testcase name="testQuadTree" classname="org.jgrapht.alg.drawing.FRQuadTreeTest" time="0.525" displayname="testQuadTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.FRQuadTreeTest]/[test:testQuadTree(org.jgrapht.alg.drawing.FRQuadTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest" time="0.19" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest]">
      <testcase name="testTreeEdgeIterator" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest" time="0.082" displayname="testTreeEdgeIterator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest]/[test:testTreeEdgeIterator(org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest)]"/>
      <testcase name="testAddMinusBlossom" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest" time="0.0" displayname="testAddMinusBlossom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest]/[test:testAddMinusBlossom(org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest)]"/>
      <testcase name="testTreeNodeIterator" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest" time="0.106" displayname="testTreeNodeIterator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest]/[test:testTreeNodeIterator(org.jgrapht.alg.matching.blossom.v5.BlossomVTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.connectivity.BlockCutpointGraphTest" time="0.49" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BlockCutpointGraphTest]">
      <testcase name="randomGraphTest" classname="org.jgrapht.alg.connectivity.BlockCutpointGraphTest" time="0.229" displayname="randomGraphTest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BlockCutpointGraphTest]/[test:randomGraphTest(org.jgrapht.alg.connectivity.BlockCutpointGraphTest)]"/>
      <testcase name="randomDirectedGraphTest" classname="org.jgrapht.alg.connectivity.BlockCutpointGraphTest" time="0.26" displayname="randomDirectedGraphTest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BlockCutpointGraphTest]/[test:randomDirectedGraphTest(org.jgrapht.alg.connectivity.BlockCutpointGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.GraphGeneratorTest" time="0.146" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]">
      <testcase name="testCompleteBipartiteGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.003" displayname="testCompleteBipartiteGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testCompleteBipartiteGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testStarGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.005" displayname="testStarGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testStarGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testScaleFreeGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.092" displayname="testScaleFreeGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testScaleFreeGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testCompleteGraphGeneratorWithPreexistingVertices" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.0" displayname="testCompleteGraphGeneratorWithPreexistingVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testCompleteGraphGeneratorWithPreexistingVertices(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testGridGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.006" displayname="testGridGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testGridGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testRingGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.007" displayname="testRingGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testRingGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testHyperCubeGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.025" displayname="testHyperCubeGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testHyperCubeGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testEmptyGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.002" displayname="testEmptyGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testEmptyGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testLinearGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.0" displayname="testLinearGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testLinearGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testCompleteGraphGenerator" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.001" displayname="testCompleteGraphGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testCompleteGraphGenerator(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testCompleteGraphGeneratorWithDirectedGraph" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.0" displayname="testCompleteGraphGeneratorWithDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testCompleteGraphGeneratorWithDirectedGraph(org.jgrapht.generate.GraphGeneratorTest)]"/>
      <testcase name="testCompleteBipartiteGraphGeneratorWithPreexistingVertices" classname="org.jgrapht.generate.GraphGeneratorTest" time="0.001" displayname="testCompleteBipartiteGraphGeneratorWithPreexistingVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GraphGeneratorTest]/[test:testCompleteBipartiteGraphGeneratorWithPreexistingVertices(org.jgrapht.generate.GraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]">
      <testcase name="testDSaturNonOptimal" classname="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.074" displayname="testDSaturNonOptimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]/[test:testDSaturNonOptimal(org.jgrapht.alg.color.RandomGreedyColoringTest)]"/>
      <testcase name="testRandomFixedSeed17" classname="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.026" displayname="testRandomFixedSeed17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]/[test:testRandomFixedSeed17(org.jgrapht.alg.color.RandomGreedyColoringTest)]"/>
      <testcase name="testMyciel3" classname="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.0" displayname="testMyciel3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]/[test:testMyciel3(org.jgrapht.alg.color.RandomGreedyColoringTest)]"/>
      <testcase name="testMyciel4" classname="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.001" displayname="testMyciel4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]/[test:testMyciel4(org.jgrapht.alg.color.RandomGreedyColoringTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.001" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]/[test:testGraph1(org.jgrapht.alg.color.RandomGreedyColoringTest)]"/>
      <testcase name="testRandom" classname="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.017" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]/[test:testRandom(org.jgrapht.alg.color.RandomGreedyColoringTest)]"/>
      <testcase name="testCompleteGraph" classname="org.jgrapht.alg.color.RandomGreedyColoringTest" time="0.006" displayname="testCompleteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoringTest]/[test:testCompleteGraph(org.jgrapht.alg.color.RandomGreedyColoringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="22.205" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.005" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testEmptyGraph(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testEmptySetOfRoots" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.0" displayname="testEmptySetOfRoots" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testEmptySetOfRoots(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testOneNode" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.005" displayname="testOneNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testOneNode(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testInvalidNode" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.001" displayname="testInvalidNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testInvalidNode(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testBinaryTree" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.002" displayname="testBinaryTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testBinaryTree(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.001" displayname="testDisconnectSmallGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testDisconnectSmallGraph(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testSmallTree" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.002" displayname="testSmallTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testSmallTree(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testGraphAllPossibleQueries" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.103" displayname="testGraphAllPossibleQueries" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testGraphAllPossibleQueries(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph2" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.001" displayname="testDisconnectSmallGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testDisconnectSmallGraph2(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree2" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.001" displayname="testTwoRootsInTheSameTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testTwoRootsInTheSameTree2(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="randomHugeConnectedTree" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="4.903" displayname="randomHugeConnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:randomHugeConnectedTree(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.001" displayname="testTwoRootsInTheSameTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testTwoRootsInTheSameTree(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testSmallDisconnectedTrees" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="8.359" displayname="testSmallDisconnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testSmallDisconnectedTrees(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testSmallTree2" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.0" displayname="testSmallTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testSmallTree2(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testRootNotInGraph" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.002" displayname="testRootNotInGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testRootNotInGraph(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testNotExploredNode" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.0" displayname="testNotExploredNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testNotExploredNode(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testLongChain" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.395" displayname="testLongChain" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testLongChain(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="randomHugePossiblyDisconnectedTree" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="3.686" displayname="randomHugePossiblyDisconnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:randomHugePossiblyDisconnectedTree(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testNonBinaryTreeBatch" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="0.001" displayname="testNonBinaryTreeBatch" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testNonBinaryTreeBatch(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
      <testcase name="testSmallConnectedTrees" classname="org.jgrapht.alg.lca.TarjanLCAFinderTest" time="4.712" displayname="testSmallConnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.TarjanLCAFinderTest]/[test:testSmallConnectedTrees(org.jgrapht.alg.lca.TarjanLCAFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.026" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]">
      <testcase name="testWikiGraph" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.003" displayname="testWikiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testWikiGraph(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testMultiGraph2" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.002" displayname="testMultiGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testMultiGraph2(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testConnectedComponents1" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.01" displayname="testConnectedComponents1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testConnectedComponents1(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testBiconnected" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.003" displayname="testBiconnected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testBiconnected(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testBorderCases" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.001" displayname="testBorderCases" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testBorderCases(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testNotBiconnected" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.003" displayname="testNotBiconnected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testNotBiconnected(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testMultiGraph" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.001" displayname="testMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testMultiGraph(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testLinearGraph" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.001" displayname="testLinearGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testLinearGraph(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
      <testcase name="testGithubIssueBug798" classname="org.jgrapht.alg.connectivity.BiconnectivityInspectorTest" time="0.001" displayname="testGithubIssueBug798" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.BiconnectivityInspectorTest]/[test:testGithubIssueBug798(org.jgrapht.alg.connectivity.BiconnectivityInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="14.386" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]">
      <testcase name="testUndirectedEulerian1" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.069" displayname="testUndirectedEulerian1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedEulerian1(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedEulerian2" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.003" displayname="testUndirectedEulerian2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedEulerian2(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedEulerian3" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.002" displayname="testUndirectedEulerian3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedEulerian3(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedEulerian4" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.0" displayname="testUndirectedEulerian4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedEulerian4(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedEulerian5" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testUndirectedEulerian5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedEulerian5(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedEulerian6" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testUndirectedEulerian6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedEulerian6(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedEulerian7" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.0" displayname="testUndirectedEulerian7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedEulerian7(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEmptyEulerian" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testEmptyEulerian" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEmptyEulerian(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleDirected1" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.014" displayname="testEulerianCycleDirected1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleDirected1(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleDirected2" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.002" displayname="testEulerianCycleDirected2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleDirected2(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleDirected3" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testEulerianCycleDirected3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleDirected3(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleDirected4" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testEulerianCycleDirected4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleDirected4(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleDirected5" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.002" displayname="testEulerianCycleDirected5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleDirected5(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEmptyWithSingleVertexUndirected" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.004" displayname="testEmptyWithSingleVertexUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEmptyWithSingleVertexUndirected(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleUndirectedVertexList" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.054" displayname="testEulerianCycleUndirectedVertexList" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleUndirectedVertexList(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedDisconnectedNonEulerian" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.004" displayname="testUndirectedDisconnectedNonEulerian" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedDisconnectedNonEulerian(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testDirectedEulerian1" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testDirectedEulerian1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testDirectedEulerian1(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testDirectedEulerian2" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testDirectedEulerian2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testDirectedEulerian2(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testDirectedEulerian3" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.003" displayname="testDirectedEulerian3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testDirectedEulerian3(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleDirected" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="4.457" displayname="testEulerianCycleDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleDirected(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testRandomUndirected" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="2.838" displayname="testRandomUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testRandomUndirected(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testRandomUndirectedFixedSeed" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="1.668" displayname="testRandomUndirectedFixedSeed" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testRandomUndirectedFixedSeed(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEmptyMultipleVerticesDirected" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testEmptyMultipleVerticesDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEmptyMultipleVerticesDirected(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testDirectedDisconnectedEulerian" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.007" displayname="testDirectedDisconnectedEulerian" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testDirectedDisconnectedEulerian(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testNullEulerian" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.0" displayname="testNullEulerian" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testNullEulerian(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testPseudograph" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.002" displayname="testPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testPseudograph(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testUndirectedDisconnectedEulerian" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.0" displayname="testUndirectedDisconnectedEulerian" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testUndirectedDisconnectedEulerian(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testRandomDirected" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="2.552" displayname="testRandomDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testRandomDirected(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testDirectedDisconnectedNonEulerian" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.0" displayname="testDirectedDisconnectedNonEulerian" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testDirectedDisconnectedNonEulerian(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEmptyMultipleVerticesUndirected" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.0" displayname="testEmptyMultipleVerticesUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEmptyMultipleVerticesUndirected(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleUndirected1" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testEulerianCycleUndirected1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleUndirected1(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleUndirected2" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.001" displayname="testEulerianCycleUndirected2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleUndirected2(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleUndirected3" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.894" displayname="testEulerianCycleUndirected3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleUndirected3(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEulerianCycleUndirected4" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.003" displayname="testEulerianCycleUndirected4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEulerianCycleUndirected4(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testRandomDirectedFixedSeed" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="1.776" displayname="testRandomDirectedFixedSeed" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testRandomDirectedFixedSeed(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
      <testcase name="testEmptyWithSingleVertexDirected" classname="org.jgrapht.alg.cycle.HierholzerEulerianCycleTest" time="0.0" displayname="testEmptyWithSingleVertexDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HierholzerEulerianCycleTest]/[test:testEmptyWithSingleVertexDirected(org.jgrapht.alg.cycle.HierholzerEulerianCycleTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.tour.PalmerHamiltonianCycleTest" time="0.016" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.PalmerHamiltonianCycleTest]">
      <testcase name="testLineGraph" classname="org.jgrapht.alg.tour.PalmerHamiltonianCycleTest" time="0.016" displayname="testLineGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.PalmerHamiltonianCycleTest]/[test:testLineGraph(org.jgrapht.alg.tour.PalmerHamiltonianCycleTest)]"/>
      <testcase name="testSmallGraph" classname="org.jgrapht.alg.tour.PalmerHamiltonianCycleTest" time="0.0" displayname="testSmallGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.PalmerHamiltonianCycleTest]/[test:testSmallGraph(org.jgrapht.alg.tour.PalmerHamiltonianCycleTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.DijkstraShortestPathTest" time="0.157" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraShortestPathTest]">
      <testcase name="testGetPathWeight" classname="org.jgrapht.alg.shortestpath.DijkstraShortestPathTest" time="0.119" displayname="testGetPathWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraShortestPathTest]/[test:testGetPathWeight(org.jgrapht.alg.shortestpath.DijkstraShortestPathTest)]"/>
      <testcase name="testNonNegativeWeights" classname="org.jgrapht.alg.shortestpath.DijkstraShortestPathTest" time="0.004" displayname="testNonNegativeWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraShortestPathTest]/[test:testNonNegativeWeights(org.jgrapht.alg.shortestpath.DijkstraShortestPathTest)]"/>
      <testcase name="testShortestPathTree" classname="org.jgrapht.alg.shortestpath.DijkstraShortestPathTest" time="0.026" displayname="testShortestPathTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraShortestPathTest]/[test:testShortestPathTree(org.jgrapht.alg.shortestpath.DijkstraShortestPathTest)]"/>
      <testcase name="testConstructor" classname="org.jgrapht.alg.shortestpath.DijkstraShortestPathTest" time="0.003" displayname="testConstructor" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraShortestPathTest]/[test:testConstructor(org.jgrapht.alg.shortestpath.DijkstraShortestPathTest)]"/>
      <testcase name="testPathBetween" classname="org.jgrapht.alg.shortestpath.DijkstraShortestPathTest" time="0.001" displayname="testPathBetween" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraShortestPathTest]/[test:testPathBetween(org.jgrapht.alg.shortestpath.DijkstraShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="3.463" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]">
      <testcase name="testUndirectedWithGraphWhichAlreadyHasSomeVertices" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="0.001" displayname="testUndirectedWithGraphWhichAlreadyHasSomeVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testUndirectedWithGraphWhichAlreadyHasSomeVertices(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
      <testcase name="testNoAdditionalNodes" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="0.001" displayname="testNoAdditionalNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testNoAdditionalNodes(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
      <testcase name="testRandomTrees" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="3.456" displayname="testRandomTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testRandomTrees(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
      <testcase name="testDirectedWithOneInitialNode" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="0.001" displayname="testDirectedWithOneInitialNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testDirectedWithOneInitialNode(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
      <testcase name="testUndirectedWithOneInitialNode" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="0.001" displayname="testUndirectedWithOneInitialNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testUndirectedWithOneInitialNode(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
      <testcase name="testDirected" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="0.001" displayname="testDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testDirected(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="0.001" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testUndirected(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.BarabasiAlbertForestGeneratorTest" time="0.0" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.BarabasiAlbertForestGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.BarabasiAlbertForestGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest" time="1.908" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest]">
      <testcase name="testRandomGraphs2" classname="org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest" time="0.014" displayname="testRandomGraphs2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest]/[test:testRandomGraphs2(org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest)]"/>
      <testcase name="testRandomGraphs" classname="org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest" time="1.894" displayname="testRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest]/[test:testRandomGraphs(org.jgrapht.alg.matching.GreedyMaximumCardinalityMatchingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.EdgeSelectionTest" time="0.246" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.EdgeSelectionTest]">
      <testcase name="testEdgeSelectionOverride" classname="org.jgrapht.traverse.EdgeSelectionTest" time="0.246" displayname="testEdgeSelectionOverride" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.EdgeSelectionTest]/[test:testEdgeSelectionOverride(org.jgrapht.traverse.EdgeSelectionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest" time="7.633" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest]">
      <testcase name="testOneVertex" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest" time="0.3" displayname="testOneVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest]/[test:testOneVertex(org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest" time="0.002" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest" time="7.328" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest)]"/>
      <testcase name="testThreeVertices" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest" time="0.003" displayname="testThreeVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest]/[test:testThreeVertices(org.jgrapht.alg.shortestpath.TransitNodeRoutingPrecomputationTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.AsGraphUnionTest" time="0.054" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsGraphUnionTest]">
      <testcase name="testMixedGraphUnion" classname="org.jgrapht.graph.AsGraphUnionTest" time="0.046" displayname="testMixedGraphUnion" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsGraphUnionTest]/[test:testMixedGraphUnion(org.jgrapht.graph.AsGraphUnionTest)]"/>
      <testcase name="testDirectedGraphUnion" classname="org.jgrapht.graph.AsGraphUnionTest" time="0.001" displayname="testDirectedGraphUnion" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsGraphUnionTest]/[test:testDirectedGraphUnion(org.jgrapht.graph.AsGraphUnionTest)]"/>
      <testcase name="testWeightCombiner" classname="org.jgrapht.graph.AsGraphUnionTest" time="0.005" displayname="testWeightCombiner" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsGraphUnionTest]/[test:testWeightCombiner(org.jgrapht.graph.AsGraphUnionTest)]"/>
      <testcase name="testUndirectedGraphUnion" classname="org.jgrapht.graph.AsGraphUnionTest" time="0.001" displayname="testUndirectedGraphUnion" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsGraphUnionTest]/[test:testUndirectedGraphUnion(org.jgrapht.graph.AsGraphUnionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="1.653" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]">
      <testcase name="testNullGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.004" displayname="testNullGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testNullGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testTriangleDirectedGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.001" displayname="testTriangleDirectedGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testTriangleDirectedGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testSpecial1UndirectedGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.0" displayname="testSpecial1UndirectedGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testSpecial1UndirectedGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testTriangleNonCompleteDirectedGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.001" displayname="testTriangleNonCompleteDirectedGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testTriangleNonCompleteDirectedGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testSpecial2UndirectedGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.001" displayname="testSpecial2UndirectedGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testSpecial2UndirectedGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testSpecial2DirectedGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.001" displayname="testSpecial2DirectedGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testSpecial2DirectedGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testSpecial3UndirectedGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.001" displayname="testSpecial3UndirectedGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testSpecial3UndirectedGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testOneNodeClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.0" displayname="testOneNodeClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testOneNodeClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testUndirected2ClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.003" displayname="testUndirected2ClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testUndirected2ClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testTwoConectedNodesClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.001" displayname="testTwoConectedNodesClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testTwoConectedNodesClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testUndirectedClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.001" displayname="testUndirectedClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testUndirectedClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testTriangleGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.002" displayname="testTriangleGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testTriangleGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testCompleteGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="1.479" displayname="testCompleteGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testCompleteGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testStarGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.008" displayname="testStarGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testStarGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
      <testcase name="testSpecial1DirectedGraphClusteringCoefficient" classname="org.jgrapht.alg.scoring.ClusteringCoefficientTest" time="0.002" displayname="testSpecial1DirectedGraphClusteringCoefficient" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClusteringCoefficientTest]/[test:testSpecial1DirectedGraphClusteringCoefficient(org.jgrapht.alg.scoring.ClusteringCoefficientTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest" time="0.074" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest]">
      <testcase name="testNoSourceGraph" classname="org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest" time="0.007" displayname="testNoSourceGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest]/[test:testNoSourceGraph(org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest)]"/>
      <testcase name="testKEqualsZero" classname="org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest" time="0.001" displayname="testKEqualsZero" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest]/[test:testKEqualsZero(org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest)]"/>
      <testcase name="testNegativeK" classname="org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest" time="0.001" displayname="testNegativeK" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest]/[test:testNegativeK(org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest)]"/>
      <testcase name="testNoSinkGraph" classname="org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest" time="0.001" displayname="testNoSinkGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest]/[test:testNoSinkGraph(org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest)]"/>
      <testcase name="testCyclicGraph" classname="org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest" time="0.063" displayname="testCyclicGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest]/[test:testCyclicGraph(org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest)]"/>
      <testcase name="testLessThanKPaths" classname="org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest" time="0.001" displayname="testLessThanKPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest]/[test:testLessThanKPaths(org.jgrapht.alg.shortestpath.EppsteinKShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.AStarShortestPathTest" time="0.105" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AStarShortestPathTest]">
      <testcase name="testLabyrinth1" classname="org.jgrapht.alg.shortestpath.AStarShortestPathTest" time="0.099" displayname="testLabyrinth1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AStarShortestPathTest]/[test:testLabyrinth1(org.jgrapht.alg.shortestpath.AStarShortestPathTest)]"/>
      <testcase name="testLabyrinth2" classname="org.jgrapht.alg.shortestpath.AStarShortestPathTest" time="0.003" displayname="testLabyrinth2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AStarShortestPathTest]/[test:testLabyrinth2(org.jgrapht.alg.shortestpath.AStarShortestPathTest)]"/>
      <testcase name="testMultiGraph" classname="org.jgrapht.alg.shortestpath.AStarShortestPathTest" time="0.001" displayname="testMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AStarShortestPathTest]/[test:testMultiGraph(org.jgrapht.alg.shortestpath.AStarShortestPathTest)]"/>
      <testcase name="testInconsistentHeuristic" classname="org.jgrapht.alg.shortestpath.AStarShortestPathTest" time="0.002" displayname="testInconsistentHeuristic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AStarShortestPathTest]/[test:testInconsistentHeuristic(org.jgrapht.alg.shortestpath.AStarShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.PruferTreeGeneratorTest" time="13.174" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]">
      <testcase name="testOneVertex" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.005" displayname="testOneVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testOneVertex(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testRandomSizes" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="10.85" displayname="testRandomSizes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testRandomSizes(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testEmptyPruferSequence" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.0" displayname="testEmptyPruferSequence" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testEmptyPruferSequence(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testInvalidPruferSequence" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.0" displayname="testInvalidPruferSequence" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testInvalidPruferSequence(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testHugeSize" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="2.295" displayname="testHugeSize" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testHugeSize(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testZeroVertices" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.0" displayname="testZeroVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testZeroVertices(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testPruferSequence" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.004" displayname="testPruferSequence" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testPruferSequence(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testNullPruferSequence" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.0" displayname="testNullPruferSequence" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testNullPruferSequence(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testExistingVertices" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.0" displayname="testExistingVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testExistingVertices(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testNullGraph" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.0" displayname="testNullGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testNullGraph(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.014" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testDirectedGraph(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
      <testcase name="testNullRNG" classname="org.jgrapht.generate.PruferTreeGeneratorTest" time="0.0" displayname="testNullRNG" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PruferTreeGeneratorTest]/[test:testNullRNG(org.jgrapht.generate.PruferTreeGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.007" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]">
      <testcase name="testSimpleGraph" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.003" displayname="testSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testSimpleGraph(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
      <testcase name="testDirectedSimpleGraph" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.001" displayname="testDirectedSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testDirectedSimpleGraph(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
      <testcase name="testDirectedMultiGraph" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.0" displayname="testDirectedMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testDirectedMultiGraph(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
      <testcase name="testUndirectedTwoEdges" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.001" displayname="testUndirectedTwoEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testUndirectedTwoEdges(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
      <testcase name="testMultiGraph" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.0" displayname="testMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testMultiGraph(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
      <testcase name="testDirected" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.0" displayname="testDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testDirected(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.0" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testUndirected(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest" time="0.001" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.LinearizedChordDiagramGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.util.PairTest" time="0.009" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]">
      <testcase name="testPairEquals" classname="org.jgrapht.alg.util.PairTest" time="0.002" displayname="testPairEquals" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testPairEquals(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testUnorderedPairWithNull" classname="org.jgrapht.alg.util.PairTest" time="0.0" displayname="testUnorderedPairWithNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testUnorderedPairWithNull(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testPair" classname="org.jgrapht.alg.util.PairTest" time="0.001" displayname="testPair" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testPair(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testPairWithNull" classname="org.jgrapht.alg.util.PairTest" time="0.0" displayname="testPairWithNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testPairWithNull(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testUnorderedPairEqualsWithNull" classname="org.jgrapht.alg.util.PairTest" time="0.001" displayname="testUnorderedPairEqualsWithNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testUnorderedPairEqualsWithNull(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testPairEqualsWithNull" classname="org.jgrapht.alg.util.PairTest" time="0.0" displayname="testPairEqualsWithNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testPairEqualsWithNull(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testUnorderedPair" classname="org.jgrapht.alg.util.PairTest" time="0.001" displayname="testUnorderedPair" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testUnorderedPair(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testUnorderedPairEquals" classname="org.jgrapht.alg.util.PairTest" time="0.0" displayname="testUnorderedPairEquals" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testUnorderedPairEquals(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testUnorderedSameHashCode" classname="org.jgrapht.alg.util.PairTest" time="0.001" displayname="testUnorderedSameHashCode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testUnorderedSameHashCode(org.jgrapht.alg.util.PairTest)]"/>
      <testcase name="testDifferentTypesEqualsWithNull" classname="org.jgrapht.alg.util.PairTest" time="0.0" displayname="testDifferentTypesEqualsWithNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.PairTest]/[test:testDifferentTypesEqualsWithNull(org.jgrapht.alg.util.PairTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.util.DoublyLinkedListTest" time="1.442" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]">
      <testsuite name="[List with size 0]" time="0.548" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.054" displayname="testElement[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testElement%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.029" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.012" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddNode_freeNode_nodeAddedToList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_inTheMiddle[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddInt_inTheMiddle%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPeekFirst[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPeekFirst%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOfferLast[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testOfferLast%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testGetFirst[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetFirst%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.007" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddLast[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddLast%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.007" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.089" displayname="testNodeOf_elementNotInList_null[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testPop[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPop%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_atIndexSize[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddInt_atIndexSize%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testClear%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOffer[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testOffer%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPeek%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testPoll[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPoll%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPush[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPush%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testSize[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testSize%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.012" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testContainsNode_nodeInOtherList_false[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.008" displayname="testRemoveFirst[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveFirst%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.005" displayname="testListIteratorE[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorE%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPrepend%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferFirst[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testOfferFirst%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testCircularIterator[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testCircularIterator%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testDescendingIterator[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testDescendingIterator%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddFirst[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddFirst%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testListIterator_iterateBehindTail[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIterator_iterateBehindTail%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementFirst_nullValue_valueAdded[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testGetLast[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetLast%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetNode%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndex0[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveInt_atIndex0%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testRemoveInt_inTheMiddle[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testReverseCircularIterator[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testReverseCircularIterator%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.099" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.007" displayname="testGetLastNode[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetLastNode%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementLast[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddElementLast%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testContainsNode_nodeInNoList_false[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.004" displayname="testRemoveLast[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveLast%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.005" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPollFirst[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPollFirst%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndex0[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddInt_atIndex0%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testMoveFrom[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testMoveFrom%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPeekLast%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirstOccurrence[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveFirstOccurrence%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testNodeOf_elementInList_nodeOfElement[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveLastOccurrence[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveLastOccurrence%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testLastNodeOf[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testLastNodeOf%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetFirstNode%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAppend[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAppend%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPollLast[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testPollLast%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetInt[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testGetInt%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testInvert[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testInvert%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_iterateBeforeHead[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testContainsNode_nodeInList_true[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testContainsNode_nodeInList_true%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testIsEmpty%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemove[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemove%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testIterator%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.073" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 0%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 0%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 1]" time="0.164" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testElement[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testElement%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.03" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_freeNode_nodeAddedToList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_inTheMiddle[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddInt_inTheMiddle%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekFirst[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPeekFirst%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOfferLast[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testOfferLast%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetFirst[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetFirst%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddLast[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddLast%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementNotInList_null[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.005" displayname="testPop[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPop%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndexSize[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddInt_atIndexSize%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testClear%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOffer[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testOffer%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPeek%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPoll[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPoll%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPush[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPush%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testSize[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testSize%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirst[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveFirst%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorE[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorE%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPrepend[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPrepend%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferFirst[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testOfferFirst%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testCircularIterator[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testCircularIterator%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testDescendingIterator[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testDescendingIterator%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddFirst[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddFirst%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_iterateBehindTail[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIterator_iterateBehindTail%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nullValue_valueAdded[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLast[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetLast%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetNode%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndex0[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveInt_atIndex0%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_inTheMiddle[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testReverseCircularIterator[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testReverseCircularIterator%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetLastNode[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetLastNode%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementLast[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddElementLast%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testContainsNode_nodeInNoList_false[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.044" displayname="testRemoveLast[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveLast%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPollFirst[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPollFirst%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testAddInt_atIndex0[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddInt_atIndex0%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testMoveFrom[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testMoveFrom%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPeekLast%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveFirstOccurrence[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveFirstOccurrence%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementInList_nodeOfElement[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLastOccurrence[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveLastOccurrence%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testLastNodeOf[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testLastNodeOf%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetFirstNode%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAppend[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAppend%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPollLast[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testPollLast%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetInt[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testGetInt%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testInvert%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_iterateBeforeHead[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInList_true[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testContainsNode_nodeInList_true%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testIsEmpty%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemove%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testIterator%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 1%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 1%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 2]" time="0.132" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testElement[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testElement%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_freeNode_nodeAddedToList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_inTheMiddle[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddInt_inTheMiddle%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekFirst[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPeekFirst%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferLast[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testOfferLast%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirst[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetFirst%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddLast[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddLast%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementNotInList_null[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPop[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPop%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_atIndexSize[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddInt_atIndexSize%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testClear%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOffer[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testOffer%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPeek%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPoll[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPoll%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPush[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPush%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testSize[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testSize%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testRemoveFirst[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveFirst%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorE[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorE%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPrepend%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOfferFirst[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testOfferFirst%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testCircularIterator[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testCircularIterator%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testDescendingIterator[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testDescendingIterator%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddFirst[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddFirst%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBehindTail[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIterator_iterateBehindTail%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nullValue_valueAdded[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetLast[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetLast%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetNode%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveInt_atIndex0[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveInt_atIndex0%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_inTheMiddle[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testReverseCircularIterator[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testReverseCircularIterator%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLastNode[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetLastNode%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementLast[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddElementLast%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInNoList_false[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLast[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveLast%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollFirst[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPollFirst%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_atIndex0[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddInt_atIndex0%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testMoveFrom[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testMoveFrom%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPeekLast%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveFirstOccurrence[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveFirstOccurrence%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementInList_nodeOfElement[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLastOccurrence[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveLastOccurrence%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testLastNodeOf[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testLastNodeOf%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetFirstNode%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAppend[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAppend%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollLast[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testPollLast%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.005" displayname="testGetInt[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testGetInt%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testInvert%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBeforeHead[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testContainsNode_nodeInList_true[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testContainsNode_nodeInList_true%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testIsEmpty%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemove%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIterator[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testIterator%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 2%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 2%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 3]" time="0.114" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testElement[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testElement%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNode_freeNode_nodeAddedToList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_inTheMiddle[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddInt_inTheMiddle%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekFirst[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPeekFirst%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferLast[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testOfferLast%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirst[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetFirst%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddLast[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddLast%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.045" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.005" displayname="testNodeOf_elementNotInList_null[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPop[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPop%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndexSize[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddInt_atIndexSize%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testClear%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOffer[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testOffer%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPeek%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPoll[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPoll%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPush[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPush%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testSize[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testSize%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.026" displayname="testRemoveFirst[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveFirst%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorE[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorE%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPrepend%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferFirst[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testOfferFirst%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testCircularIterator[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testCircularIterator%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testDescendingIterator[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testDescendingIterator%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddFirst[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddFirst%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBehindTail[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIterator_iterateBehindTail%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nullValue_valueAdded[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetLast[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetLast%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetNode%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndex0[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveInt_atIndex0%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_inTheMiddle[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testReverseCircularIterator[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testReverseCircularIterator%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetLastNode[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetLastNode%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementLast[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddElementLast%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInNoList_false[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLast[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveLast%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollFirst[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPollFirst%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_atIndex0[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddInt_atIndex0%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testMoveFrom[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testMoveFrom%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPeekLast%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveFirstOccurrence[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveFirstOccurrence%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementInList_nodeOfElement[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLastOccurrence[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveLastOccurrence%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testLastNodeOf[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testLastNodeOf%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetFirstNode%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAppend[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAppend%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollLast[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testPollLast%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetInt[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testGetInt%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testInvert%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBeforeHead[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInList_true[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testContainsNode_nodeInList_true%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testIsEmpty%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemove%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testIterator%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 3%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 3%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 4]" time="0.119" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testElement[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testElement%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_freeNode_nodeAddedToList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.022" displayname="testAddInt_inTheMiddle[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddInt_inTheMiddle%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPeekFirst[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPeekFirst%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferLast[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testOfferLast%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirst[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetFirst%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddLast[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddLast%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.004" displayname="testNodeOf_elementNotInList_null[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPop[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPop%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndexSize[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddInt_atIndexSize%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testClear%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOffer[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testOffer%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPeek%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testPoll[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPoll%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPush[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPush%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testSize[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testSize%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirst[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveFirst%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorE[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorE%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPrepend%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferFirst[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testOfferFirst%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testCircularIterator[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testCircularIterator%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testDescendingIterator[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testDescendingIterator%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddFirst[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddFirst%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBehindTail[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIterator_iterateBehindTail%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nullValue_valueAdded[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetLast[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetLast%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetNode%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveInt_atIndex0[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveInt_atIndex0%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_inTheMiddle[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testReverseCircularIterator[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testReverseCircularIterator%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLastNode[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetLastNode%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementLast[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddElementLast%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInNoList_false[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLast[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveLast%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.006" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollFirst[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPollFirst%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndex0[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddInt_atIndex0%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testMoveFrom[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testMoveFrom%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPeekLast[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPeekLast%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.008" displayname="testRemoveFirstOccurrence[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveFirstOccurrence%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testNodeOf_elementInList_nodeOfElement[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLastOccurrence[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveLastOccurrence%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testLastNodeOf[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testLastNodeOf%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetFirstNode%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAppend[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAppend%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollLast[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testPollLast%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetInt[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testGetInt%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testInvert%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBeforeHead[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInList_true[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testContainsNode_nodeInList_true%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testIsEmpty%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemove%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.02" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testIterator%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 4%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 4%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 5]" time="0.142" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testElement[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testElement%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.039" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNode_freeNode_nodeAddedToList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_inTheMiddle[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddInt_inTheMiddle%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekFirst[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPeekFirst%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOfferLast[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testOfferLast%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.005" displayname="testGetFirst[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetFirst%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddLast[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddLast%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testNodeOf_elementNotInList_null[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPop[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPop%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_atIndexSize[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddInt_atIndexSize%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testClear%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOffer[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testOffer%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPeek%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPoll[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPoll%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPush[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPush%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testSize[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testSize%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirst[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveFirst%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorE[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorE%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPrepend%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOfferFirst[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testOfferFirst%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testCircularIterator[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testCircularIterator%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testDescendingIterator[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testDescendingIterator%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddFirst[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddFirst%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBehindTail[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIterator_iterateBehindTail%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nullValue_valueAdded[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetLast[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetLast%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetNode%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndex0[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveInt_atIndex0%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_inTheMiddle[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testReverseCircularIterator[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testReverseCircularIterator%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLastNode[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetLastNode%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementLast[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddElementLast%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInNoList_false[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLast[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveLast%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollFirst[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPollFirst%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_atIndex0[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddInt_atIndex0%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testMoveFrom[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testMoveFrom%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPeekLast%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveFirstOccurrence[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveFirstOccurrence%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementInList_nodeOfElement[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLastOccurrence[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveLastOccurrence%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testLastNodeOf[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testLastNodeOf%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetFirstNode%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAppend[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAppend%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollLast[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testPollLast%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetInt[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testGetInt%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testInvert%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBeforeHead[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInList_true[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testContainsNode_nodeInList_true%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testIsEmpty%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemove%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testIterator%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.043" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 5%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 5%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 6]" time="0.106" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testElement[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testElement%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_freeNode_nodeAddedToList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_inTheMiddle[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddInt_inTheMiddle%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekFirst[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPeekFirst%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferLast[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testOfferLast%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetFirst[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetFirst%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddLast[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddLast%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementNotInList_null[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPop[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPop%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndexSize[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddInt_atIndexSize%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testClear%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOffer[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testOffer%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPeek%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPoll[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPoll%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPush[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPush%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testSize[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testSize%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirst[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveFirst%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorE[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorE%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPrepend%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOfferFirst[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testOfferFirst%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testCircularIterator[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testCircularIterator%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testDescendingIterator[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testDescendingIterator%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddFirst[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddFirst%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_iterateBehindTail[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIterator_iterateBehindTail%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.002" displayname="testAddElementFirst_nullValue_valueAdded[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLast[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetLast%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetNode%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndex0[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveInt_atIndex0%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveInt_inTheMiddle[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testReverseCircularIterator[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testReverseCircularIterator%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLastNode[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetLastNode%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementLast[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddElementLast%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testContainsNode_nodeInNoList_false[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLast[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveLast%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollFirst[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPollFirst%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndex0[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddInt_atIndex0%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testMoveFrom[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testMoveFrom%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPeekLast%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirstOccurrence[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveFirstOccurrence%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementInList_nodeOfElement[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLastOccurrence[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveLastOccurrence%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testLastNodeOf[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testLastNodeOf%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetFirstNode%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAppend[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAppend%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollLast[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testPollLast%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetInt[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testGetInt%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testInvert%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBeforeHead[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInList_true[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testContainsNode_nodeInList_true%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIsEmpty[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testIsEmpty%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemove%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testIterator%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.004" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.051" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 6%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 6%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 7]" time="0.033" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testElement[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testElement%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_freeNode_nodeAddedToList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_inTheMiddle[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddInt_inTheMiddle%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekFirst[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPeekFirst%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferLast[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testOfferLast%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirst[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetFirst%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddLast[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddLast%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementNotInList_null[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPop[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPop%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndexSize[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddInt_atIndexSize%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testClear%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOffer[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testOffer%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPeek[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPeek%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPoll[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPoll%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPush[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPush%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testSize[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testSize%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirst[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveFirst%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorE[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorE%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPrepend%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferFirst[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testOfferFirst%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testCircularIterator[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testCircularIterator%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testDescendingIterator[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testDescendingIterator%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddFirst[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddFirst%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBehindTail[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIterator_iterateBehindTail%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nullValue_valueAdded[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetLast[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetLast%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetNode%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndex0[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveInt_atIndex0%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveInt_inTheMiddle[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testReverseCircularIterator[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testReverseCircularIterator%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLastNode[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetLastNode%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementLast[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddElementLast%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInNoList_false[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLast[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveLast%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollFirst[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPollFirst%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndex0[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddInt_atIndex0%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testMoveFrom[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testMoveFrom%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPeekLast%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveFirstOccurrence[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveFirstOccurrence%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testNodeOf_elementInList_nodeOfElement[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveLastOccurrence[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveLastOccurrence%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testLastNodeOf[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testLastNodeOf%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testGetFirstNode[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetFirstNode%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAppend[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAppend%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollLast[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testPollLast%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetInt[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testGetInt%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testInvert%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBeforeHead[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInList_true[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testContainsNode_nodeInList_true%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testIsEmpty%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemove%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testIterator%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 7%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 7%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
      <testsuite name="[List with size 8]" time="0.082" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]">
        <testcase name="testElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testElement[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testElement%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeInOtherList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNode_nodeInOtherList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInOtherList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInOtherList_minusOne[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testIndexOfNode_nodeInOtherList_minusOne%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheEnd_emptyList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorRemove_clearListFromTheEnd_emptyList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setTwice_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setTwice_listWithReplacedElement[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_setTwice_listWithReplacedElement%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeBefore_nodeInOtherListBeforeNodeOfList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInList_indexOfNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInList_indexOfNode[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testIndexOfNode_nodeInList_indexOfNode%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInList_ElementAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInList_ElementAdded[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddElementBeforeNode_sucessorInList_ElementAdded%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNode_freeNode_nodeAddedToList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNode_freeNode_nodeAddedToList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_inTheMiddle[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddInt_inTheMiddle%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testPeekFirst[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPeekFirst%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOfferLast[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testOfferLast%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirst[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetFirst%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeNotInList_listUnchanged" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeNotInList_listUnchanged[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveNode_nodeNotInList_listUnchanged%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_freeNode_nodeAddedToList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeLast_freeNode_nodeAddedToList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddLast[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddLast%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterAdd_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setAfterAdd_IllegalstateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_setAfterAdd_IllegalstateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementNotInList_null" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testNodeOf_elementNotInList_null[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testNodeOf_elementNotInList_null%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPop" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPop[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPop%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentAdd_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentAdd_ConcurrentModificationException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIterator_concurrentAdd_ConcurrentModificationException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndexSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddInt_atIndexSize[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddInt_atIndexSize%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testClear" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testClear[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testClear%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeInOtherList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeLast_nodeInOtherList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOffer" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testOffer[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testOffer%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeek" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeek[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPeek%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPoll" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPoll[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPoll%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPush" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPush[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPush%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testSize" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testSize[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testSize%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIndexOfNode_nodeInNoList_minusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIndexOfNode_nodeInNoList_minusOne[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testIndexOfNode_nodeInNoList_minusOne%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexSize_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexSize_IndexOutOfBoundsException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetNode_indexSize_IndexOutOfBoundsException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInOtherList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInOtherList_false[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testContainsNode_nodeInOtherList_false%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirst[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveFirst%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNode_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNode_nodeOfThisList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNode_nodeOfThisList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorE" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorE[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorE%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromFront_emptyList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveNode_removeAllNodesInListFromFront_emptyList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPrepend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPrepend[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPrepend%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorInt_indexInTheMiddle_iteratorAtCorrectIndex%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testOfferFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testOfferFirst[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testOfferFirst%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testCircularIterator[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testCircularIterator%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testDescendingIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testDescendingIterator[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testDescendingIterator%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddFirst[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddFirst%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBehindTail" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIterator_iterateBehindTail[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIterator_iterateBehindTail%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeBefore_freeNodeBeforeFreeNode_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nullValue_valueAdded[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddElementFirst_nullValue_valueAdded%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLast[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetLast%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetNode%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInList_nodeAddedToList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndex0[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveInt_atIndex0%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_inTheMiddle" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_inTheMiddle[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveInt_inTheMiddle%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorNext_iterateForwardTroughCompleteList_ListNodesInOrder%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testReverseCircularIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testReverseCircularIterator[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testReverseCircularIterator%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementAtFront_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementAtFront_listWithReplacedElement[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_replaceElementAtFront_listWithReplacedElement%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.003" displayname="testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorPrevious_iterateBackwardTroughCompleteList_ListNodesInOrder%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheFront_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_clearListFromTheFront_emptyList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorRemove_clearListFromTheFront_emptyList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetLastNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetLastNode[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetLastNode%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_replaceElementInAtEnd_listWithReplacedElement%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_notMovedListIterator_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_notMovedListIterator_IllegalStateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorRemove_notMovedListIterator_IllegalStateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveInt_atIndexSizeMinusOne" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveInt_atIndexSizeMinusOne[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveInt_atIndexSizeMinusOne%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_setElementWithSubsequentRemove_listWithReplacedElement%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementLast[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddElementLast%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeBefore_nodeInThisListBeforeNodeOfList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInNoList_false" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInNoList_false[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testContainsNode_nodeInNoList_false%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_nodeInList_nodeRemoved" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_nodeInList_nodeRemoved[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveNode_nodeInList_nodeRemoved%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeBefore_freeNodeBeforeNodeInOtherList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveLast[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveLast%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_setAfterRemove_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorSet_setAfterRemove_IllegalstateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_setAfterRemove_IllegalstateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollFirst" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollFirst[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPollFirst%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_NotMovedListIterator_IllegalstateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_NotMovedListIterator_IllegalstateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_NotMovedListIterator_IllegalstateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddInt_atIndex0" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddInt_atIndex0[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddInt_atIndex0%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testMoveFrom" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testMoveFrom[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testMoveFrom%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveNode_removeAllNodesInListFromMiddle_emptyList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveNode_removeAllNodesInListFromMiddle_emptyList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorAdd_addElementBeforeEnd_listWithAdditionalElements%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetNode_indexNegative_IndexOutOfBoundsException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetNode_indexNegative_IndexOutOfBoundsException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetNode_indexNegative_IndexOutOfBoundsException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPeekLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPeekLast[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPeekLast%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeTwiceAfterNext_IllegalStateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorRemove_removeTwiceAfterNext_IllegalStateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveFirstOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveFirstOccurrence[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveFirstOccurrence%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testNodeOf_elementInList_nodeOfElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testNodeOf_elementInList_nodeOfElement[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testNodeOf_elementInList_nodeOfElement%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_concurrentRemove_ConcurrentModificationException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_concurrentRemove_ConcurrentModificationException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIterator_concurrentRemove_ConcurrentModificationException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveLastOccurrence" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testRemoveLastOccurrence[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveLastOccurrence%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_removeAfterAdd_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorRemove_removeAfterAdd_IllegalStateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorRemove_removeAfterAdd_IllegalStateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testLastNodeOf" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testLastNodeOf[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testLastNodeOf%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorAdd_addElementsInTheMiddle_listWithAdditionalElements%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetFirstNode" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetFirstNode[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetFirstNode%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAppend" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAppend[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAppend%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testPollLast" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testPollLast[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testPollLast%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testGetInt" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testGetInt[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testGetInt%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeInOtherList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeInOtherList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeFirst_nodeInOtherList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testInvert" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testInvert[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testInvert%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInNoList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testAddElementBeforeNode_sucessorInNoList_IllegalStateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddElementBeforeNode_sucessorInNoList_IllegalStateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIterator_iterateBeforeHead" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIterator_iterateBeforeHead[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIterator_iterateBeforeHead%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorSet_replaceElementInTheMiddle_listWithReplacedElement%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorRemove_clearListFromTheMiddle_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorRemove_clearListFromTheMiddle_emptyList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorRemove_clearListFromTheMiddle_emptyList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testContainsNode_nodeInList_true" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testContainsNode_nodeInList_true[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testContainsNode_nodeInList_true%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_nodeOfThisList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeFirst_nodeOfThisList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIsEmpty" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIsEmpty[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testIsEmpty%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeFirst_freeNode_nodeAddedToList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeFirst_freeNode_nodeAddedToList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeFirst_freeNode_nodeAddedToList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemove" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemove[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemove%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementBeforeNode_sucessorInOtherList_IllegalStateException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddElementBeforeNode_sucessorInOtherList_IllegalStateException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddNodeLast_nodeOfThisList_IllegalArgumentException" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddNodeLast_nodeOfThisList_IllegalArgumentException[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddNodeLast_nodeOfThisList_IllegalArgumentException%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.001" displayname="testListIteratorAdd_addElementsAtFront_listWithAdditionalElements[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorAdd_addElementsAtFront_listWithAdditionalElements%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testIterator" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testIterator[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testIterator%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorNextPrevious_forwardBackwardPattern_correctElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorNextPrevious_forwardBackwardPattern_correctElements[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorNextPrevious_forwardBackwardPattern_correctElements%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testRemoveNode_removeAllNodesInListFromEnd_emptyList" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testRemoveNode_removeAllNodesInListFromEnd_emptyList[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testRemoveNode_removeAllNodesInListFromEnd_emptyList%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testListIteratorAdd_addElementsAtEnd_listWithAdditionalElements%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
        <testcase name="testAddElementFirst_nonNullValue_valueAdded" classname="org.jgrapht.util.DoublyLinkedListTest" time="0.0" displayname="testAddElementFirst_nonNullValue_valueAdded[List with size 8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.DoublyLinkedListTest]/[test:%5BList with size 8%5D]/[test:testAddElementFirst_nonNullValue_valueAdded%5BList with size 8%5D(org.jgrapht.util.DoublyLinkedListTest)]"/>
      </testsuite>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.288" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]">
      <testcase name="testSmallestDegreeLastColoringNonSimple" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.194" displayname="testSmallestDegreeLastColoringNonSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testSmallestDegreeLastColoringNonSimple(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testSmallestDegreeLastColoring" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.001" displayname="testSmallestDegreeLastColoring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testSmallestDegreeLastColoring(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testDSaturNonOptimal" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.0" displayname="testDSaturNonOptimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testDSaturNonOptimal(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testRandomFixedSeed17" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.002" displayname="testRandomFixedSeed17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testRandomFixedSeed17(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testMyciel3" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.001" displayname="testMyciel3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testMyciel3(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testMyciel4" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.085" displayname="testMyciel4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testMyciel4(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testGraph1(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testRandom" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.003" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testRandom(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
      <testcase name="testCompleteGraph" classname="org.jgrapht.alg.color.SmallestDegreeLastColoringTest" time="0.001" displayname="testCompleteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SmallestDegreeLastColoringTest]/[test:testCompleteGraph(org.jgrapht.alg.color.SmallestDegreeLastColoringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="29.511" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.109" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testEmptyGraph(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testEmptySetOfRoots" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testEmptySetOfRoots" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testEmptySetOfRoots(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testOneNode" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.262" displayname="testOneNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testOneNode(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testInvalidNode" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.004" displayname="testInvalidNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testInvalidNode(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testBinaryTree" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testBinaryTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testBinaryTree(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testDisconnectSmallGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testDisconnectSmallGraph(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testSmallTree" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testSmallTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testSmallTree(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testGraphAllPossibleQueries" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.021" displayname="testGraphAllPossibleQueries" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testGraphAllPossibleQueries(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph2" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testDisconnectSmallGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testDisconnectSmallGraph2(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree2" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.001" displayname="testTwoRootsInTheSameTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testTwoRootsInTheSameTree2(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="randomHugeConnectedTree" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="4.707" displayname="randomHugeConnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:randomHugeConnectedTree(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.002" displayname="testTwoRootsInTheSameTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testTwoRootsInTheSameTree(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testSmallDisconnectedTrees" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="15.335" displayname="testSmallDisconnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testSmallDisconnectedTrees(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testSmallTree2" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testSmallTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testSmallTree2(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testRootNotInGraph" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testRootNotInGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testRootNotInGraph(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testNotExploredNode" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.001" displayname="testNotExploredNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testNotExploredNode(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testLongChain" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.075" displayname="testLongChain" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testLongChain(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="randomHugePossiblyDisconnectedTree" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="2.553" displayname="randomHugePossiblyDisconnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:randomHugePossiblyDisconnectedTree(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testNonBinaryTreeBatch" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="0.0" displayname="testNonBinaryTreeBatch" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testNonBinaryTreeBatch(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
      <testcase name="testSmallConnectedTrees" classname="org.jgrapht.alg.lca.HeavyPathLCAFinderTest" time="6.436" displayname="testSmallConnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.HeavyPathLCAFinderTest]/[test:testSmallConnectedTrees(org.jgrapht.alg.lca.HeavyPathLCAFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.SimpleDirectedGraphTest" time="1.142" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]">
      <testcase name="testContainsEdgeObjectObject" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.001" displayname="testContainsEdgeObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testContainsEdgeObjectObject(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testOutgoingEdgesOf" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.001" displayname="testOutgoingEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testOutgoingEdgesOf(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testContainsVertex" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testContainsVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testContainsVertex(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testRemoveEdgeObjectObject" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.001" displayname="testRemoveEdgeObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testRemoveEdgeObjectObject(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testRemoveEdgeEdge" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testRemoveEdgeEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testRemoveEdgeEdge(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testGetAllEdges" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testGetAllEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testGetAllEdges(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testVertexSet" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testVertexSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testVertexSet(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testGetEdge" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testGetEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testGetEdge(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testInDegreeOf" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.001" displayname="testInDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testInDegreeOf(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testGetEdgeSupplier" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testGetEdgeSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testGetEdgeSupplier(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testAddEdgeEdge" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.003" displayname="testAddEdgeEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testAddEdgeEdge(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testContainsEdgeEdge" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.001" displayname="testContainsEdgeEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testContainsEdgeEdge(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testGetVertexSupplier" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="1.125" displayname="testGetVertexSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testGetVertexSupplier(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testRemoveVertex" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testRemoveVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testRemoveVertex(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testAddVertex" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testAddVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testAddVertex(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testReversedView" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.001" displayname="testReversedView" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testReversedView(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testAddEdgeObjectObject" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.003" displayname="testAddEdgeObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testAddEdgeObjectObject(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testOutDegreeOf" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testOutDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testOutDegreeOf(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testRemoveAllEdgesObjectObject" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.002" displayname="testRemoveAllEdgesObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testRemoveAllEdgesObjectObject(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testEdgeSet" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.001" displayname="testEdgeSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testEdgeSet(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testEdgesOf" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testEdgesOf(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
      <testcase name="testIncomingOutgoingEdgesOf" classname="org.jgrapht.graph.SimpleDirectedGraphTest" time="0.0" displayname="testIncomingOutgoingEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleDirectedGraphTest]/[test:testIncomingOutgoingEdgesOf(org.jgrapht.graph.SimpleDirectedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.096" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]">
      <testcase name="testImprovementGraph1" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.008" displayname="testImprovementGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph1(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph2" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.002" displayname="testImprovementGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph2(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph3" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.056" displayname="testImprovementGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph3(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph4" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.003" displayname="testImprovementGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph4(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph5" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.002" displayname="testImprovementGraph5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph5(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph6" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.001" displayname="testImprovementGraph6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph6(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph7" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.001" displayname="testImprovementGraph7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph7(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph8" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.002" displayname="testImprovementGraph8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph8(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph9" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.0" displayname="testImprovementGraph9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph9(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph10" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.019" displayname="testImprovementGraph10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph10(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
      <testcase name="testImprovementGraph11" classname="org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest" time="0.001" displayname="testImprovementGraph11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest]/[test:testImprovementGraph11(org.jgrapht.alg.cycle.AhujaOrlinSharmaCyclicExchangeLocalAugmentationTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.012" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]">
      <testcase name="testSingletonWithoutNormalize" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.003" displayname="testSingletonWithoutNormalize" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testSingletonWithoutNormalize(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
      <testcase name="testOutgoing" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.0" displayname="testOutgoing" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testOutgoing(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
      <testcase name="testIncoming" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.001" displayname="testIncoming" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testIncoming(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
      <testcase name="testNegativeWeights" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.003" displayname="testNegativeWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testNegativeWeights(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.003" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testUndirected(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
      <testcase name="testSingletonWithNormalize" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.001" displayname="testSingletonWithNormalize" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testSingletonWithNormalize(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
      <testcase name="testDisconnectedOutgoing" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.0" displayname="testDisconnectedOutgoing" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testDisconnectedOutgoing(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
      <testcase name="testIncomingNoNormalization" classname="org.jgrapht.alg.scoring.ClosenessCentralityTest" time="0.001" displayname="testIncomingNoNormalization" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ClosenessCentralityTest]/[test:testIncomingNoNormalization(org.jgrapht.alg.scoring.ClosenessCentralityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.SerializationTest" time="0.478" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]">
      <testcase name="testSimpleGraph" classname="org.jgrapht.graph.SerializationTest" time="0.292" displayname="testSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testSimpleGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testSimpleDirectedWeightedGraph" classname="org.jgrapht.graph.SerializationTest" time="0.019" displayname="testSimpleDirectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testSimpleDirectedWeightedGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDefaultDirectedGraph" classname="org.jgrapht.graph.SerializationTest" time="0.006" displayname="testDefaultDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDefaultDirectedGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDefaultUndirectedGraph" classname="org.jgrapht.graph.SerializationTest" time="0.004" displayname="testDefaultUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDefaultUndirectedGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDefaultDirectedWeightedGraph" classname="org.jgrapht.graph.SerializationTest" time="0.027" displayname="testDefaultDirectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDefaultDirectedWeightedGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDirectedWeightedPseudograph" classname="org.jgrapht.graph.SerializationTest" time="0.014" displayname="testDirectedWeightedPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDirectedWeightedPseudograph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDirectedMultigraph" classname="org.jgrapht.graph.SerializationTest" time="0.006" displayname="testDirectedMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDirectedMultigraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testSimpleDirectedGraph" classname="org.jgrapht.graph.SerializationTest" time="0.002" displayname="testSimpleDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testSimpleDirectedGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDefaultUndirectedWeightedGraph" classname="org.jgrapht.graph.SerializationTest" time="0.004" displayname="testDefaultUndirectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDefaultUndirectedWeightedGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testSimpleWeightedGraph" classname="org.jgrapht.graph.SerializationTest" time="0.006" displayname="testSimpleWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testSimpleWeightedGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testAsGraphUnion" classname="org.jgrapht.graph.SerializationTest" time="0.064" displayname="testAsGraphUnion" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testAsGraphUnion(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testMultiGraph" classname="org.jgrapht.graph.SerializationTest" time="0.006" displayname="testMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testMultiGraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testPseudograph" classname="org.jgrapht.graph.SerializationTest" time="0.005" displayname="testPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testPseudograph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testWeightedPseudograph" classname="org.jgrapht.graph.SerializationTest" time="0.004" displayname="testWeightedPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testWeightedPseudograph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testWeightedMultigraph" classname="org.jgrapht.graph.SerializationTest" time="0.005" displayname="testWeightedMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testWeightedMultigraph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDirectedPseudograph" classname="org.jgrapht.graph.SerializationTest" time="0.006" displayname="testDirectedPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDirectedPseudograph(org.jgrapht.graph.SerializationTest)]"/>
      <testcase name="testDirectedWeightedMultiGraph" classname="org.jgrapht.graph.SerializationTest" time="0.007" displayname="testDirectedWeightedMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SerializationTest]/[test:testDirectedWeightedMultiGraph(org.jgrapht.graph.SerializationTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest" time="0.007" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest" time="0.006" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest)]"/>
      <testcase name="testInvalidPrediction" classname="org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest" time="0.001" displayname="testInvalidPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest]/[test:testInvalidPrediction(org.jgrapht.alg.linkprediction.SaltonIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest" time="0.073" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest]">
      <testcase name="testUpdateDuals1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest" time="0.065" displayname="testUpdateDuals1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest]/[test:testUpdateDuals1(org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest)]">
        <failure>java.lang.AssertionError: expected:&lt;1.0E100&gt; but was:&lt;2.5&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at org.junit.Assert.assertEquals(Assert.java:685)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest.testUpdateDuals1(BlossomVDualUpdaterTest.java:67)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testUpdateDuals2" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest" time="0.001" displayname="testUpdateDuals2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest]/[test:testUpdateDuals2(org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest)]">
        <failure>java.lang.AssertionError: expected:&lt;1.0E100&gt; but was:&lt;3.0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at org.junit.Assert.assertEquals(Assert.java:685)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest.testUpdateDuals2(BlossomVDualUpdaterTest.java:97)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testUpdateDualsSingle1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest" time="0.001" displayname="testUpdateDualsSingle1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest]/[test:testUpdateDualsSingle1(org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest)]"/>
      <testcase name="testUpdateDualsConnectedComponents1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest" time="0.001" displayname="testUpdateDualsConnectedComponents1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest]/[test:testUpdateDualsConnectedComponents1(org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest)]">
        <failure>java.lang.AssertionError: expected:&lt;10.0&gt; but was:&lt;13.0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at org.junit.Assert.assertEquals(Assert.java:685)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest.testUpdateDualsConnectedComponents1(BlossomVDualUpdaterTest.java:214)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testUpdateDualsConnectedComponents2" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest" time="0.003" displayname="testUpdateDualsConnectedComponents2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest]/[test:testUpdateDualsConnectedComponents2(org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest)]">
        <failure>java.lang.AssertionError: expected:&lt;20.0&gt; but was:&lt;7.0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at org.junit.Assert.assertEquals(Assert.java:685)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest.testUpdateDualsConnectedComponents2(BlossomVDualUpdaterTest.java:273)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testUpdateDualsConnectedComponents3" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest" time="0.001" displayname="testUpdateDualsConnectedComponents3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest]/[test:testUpdateDualsConnectedComponents3(org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.079" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]">
      <testcase name="testGetTour0" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.002" displayname="testGetTour0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour0(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour1" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.0" displayname="testGetTour1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour1(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour2" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.0" displayname="testGetTour2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour2(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour3" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.012" displayname="testGetTour3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour3(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour4" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.001" displayname="testGetTour4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour4(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour5" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.0" displayname="testGetTour5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour5(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour6" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.001" displayname="testGetTour6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour6(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour7" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.001" displayname="testGetTour7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour7(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour8" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.001" displayname="testGetTour8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour8(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour9" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.053" displayname="testGetTour9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour9(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
      <testcase name="testGetTour10" classname="org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest" time="0.006" displayname="testGetTour10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest]/[test:testGetTour10(org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSPTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest" time="5.523" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest]">
      <testcase name="testGraph" classname="org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest" time="0.281" displayname="testGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest]/[test:testGraph(org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest)]"/>
      <testcase name="testIsOddSetMethod" classname="org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest" time="0.0" displayname="testIsOddSetMethod" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest]/[test:testIsOddSetMethod(org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest)]"/>
      <testcase name="testRandomGraphs" classname="org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest" time="5.239" displayname="testRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest]/[test:testRandomGraphs(org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest)]"/>
      <testcase name="testExampleGraph" classname="org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest" time="0.001" displayname="testExampleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest]/[test:testExampleGraph(org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest)]"/>
      <testcase name="testDisconnectedGraph" classname="org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest" time="0.0" displayname="testDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest]/[test:testDisconnectedGraph(org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest]">
      <testcase name="testPredictionWithListOfPairs" classname="org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest" time="0.005" displayname="testPredictionWithListOfPairs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest]/[test:testPredictionWithListOfPairs(org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest)]"/>
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest" time="0.001" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest)]"/>
      <testcase name="testInvalidPrediction" classname="org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest" time="0.0" displayname="testInvalidPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest]/[test:testInvalidPrediction(org.jgrapht.alg.linkprediction.AdamicAdarIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.419" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]">
      <testcase name="testGraphWithNoEdges" classname="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.005" displayname="testGraphWithNoEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]/[test:testGraphWithNoEdges(org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest)]"/>
      <testcase name="testSquareGraph" classname="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.002" displayname="testSquareGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]/[test:testSquareGraph(org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest)]"/>
      <testcase name="testRandomGraphs" classname="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.404" displayname="testRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]/[test:testRandomGraphs(org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest)]"/>
      <testcase name="testTriangleGraph" classname="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.001" displayname="testTriangleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]/[test:testTriangleGraph(org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest)]"/>
      <testcase name="testWikipediaGraph" classname="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.001" displayname="testWikipediaGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]/[test:testWikipediaGraph(org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest)]"/>
      <testcase name="testGomoryHuExampleGraph" classname="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.005" displayname="testGomoryHuExampleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]/[test:testGomoryHuExampleGraph(org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest)]"/>
      <testcase name="testDisconnectedGraph" classname="org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest" time="0.001" displayname="testDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest]/[test:testDisconnectedGraph(org.jgrapht.alg.flow.GusfieldEquivalentFlowTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.245" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]">
      <testcase name="test3x3SimpleAssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.232" displayname="test3x3SimpleAssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test3x3SimpleAssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test3x3SimpleAssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:141)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test6x6DegeneratedAssignmentTaskNo2" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.001" displayname="test6x6DegeneratedAssignmentTaskNo2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test6x6DegeneratedAssignmentTaskNo2(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test6x6DegeneratedAssignmentTaskNo2(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:232)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test6x6DegeneratedAssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.001" displayname="test6x6DegeneratedAssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test6x6DegeneratedAssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test6x6DegeneratedAssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:214)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test5x5InvertedAssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.001" displayname="test5x5InvertedAssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test5x5InvertedAssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test5x5InvertedAssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:195)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test5x5DegeneratedAssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.002" displayname="test5x5DegeneratedAssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test5x5DegeneratedAssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test5x5DegeneratedAssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:252)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test20x20BulkyAssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.003" displayname="test20x20BulkyAssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test20x20BulkyAssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test20x20BulkyAssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:417)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test3x3SimpleAssignmentTaskNo2" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.001" displayname="test3x3SimpleAssignmentTaskNo2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test3x3SimpleAssignmentTaskNo2(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test3x3SimpleAssignmentTaskNo2(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:154)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test21x21BulkyAssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.002" displayname="test21x21BulkyAssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test21x21BulkyAssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test21x21BulkyAssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:344)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testForEmptyGraph" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.0" displayname="testForEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:testForEmptyGraph(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]"/>
      <testcase name="test8x8BulkyAssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.001" displayname="test8x8BulkyAssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test8x8BulkyAssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test8x8BulkyAssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:272)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="test5x5AssignmentTask" classname="org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest" time="0.001" displayname="test5x5AssignmentTask" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest]/[test:test5x5AssignmentTask(org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest)]">
        <error>java.lang.NullPointerException: Cannot read the array length because "excessMatrix" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMatrixImplementationProduct.makeExcessMatrix(KuhnMunkresMatrixImplementationProduct.java:22)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.makeExcessMatrix(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:256)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching$KuhnMunkresMatrixImplementation.buildMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:207)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:114)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.match(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:117)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.test5x5AssignmentTask(KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java:169)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.008" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.003" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testEmptyGraph(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testGraphWithCycle" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.001" displayname="testGraphWithCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testGraphWithCycle(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testGraphWithPartialOrder" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.001" displayname="testGraphWithPartialOrder" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testGraphWithPartialOrder(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testDisconnected" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.001" displayname="testDisconnected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testDisconnected(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testGraphWithParallelEdges" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.0" displayname="testGraphWithParallelEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testGraphWithParallelEdges(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testTryToDisableCrossComponent" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.001" displayname="testTryToDisableCrossComponent" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testTryToDisableCrossComponent(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testWithSelfLoops" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.0" displayname="testWithSelfLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testWithSelfLoops(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testGraph1(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
      <testcase name="testRecipe" classname="org.jgrapht.traverse.TopologicalOrderIteratorTest" time="0.001" displayname="testRecipe" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.TopologicalOrderIteratorTest]/[test:testRecipe(org.jgrapht.traverse.TopologicalOrderIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest" time="0.011" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest]">
      <testcase name="testGetMinimalSeparators1" classname="org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest" time="0.008" displayname="testGetMinimalSeparators1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest]/[test:testGetMinimalSeparators1(org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest)]"/>
      <testcase name="testGetMinimalSeparators2" classname="org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest" time="0.001" displayname="testGetMinimalSeparators2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest]/[test:testGetMinimalSeparators2(org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest)]"/>
      <testcase name="testGetMinimalSeparators3" classname="org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest" time="0.002" displayname="testGetMinimalSeparators3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest]/[test:testGetMinimalSeparators3(org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest)]"/>
      <testcase name="testGetMinimalSeparators4" classname="org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest" time="0.0" displayname="testGetMinimalSeparators4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest]/[test:testGetMinimalSeparators4(org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest)]"/>
      <testcase name="testGetMinimalSeparators5" classname="org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest" time="0.0" displayname="testGetMinimalSeparators5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest]/[test:testGetMinimalSeparators5(org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest)]"/>
      <testcase name="testGetMinimalSeparators6" classname="org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest" time="0.0" displayname="testGetMinimalSeparators6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest]/[test:testGetMinimalSeparators6(org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.model.Box2DTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Box2DTest]">
      <testcase name="testConstructor1" classname="org.jgrapht.alg.drawing.model.Box2DTest" time="0.0" displayname="testConstructor1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Box2DTest]/[test:testConstructor1(org.jgrapht.alg.drawing.model.Box2DTest)]"/>
      <testcase name="testConstructor2" classname="org.jgrapht.alg.drawing.model.Box2DTest" time="0.0" displayname="testConstructor2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Box2DTest]/[test:testConstructor2(org.jgrapht.alg.drawing.model.Box2DTest)]"/>
      <testcase name="testFactoryMethod1" classname="org.jgrapht.alg.drawing.model.Box2DTest" time="0.0" displayname="testFactoryMethod1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Box2DTest]/[test:testFactoryMethod1(org.jgrapht.alg.drawing.model.Box2DTest)]"/>
      <testcase name="testFactoryMethod2" classname="org.jgrapht.alg.drawing.model.Box2DTest" time="0.0" displayname="testFactoryMethod2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Box2DTest]/[test:testFactoryMethod2(org.jgrapht.alg.drawing.model.Box2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest" time="2.703" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest]">
      <testcase name="testRandomAdmissible" classname="org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest" time="2.005" displayname="testRandomAdmissible" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest]/[test:testRandomAdmissible(org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest)]"/>
      <testcase name="testRandom" classname="org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest" time="0.698" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest]/[test:testRandom(org.jgrapht.alg.shortestpath.ALTAdmissibleHeuristicTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.util.AliasMethodSamplerTest" time="0.559" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.AliasMethodSamplerTest]">
      <testcase name="test1" classname="org.jgrapht.alg.util.AliasMethodSamplerTest" time="0.331" displayname="test1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.AliasMethodSamplerTest]/[test:test1(org.jgrapht.alg.util.AliasMethodSamplerTest)]"/>
      <testcase name="test2" classname="org.jgrapht.alg.util.AliasMethodSamplerTest" time="0.227" displayname="test2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.AliasMethodSamplerTest]/[test:test2(org.jgrapht.alg.util.AliasMethodSamplerTest)]"/>
      <testcase name="testNonValid" classname="org.jgrapht.alg.util.AliasMethodSamplerTest" time="0.001" displayname="testNonValid" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.AliasMethodSamplerTest]/[test:testNonValid(org.jgrapht.alg.util.AliasMethodSamplerTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest" time="2.975" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest]">
      <testcase name="testRandomGraphsCompareWithFloydWarshall" classname="org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest" time="2.974" displayname="testRandomGraphsCompareWithFloydWarshall" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest]/[test:testRandomGraphsCompareWithFloydWarshall(org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest)]"/>
      <testcase name="testIssue408" classname="org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest" time="0.0" displayname="testIssue408" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest]/[test:testIssue408(org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest)]"/>
      <testcase name="testWikipediaExample" classname="org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest" time="0.0" displayname="testWikipediaExample" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest]/[test:testWikipediaExample(org.jgrapht.alg.shortestpath.JohnsonShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.CommonNeighborsLinkPredictionTest" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.CommonNeighborsLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.CommonNeighborsLinkPredictionTest" time="0.002" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.CommonNeighborsLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.CommonNeighborsLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest" time="0.257" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest]">
      <testcase name="testDirectedGraph3" classname="org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest" time="0.25" displayname="testDirectedGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest]/[test:testDirectedGraph3(org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest)]"/>
      <testcase name="testUndirectedGraphWithWeights" classname="org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest" time="0.003" displayname="testUndirectedGraphWithWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest]/[test:testUndirectedGraphWithWeights(org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest)]"/>
      <testcase name="testDirectedGraph3Subset" classname="org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest" time="0.001" displayname="testDirectedGraph3Subset" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest]/[test:testDirectedGraph3Subset(org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest)]"/>
      <testcase name="testUndirectedGraph1" classname="org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest" time="0.001" displayname="testUndirectedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest]/[test:testUndirectedGraph1(org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest)]"/>
      <testcase name="testUndirectedGraph2" classname="org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest" time="0.001" displayname="testUndirectedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest]/[test:testUndirectedGraph2(org.jgrapht.alg.scoring.EdgeBetweennessCentralityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest" time="0.114" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest]">
      <testcase name="testMinimal" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest" time="0.032" displayname="testMinimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest]/[test:testMinimal(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest)]"/>
      <testcase name="testEmpty1" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest" time="0.001" displayname="testEmpty1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest]/[test:testEmpty1(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest)]"/>
      <testcase name="testEmpty2" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest" time="0.002" displayname="testEmpty2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest]/[test:testEmpty2(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest)]"/>
      <testcase name="testMedium" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest" time="0.05" displayname="testMedium" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest]/[test:testMedium(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest)]"/>
      <testcase name="testSmall1" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest" time="0.025" displayname="testSmall1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest]/[test:testSmall1(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest)]"/>
      <testcase name="testSmall2" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest" time="0.004" displayname="testSmall2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest]/[test:testSmall2(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.CloneTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.CloneTest]">
      <testcase name="testCloneSpecificsBug" classname="org.jgrapht.graph.CloneTest" time="0.001" displayname="testCloneSpecificsBug" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.CloneTest]/[test:testCloneSpecificsBug(org.jgrapht.graph.CloneTest)]"/>
      <testcase name="testParanoidGraph" classname="org.jgrapht.graph.CloneTest" time="0.004" displayname="testParanoidGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.CloneTest]/[test:testParanoidGraph(org.jgrapht.graph.CloneTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.073" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]">
      <testsuite name="[0]" time="0.02" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]">
        <testcase name="testUnmodifiableList" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testUnmodifiableList[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testUnmodifiableList%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testGetChordlessCycle" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.005" displayname="testGetChordlessCycle[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testGetChordlessCycle%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIterationOrder" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIterationOrder[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIterationOrder%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder1" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder1[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsPerfectEliminationOrder1%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder2" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsPerfectEliminationOrder2[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsPerfectEliminationOrder2%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder3" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder3[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsPerfectEliminationOrder3%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder4" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder4[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsPerfectEliminationOrder4%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder5" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsPerfectEliminationOrder5[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsPerfectEliminationOrder5%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder6" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder6[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsPerfectEliminationOrder6%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal1" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal1[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal1%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal2" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal2[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal2%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal3" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal3[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal3%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal4" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal4[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal4%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal5" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal5[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal5%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal6" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal6[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal6%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal7" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal7[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal7%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal8" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal8[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal8%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal9" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.003" displayname="testIsChordal9[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal9%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testPerfectEliminationOrder" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testPerfectEliminationOrder[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testPerfectEliminationOrder%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal10" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal10[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal10%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal11" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal11[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal11%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal12" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal12[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B0%5D]/[test:testIsChordal12%5B0%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
      </testsuite>
      <testsuite name="[1]" time="0.053" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]">
        <testcase name="testUnmodifiableList" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testUnmodifiableList[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testUnmodifiableList%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testGetChordlessCycle" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.024" displayname="testGetChordlessCycle[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testGetChordlessCycle%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIterationOrder" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.018" displayname="testIterationOrder[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIterationOrder%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder1" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder1[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsPerfectEliminationOrder1%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder2" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder2[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsPerfectEliminationOrder2%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder3" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsPerfectEliminationOrder3[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsPerfectEliminationOrder3%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder4" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder4[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsPerfectEliminationOrder4%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder5" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsPerfectEliminationOrder5[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsPerfectEliminationOrder5%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsPerfectEliminationOrder6" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsPerfectEliminationOrder6[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsPerfectEliminationOrder6%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal1" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal1[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal1%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal2" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal2[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal2%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal3" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal3[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal3%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal4" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal4[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal4%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal5" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal5[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal5%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal6" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal6[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal6%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal7" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal7[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal7%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal8" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal8[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal8%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal9" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.002" displayname="testIsChordal9[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal9%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testPerfectEliminationOrder" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testPerfectEliminationOrder[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testPerfectEliminationOrder%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal10" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.0" displayname="testIsChordal10[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal10%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal11" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal11[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal11%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
        <testcase name="testIsChordal12" classname="org.jgrapht.alg.cycle.ChordalityInspectorTest" time="0.001" displayname="testIsChordal12[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChordalityInspectorTest]/[test:%5B1%5D]/[test:testIsChordal12%5B1%5D(org.jgrapht.alg.cycle.ChordalityInspectorTest)]"/>
      </testsuite>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.014" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]">
      <testcase name="indirectCycleCount" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.004" displayname="indirectCycleCount" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:indirectCycleCount(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="testConsumerAPI" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.003" displayname="testConsumerAPI" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:testConsumerAPI(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="singleDirectFind" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.002" displayname="singleDirectFind" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:singleDirectFind(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="singleDirectCycleCount" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="singleDirectCycleCount" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:singleDirectCycleCount(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="testOrder" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="testOrder" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:testOrder(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="twoCycles" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.001" displayname="twoCycles" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:twoCycles(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="complexGraph" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="complexGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:complexGraph(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="twoSharingEdge" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="twoSharingEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:twoSharingEdge(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="limitPathsTwoCycles" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="limitPathsTwoCycles" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:limitPathsTwoCycles(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="noCyclesFind" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="noCyclesFind" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:noCyclesFind(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="noCyclesCount" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="noCyclesCount" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:noCyclesCount(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="reflexiveCycleCount" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="reflexiveCycleCount" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:reflexiveCycleCount(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="consecutiveRuns" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="consecutiveRuns" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:consecutiveRuns(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="limitPaths1" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="limitPaths1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:limitPaths1(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="limitPaths2" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="limitPaths2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:limitPaths2(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="reflexiveCycleFind" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="reflexiveCycleFind" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:reflexiveCycleFind(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="simplestCycles" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="simplestCycles" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:simplestCycles(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
      <testcase name="indirectCycleFind" classname="org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest" time="0.0" displayname="indirectCycleFind" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest]/[test:indirectCycleFind(org.jgrapht.alg.cycle.HawickJamesSimpleCyclesTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest" time="17.621" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest]">
      <testcase name="testTreeDynamicConnectivity_addNode_removeNode" classname="org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest" time="0.014" displayname="testTreeDynamicConnectivity_addNode_removeNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest]/[test:testTreeDynamicConnectivity_addNode_removeNode(org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest)]"/>
      <testcase name="testTreeDynamicConnectivity_2Trees" classname="org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest" time="17.607" displayname="testTreeDynamicConnectivity_2Trees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest]/[test:testTreeDynamicConnectivity_2Trees(org.jgrapht.alg.connectivity.TreeDynamicConnectivityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest" time="0.009" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest]">
      <testcase name="testConstructorWithInitialVertices" classname="org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest" time="0.005" displayname="testConstructorWithInitialVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest]/[test:testConstructorWithInitialVertices(org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest)]"/>
      <testcase name="testGetTour" classname="org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest" time="0.002" displayname="testGetTour" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest]/[test:testGetTour(org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest)]"/>
      <testcase name="testConstructorWithRandomNumberGenerator" classname="org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest" time="0.0" displayname="testConstructorWithRandomNumberGenerator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest]/[test:testConstructorWithRandomNumberGenerator(org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest)]"/>
      <testcase name="testConstructorWithFirst" classname="org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest" time="0.0" displayname="testConstructorWithFirst" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest]/[test:testConstructorWithFirst(org.jgrapht.alg.tour.NearestNeighborHeuristicTSPTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.193" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]">
      <testcase name="testThreeDisjointPathsWithMultiHitsOnEdge" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.111" displayname="testThreeDisjointPathsWithMultiHitsOnEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testThreeDisjointPathsWithMultiHitsOnEdge(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPaths" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testTwoDisjointPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testTwoDisjointPaths(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testSequentialCallsSanity" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.0" displayname="testSequentialCallsSanity" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testSequentialCallsSanity(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testUnweightedGraphIsNotChanged" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testUnweightedGraphIsNotChanged" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testUnweightedGraphIsNotChanged(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testRing" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testRing" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testRing(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testStar" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.005" displayname="testStar" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testStar(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsNoNeedToMerge" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.006" displayname="testTwoDisjointPathsNoNeedToMerge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testTwoDisjointPathsNoNeedToMerge(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testMaximumKPathsAreReturned" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.015" displayname="testMaximumKPathsAreReturned" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testMaximumKPathsAreReturned(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testThreeDisjointPathsReverseEdgeExist" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.0" displayname="testThreeDisjointPathsReverseEdgeExist" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testThreeDisjointPathsReverseEdgeExist(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testDisconnectedGraphIsNotChanged" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testDisconnectedGraphIsNotChanged" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testDisconnectedGraphIsNotChanged(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsWithReversedEdgesExist" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.0" displayname="testTwoDisjointPathsWithReversedEdgesExist" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testTwoDisjointPathsWithReversedEdgesExist(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testSinglePath" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testSinglePath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testSinglePath(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsJointNode" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.0" displayname="testTwoDisjointPathsJointNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testTwoDisjointPathsJointNode(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testWikipediaGraph" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testWikipediaGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testWikipediaGraph(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testThreeDisjointPathsGraphIsNotChanged" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.0" displayname="testThreeDisjointPathsGraphIsNotChanged" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testThreeDisjointPathsGraphIsNotChanged(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testUnweightedGraph" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.0" displayname="testUnweightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testUnweightedGraph(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testDisconnectedGraph" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.025" displayname="testDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testDisconnectedGraph(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testFirstPathEdgesFirst" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testFirstPathEdgesFirst" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testFirstPathEdgesFirst(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testClique" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.017" displayname="testClique" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testClique(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testLinear" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.003" displayname="testLinear" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testLinear(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsNeedToMerge" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.001" displayname="testTwoDisjointPathsNeedToMerge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testTwoDisjointPathsNeedToMerge(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
      <testcase name="testThreeDisjointPaths" classname="org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest" time="0.0" displayname="testThreeDisjointPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest]/[test:testThreeDisjointPaths(org.jgrapht.alg.shortestpath.SuurballeKDisjointShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.DepthFirstIteratorTest" time="0.09" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DepthFirstIteratorTest]">
      <testcase name="testBug1169182" classname="org.jgrapht.traverse.DepthFirstIteratorTest" time="0.088" displayname="testBug1169182" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DepthFirstIteratorTest]/[test:testBug1169182(org.jgrapht.traverse.DepthFirstIteratorTest)]"/>
      <testcase name="testNonCrossComponentTraversal" classname="org.jgrapht.traverse.DepthFirstIteratorTest" time="0.0" displayname="testNonCrossComponentTraversal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DepthFirstIteratorTest]/[test:testNonCrossComponentTraversal(org.jgrapht.traverse.DepthFirstIteratorTest)]"/>
      <testcase name="testDirectedGraphNullConstructors" classname="org.jgrapht.traverse.DepthFirstIteratorTest" time="0.0" displayname="testDirectedGraphNullConstructors" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DepthFirstIteratorTest]/[test:testDirectedGraphNullConstructors(org.jgrapht.traverse.DepthFirstIteratorTest)]"/>
      <testcase name="testDirectedGraphViaCCI" classname="org.jgrapht.traverse.DepthFirstIteratorTest" time="0.0" displayname="testDirectedGraphViaCCI" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DepthFirstIteratorTest]/[test:testDirectedGraphViaCCI(org.jgrapht.traverse.DepthFirstIteratorTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.traverse.DepthFirstIteratorTest" time="0.0" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DepthFirstIteratorTest]/[test:testDirectedGraph(org.jgrapht.traverse.DepthFirstIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]">
      <testcase name="testDirectedGraphGnp1" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testDirectedGraphGnp1(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp2" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testDirectedGraphGnp2(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp3" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testDirectedGraphGnp3(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testZeroNodes" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testZeroNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testZeroNodes(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp4WithLoops" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp4WithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testDirectedGraphGnp4WithLoops(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp1" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testUndirectedGraphGnp1(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp2" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testUndirectedGraphGnp2(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp3" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testUndirectedGraphGnp3(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp4WithLoops" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp4WithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testUndirectedGraphGnp4WithLoops(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.GnpRandomGraphGeneratorTest" time="0.001" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.GnpRandomGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]">
      <testcase name="testLcaIsOneOfTheNodes" classname="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.002" displayname="testLcaIsOneOfTheNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]/[test:testLcaIsOneOfTheNodes(org.jgrapht.alg.lca.NaiveLCAFinderTest)]"/>
      <testcase name="testLca" classname="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.0" displayname="testLca" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]/[test:testLca(org.jgrapht.alg.lca.NaiveLCAFinderTest)]"/>
      <testcase name="testTwoLcas" classname="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.001" displayname="testTwoLcas" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]/[test:testTwoLcas(org.jgrapht.alg.lca.NaiveLCAFinderTest)]"/>
      <testcase name="testArrivalOrder" classname="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.0" displayname="testArrivalOrder" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]/[test:testArrivalOrder(org.jgrapht.alg.lca.NaiveLCAFinderTest)]"/>
      <testcase name="testLoops" classname="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.0" displayname="testLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]/[test:testLoops(org.jgrapht.alg.lca.NaiveLCAFinderTest)]"/>
      <testcase name="testNoLca" classname="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.0" displayname="testNoLca" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]/[test:testNoLca(org.jgrapht.alg.lca.NaiveLCAFinderTest)]"/>
      <testcase name="testNormalCases" classname="org.jgrapht.alg.lca.NaiveLCAFinderTest" time="0.001" displayname="testNormalCases" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.NaiveLCAFinderTest]/[test:testNormalCases(org.jgrapht.alg.lca.NaiveLCAFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.174" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]">
      <testcase name="testSingletonWithoutNormalize" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.17" displayname="testSingletonWithoutNormalize" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testSingletonWithoutNormalize(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
      <testcase name="testOutgoing" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.001" displayname="testOutgoing" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testOutgoing(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
      <testcase name="testIncoming" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.0" displayname="testIncoming" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testIncoming(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
      <testcase name="testNegativeWeights" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.001" displayname="testNegativeWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testNegativeWeights(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.0" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testUndirected(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
      <testcase name="testSingletonWithNormalize" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.0" displayname="testSingletonWithNormalize" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testSingletonWithNormalize(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
      <testcase name="testDisconnectedOutgoing" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.001" displayname="testDisconnectedOutgoing" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testDisconnectedOutgoing(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
      <testcase name="testIncomingNoNormalization" classname="org.jgrapht.alg.scoring.HarmonicCentralityTest" time="0.0" displayname="testIncomingNoNormalization" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.HarmonicCentralityTest]/[test:testIncomingNoNormalization(org.jgrapht.alg.scoring.HarmonicCentralityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.RandomWalkVertexIteratorTest" time="0.016" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.RandomWalkVertexIteratorTest]">
      <testcase name="testExhausted" classname="org.jgrapht.traverse.RandomWalkVertexIteratorTest" time="0.006" displayname="testExhausted" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.RandomWalkVertexIteratorTest]/[test:testExhausted(org.jgrapht.traverse.RandomWalkVertexIteratorTest)]"/>
      <testcase name="testLongTime" classname="org.jgrapht.traverse.RandomWalkVertexIteratorTest" time="0.007" displayname="testLongTime" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.RandomWalkVertexIteratorTest]/[test:testLongTime(org.jgrapht.traverse.RandomWalkVertexIteratorTest)]"/>
      <testcase name="testSink" classname="org.jgrapht.traverse.RandomWalkVertexIteratorTest" time="0.0" displayname="testSink" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.RandomWalkVertexIteratorTest]/[test:testSink(org.jgrapht.traverse.RandomWalkVertexIteratorTest)]"/>
      <testcase name="testSingleNode" classname="org.jgrapht.traverse.RandomWalkVertexIteratorTest" time="0.0" displayname="testSingleNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.RandomWalkVertexIteratorTest]/[test:testSingleNode(org.jgrapht.traverse.RandomWalkVertexIteratorTest)]"/>
      <testcase name="testInvalidVertex" classname="org.jgrapht.traverse.RandomWalkVertexIteratorTest" time="0.0" displayname="testInvalidVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.RandomWalkVertexIteratorTest]/[test:testInvalidVertex(org.jgrapht.traverse.RandomWalkVertexIteratorTest)]"/>
      <testcase name="testDeterministic" classname="org.jgrapht.traverse.RandomWalkVertexIteratorTest" time="0.001" displayname="testDeterministic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.RandomWalkVertexIteratorTest]/[test:testDeterministic(org.jgrapht.traverse.RandomWalkVertexIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.154" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]">
      <testcase name="testGraphDirectedRadius" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.003" displayname="testGraphDirectedRadius" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testGraphDirectedRadius(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testRandomGraphsDirectedWithRadius" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.045" displayname="testRandomGraphsDirectedWithRadius" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testRandomGraphsDirectedWithRadius(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testWrongParameters" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.001" displayname="testWrongParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testWrongParameters(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testRandomGraphsDirected" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.022" displayname="testRandomGraphsDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testRandomGraphsDirected(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testGraphUndirected" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.0" displayname="testGraphUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testGraphUndirected(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testRandomGraphsWeightedUndirected" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.061" displayname="testRandomGraphsWeightedUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testRandomGraphsWeightedUndirected(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testSingleEdgePath" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.0" displayname="testSingleEdgePath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testSingleEdgePath(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testSourceTargetEqualUndirected" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.0" displayname="testSourceTargetEqualUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testSourceTargetEqualUndirected(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testSimple1" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.0" displayname="testSimple1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testSimple1(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testGraphAllPairsDirected" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.019" displayname="testGraphAllPairsDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testGraphAllPairsDirected(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testGraphDirected" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.0" displayname="testGraphDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testGraphDirected(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
      <testcase name="testGraphDirectedNoPath" classname="org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest" time="0.0" displayname="testGraphDirectedNoPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest]/[test:testGraphDirectedNoPath(org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.util.UnionFindTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.UnionFindTest]">
      <testcase name="testUnionFind" classname="org.jgrapht.alg.util.UnionFindTest" time="0.001" displayname="testUnionFind" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.UnionFindTest]/[test:testUnionFind(org.jgrapht.alg.util.UnionFindTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.397" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]">
      <testcase name="testDirectedGraphGnp1" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.001" displayname="testDirectedGraphGnp1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testDirectedGraphGnp1(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testGenerateDirectedGraph" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.007" displayname="testGenerateDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testGenerateDirectedGraph(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp1WithMultipleEdges" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.002" displayname="testDirectedGraphGnp1WithMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testDirectedGraphGnp1WithMultipleEdges(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testBadVertexFactory" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.002" displayname="testBadVertexFactory" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testBadVertexFactory(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testMaximumAllowedEdges" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.001" displayname="testMaximumAllowedEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testMaximumAllowedEdges(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testZeroNodes" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testZeroNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testZeroNodes(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testNotAllowedLoopsOrMultipleEdges" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testNotAllowedLoopsOrMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testNotAllowedLoopsOrMultipleEdges(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp1" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testUndirectedGraphGnp1(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testZeroEdge" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testZeroEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testZeroEdge(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testGenerateListenableUndirectedGraph" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.381" displayname="testGenerateListenableUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testGenerateListenableUndirectedGraph(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testEdgeLimitsUndirected" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testEdgeLimitsUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testEdgeLimitsUndirected(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.001" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp1WithLoops" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp1WithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testDirectedGraphGnp1WithLoops(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp1WithLoops" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.001" displayname="testUndirectedGraphGnp1WithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testUndirectedGraphGnp1WithLoops(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testEdgeLimitsDirected" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testEdgeLimitsDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testEdgeLimitsDirected(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp1WithLoopsAndMultipleEdges" classname="org.jgrapht.generate.GnmRandomGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp1WithLoopsAndMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomGraphGeneratorTest]/[test:testDirectedGraphGnp1WithLoopsAndMultipleEdges(org.jgrapht.generate.GnmRandomGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.MaskEdgeSetTest" time="0.034" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskEdgeSetTest]">
      <testcase name="testSize" classname="org.jgrapht.graph.MaskEdgeSetTest" time="0.03" displayname="testSize" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskEdgeSetTest]/[test:testSize(org.jgrapht.graph.MaskEdgeSetTest)]"/>
      <testcase name="testContains" classname="org.jgrapht.graph.MaskEdgeSetTest" time="0.001" displayname="testContains" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskEdgeSetTest]/[test:testContains(org.jgrapht.graph.MaskEdgeSetTest)]"/>
      <testcase name="testIsEmpty" classname="org.jgrapht.graph.MaskEdgeSetTest" time="0.002" displayname="testIsEmpty" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskEdgeSetTest]/[test:testIsEmpty(org.jgrapht.graph.MaskEdgeSetTest)]"/>
      <testcase name="testIterator" classname="org.jgrapht.graph.MaskEdgeSetTest" time="0.0" displayname="testIterator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskEdgeSetTest]/[test:testIterator(org.jgrapht.graph.MaskEdgeSetTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.DirectedAcyclicGraphTest" time="1.879" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]">
      <testcase name="testRemoveAllVerticesShouldNotDeleteTopologyIfTheGraphHasVerticesLeft" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.062" displayname="testRemoveAllVerticesShouldNotDeleteTopologyIfTheGraphHasVerticesLeft" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testRemoveAllVerticesShouldNotDeleteTopologyIfTheGraphHasVerticesLeft(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testTopoIterationOrderLinearGraph" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.003" displayname="testTopoIterationOrderLinearGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testTopoIterationOrderLinearGraph(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testDetermineAncestors00" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.001" displayname="testDetermineAncestors00" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testDetermineAncestors00(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testDetermineAncestors01" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.001" displayname="testDetermineAncestors01" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testDetermineAncestors01(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testDetermineAncestors02" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.0" displayname="testDetermineAncestors02" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testDetermineAncestors02(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testFastLookupGraphSpecificsStrategyAndHashSet" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.065" displayname="testFastLookupGraphSpecificsStrategyAndHashSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testFastLookupGraphSpecificsStrategyAndHashSet(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testCycleDetectionInRandomGraphBuild" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.588" displayname="testCycleDetectionInRandomGraphBuild" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testCycleDetectionInRandomGraphBuild(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testDetermineDescendants00" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.001" displayname="testDetermineDescendants00" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testDetermineDescendants00(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testDetermineDescendants01" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.001" displayname="testDetermineDescendants01" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testDetermineDescendants01(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testDetermineDescendants02" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.0" displayname="testDetermineDescendants02" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testDetermineDescendants02(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testMultipleEdges01" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.0" displayname="testMultipleEdges01" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testMultipleEdges01(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testMultipleEdges02" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.022" displayname="testMultipleEdges02" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testMultipleEdges02(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testMultipleEdges03" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.241" displayname="testMultipleEdges03" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testMultipleEdges03(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testWhenVertexIsNotInGraph_Then_ThrowException" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.0" displayname="testWhenVertexIsNotInGraph_Then_ThrowException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testWhenVertexIsNotInGraph_Then_ThrowException(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testTopoIterationOrderComplexGraph" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.886" displayname="testTopoIterationOrderComplexGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testTopoIterationOrderComplexGraph(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testFastLookupGraphSpecificsStrategyAndArrayUnenforcedSet" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.0" displayname="testFastLookupGraphSpecificsStrategyAndArrayUnenforcedSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testFastLookupGraphSpecificsStrategyAndArrayUnenforcedSet(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
      <testcase name="testIterationBehaviors" classname="org.jgrapht.graph.DirectedAcyclicGraphTest" time="0.004" displayname="testIterationBehaviors" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.DirectedAcyclicGraphTest]/[test:testIterationBehaviors(org.jgrapht.graph.DirectedAcyclicGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest" time="0.277" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest]">
      <testcase name="testGetMaximumIndependentSet1" classname="org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest" time="0.275" displayname="testGetMaximumIndependentSet1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest]/[test:testGetMaximumIndependentSet1(org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest)]"/>
      <testcase name="testGetMaximumIndependentSet2" classname="org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest" time="0.0" displayname="testGetMaximumIndependentSet2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest]/[test:testGetMaximumIndependentSet2(org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest)]"/>
      <testcase name="testGetMaximumIndependentSet3" classname="org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest" time="0.001" displayname="testGetMaximumIndependentSet3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest]/[test:testGetMaximumIndependentSet3(org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest)]"/>
      <testcase name="testGetMaximumIndependentSet4" classname="org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest" time="0.0" displayname="testGetMaximumIndependentSet4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest]/[test:testGetMaximumIndependentSet4(org.jgrapht.alg.independentset.ChordalGraphIndependentSetFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" incomplete="true" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]">
      <testcase name="testInstanceVertexBestImprovement" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="1.628" displayname="testInstanceVertexBestImprovement" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceVertexBestImprovement(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstanceVertex" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.441" displayname="testInstanceVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceVertex(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testViolatedCapacityConstraint" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.0" displayname="testViolatedCapacityConstraint" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testViolatedCapacityConstraint(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testUnconnectedGraph" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.001" displayname="testUnconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testUnconnectedGraph(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstanceSubtree" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="6.132" displayname="testInstanceSubtree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceSubtree(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstance1" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.005" displayname="testInstance1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstance1(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:87)&#13;
	at org.junit.Assert.assertTrue(Assert.java:42)&#13;
	at org.junit.Assert.assertTrue(Assert.java:53)&#13;
	at org.jgrapht.core/org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest.testInstance1(AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest.java:94)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testInstance2" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.002" displayname="testInstance2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstance2(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstance3" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.032" displayname="testInstance3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstance3(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:87)&#13;
	at org.junit.Assert.assertTrue(Assert.java:42)&#13;
	at org.junit.Assert.assertTrue(Assert.java:53)&#13;
	at org.jgrapht.core/org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest.testInstance3(AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest.java:241)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testInstance4" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.0" displayname="testInstance4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstance4(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstance5" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.0" displayname="testInstance5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstance5(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstance6" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="0.0" displayname="testInstance6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstance6(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:87)&#13;
	at org.junit.Assert.assertTrue(Assert.java:42)&#13;
	at org.junit.Assert.assertTrue(Assert.java:53)&#13;
	at org.jgrapht.core/org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest.testInstance6(AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest.java:529)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testInstanceVertexTabu" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" time="2.425" displayname="testInstanceVertexTabu" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceVertexTabu(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstanceSubtreeTabu" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" incomplete="true" displayname="testInstanceSubtreeTabu" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceSubtreeTabu(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstanceVertexAndSubtree" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" incomplete="true" displayname="testInstanceVertexAndSubtree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceVertexAndSubtree(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstanceVertexTabuBestImprovement" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" incomplete="true" displayname="testInstanceVertexTabuBestImprovement" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceVertexTabuBestImprovement(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstanceVertexAndSubtreeTabu" classname="org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest" incomplete="true" displayname="testInstanceVertexAndSubtreeTabu" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest]/[test:testInstanceVertexAndSubtreeTabu(org.jgrapht.alg.spanning.AhujaOrlinSharmaCapacitatedMinimumSpanningTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.util.AVLTreeTest" time="5.761" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]">
      <testcase name="testMergeAfter" classname="org.jgrapht.util.AVLTreeTest" time="2.528" displayname="testMergeAfter" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testMergeAfter(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testOneNode" classname="org.jgrapht.util.AVLTreeTest" time="0.001" displayname="testOneNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testOneNode(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testEmpty" classname="org.jgrapht.util.AVLTreeTest" time="0.0" displayname="testEmpty" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testEmpty(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testSplitAfter" classname="org.jgrapht.util.AVLTreeTest" time="0.735" displayname="testSplitAfter" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testSplitAfter(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testMergeBefore" classname="org.jgrapht.util.AVLTreeTest" time="1.681" displayname="testMergeBefore" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testMergeBefore(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testSplitBefore" classname="org.jgrapht.util.AVLTreeTest" time="0.785" displayname="testSplitBefore" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testSplitBefore(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testAddMax" classname="org.jgrapht.util.AVLTreeTest" time="0.004" displayname="testAddMax" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testAddMax(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testAddMin" classname="org.jgrapht.util.AVLTreeTest" time="0.012" displayname="testAddMin" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testAddMin(org.jgrapht.util.AVLTreeTest)]"/>
      <testcase name="testIterator" classname="org.jgrapht.util.AVLTreeTest" time="0.015" displayname="testIterator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.AVLTreeTest]/[test:testIterator(org.jgrapht.util.AVLTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.101" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]">
      <testcase name="testOptimizations" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.061" displayname="testOptimizations" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:testOptimizations(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
      <testcase name="testIteratorCommonElements" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.002" displayname="testIteratorCommonElements" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:testIteratorCommonElements(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
      <testcase name="testIteratorDisjoint" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.001" displayname="testIteratorDisjoint" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:testIteratorDisjoint(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
      <testcase name="test1" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.001" displayname="test1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:test1(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
      <testcase name="test2" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.033" displayname="test2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:test2(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
      <testcase name="test3" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.002" displayname="test3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:test3(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
      <testcase name="test4" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.001" displayname="test4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:test4(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
      <testcase name="test5" classname="org.jgrapht.util.UnmodifiableUnionSetTest" time="0.0" displayname="test5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.UnmodifiableUnionSetTest]/[test:test5(org.jgrapht.util.UnmodifiableUnionSetTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="1.362" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.149" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testLineGraph" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.289" displayname="testLineGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testLineGraph(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testComparableVertices" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.003" displayname="testComparableVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testComparableVertices(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testNonComparableVertices" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.004" displayname="testNonComparableVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testNonComparableVertices(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testGetPath" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.005" displayname="testGetPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testGetPath(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testSupplyComparator" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.001" displayname="testSupplyComparator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testSupplyComparator(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testNegativeWeightEdge" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.0" displayname="testNegativeWeightEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testNegativeWeightEdge(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testGetPaths1" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.005" displayname="testGetPaths1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testGetPaths1(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
      <testcase name="testGetPaths2" classname="org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest" time="0.904" displayname="testGetPaths2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest]/[test:testGetPaths2(org.jgrapht.alg.shortestpath.DeltaSteppingShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]">
      <testcase name="testSmallWeights" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.081" displayname="testSmallWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]/[test:testSmallWeights(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest)]"/>
      <testcase name="testMinimal" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.002" displayname="testMinimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]/[test:testMinimal(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest)]"/>
      <testcase name="testEmpty1" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.001" displayname="testEmpty1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]/[test:testEmpty1(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest)]"/>
      <testcase name="testEmpty2" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.001" displayname="testEmpty2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]/[test:testEmpty2(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest)]"/>
      <testcase name="testMedium" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.02" displayname="testMedium" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]/[test:testMedium(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest)]"/>
      <testcase name="testSmall1" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.001" displayname="testSmall1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]/[test:testSmall1(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest)]"/>
      <testcase name="testSmall2" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest" time="0.002" displayname="testSmall2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest]/[test:testSmall2(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.103" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]">
      <testcase name="testDSaturNonOptimal" classname="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.0" displayname="testDSaturNonOptimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]/[test:testDSaturNonOptimal(org.jgrapht.alg.color.RandomGreedyColoring2Test)]"/>
      <testcase name="testRandomFixedSeed17" classname="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.002" displayname="testRandomFixedSeed17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]/[test:testRandomFixedSeed17(org.jgrapht.alg.color.RandomGreedyColoring2Test)]"/>
      <testcase name="testMyciel3" classname="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.099" displayname="testMyciel3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]/[test:testMyciel3(org.jgrapht.alg.color.RandomGreedyColoring2Test)]"/>
      <testcase name="testMyciel4" classname="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.001" displayname="testMyciel4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]/[test:testMyciel4(org.jgrapht.alg.color.RandomGreedyColoring2Test)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]/[test:testGraph1(org.jgrapht.alg.color.RandomGreedyColoring2Test)]"/>
      <testcase name="testRandom" classname="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.001" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]/[test:testRandom(org.jgrapht.alg.color.RandomGreedyColoring2Test)]"/>
      <testcase name="testCompleteGraph" classname="org.jgrapht.alg.color.RandomGreedyColoring2Test" time="0.0" displayname="testCompleteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.RandomGreedyColoring2Test]/[test:testCompleteGraph(org.jgrapht.alg.color.RandomGreedyColoring2Test)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest]">
      <testcase name="testGetPathWeight" classname="org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest" time="0.001" displayname="testGetPathWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest]/[test:testGetPathWeight(org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest)]"/>
      <testcase name="testLoops" classname="org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest" time="0.0" displayname="testLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest]/[test:testLoops(org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest)]"/>
      <testcase name="test1" classname="org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest" time="0.001" displayname="test1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest]/[test:test1(org.jgrapht.alg.shortestpath.FloydWarshallPseudographsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="2.404" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.063" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testDirectedGraph1" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.002" displayname="testDirectedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testDirectedGraph1(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testDirectedGraph2" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.002" displayname="testDirectedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testDirectedGraph2(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testDirectedGraph3" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.002" displayname="testDirectedGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testDirectedGraph3(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="2.326" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testPseudograph" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.001" displayname="testPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testPseudograph(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testUndirectedGraph1" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.002" displayname="testUndirectedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testUndirectedGraph1(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testUndirectedGraph2" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.001" displayname="testUndirectedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testUndirectedGraph2(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testUndirectedGraph3" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.001" displayname="testUndirectedGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testUndirectedGraph3(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
      <testcase name="testUndirectedGraph4" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest" time="0.002" displayname="testUndirectedGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest]/[test:testUndirectedGraph4(org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="51.061" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.144" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testDifferentSourcesAndTargetsMultigraph" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.001" displayname="testDifferentSourcesAndTargetsMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testDifferentSourcesAndTargetsMultigraph(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesEqualTargetsMultigraph" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.0" displayname="testSourcesEqualTargetsMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testSourcesEqualTargetsMultigraph(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesEqualTargetsSimpleGraph" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.0" displayname="testSourcesEqualTargetsSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testSourcesEqualTargetsSimpleGraph(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testTargetsIsNull" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.0" displayname="testTargetsIsNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testTargetsIsNull(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="50.913" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testNoPathMultiset" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.001" displayname="testNoPathMultiset" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testNoPathMultiset(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesIsNull" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.0" displayname="testSourcesIsNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testSourcesIsNull(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testNoPath" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.0" displayname="testNoPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testNoPath(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
      <testcase name="testDifferentSourcesAndTargetsSimpleGraph" classname="org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest" time="0.0" displayname="testDifferentSourcesAndTargetsSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest]/[test:testDifferentSourcesAndTargetsSimpleGraph(org.jgrapht.alg.shortestpath.DijkstraManyToManyShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.018" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]">
      <testcase name="testNoPathInGraph" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.0" displayname="testNoPathInGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testNoPathInGraph(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testNoSourceGraph" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.0" displayname="testNoSourceGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testNoSourceGraph(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testRestHeapGraph" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.001" displayname="testRestHeapGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testRestHeapGraph(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]">
        <error>java.lang.NullPointerException: Cannot invoke "java.util.List.get(int)" because "vertices" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorProduct1.siftDown(EppsteinShortestPathIteratorProduct1.java:29)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorProduct1.heapify(EppsteinShortestPathIteratorProduct1.java:16)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.getOutrootAndRestHeapRoot(EppsteinShortestPathIterator.java:437)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.insertVertex(EppsteinShortestPathIterator.java:345)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.buildDGraph(EppsteinShortestPathIterator.java:277)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.buildPathsGraph(EppsteinShortestPathIterator.java:240)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.&lt;init&gt;(EppsteinShortestPathIterator.java:149)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest.testRestHeapGraph(EppsteinShortestPathIteratorTest.java:289)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testSimpleGraph1" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.003" displayname="testSimpleGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testSimpleGraph1(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testSimpleGraph2" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.001" displayname="testSimpleGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testSimpleGraph2(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testSimpleGraph3" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.0" displayname="testSimpleGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testSimpleGraph3(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]">
        <error>java.lang.NullPointerException: Cannot invoke "java.util.List.get(int)" because "vertices" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorProduct1.siftDown(EppsteinShortestPathIteratorProduct1.java:29)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorProduct1.heapify(EppsteinShortestPathIteratorProduct1.java:16)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.getOutrootAndRestHeapRoot(EppsteinShortestPathIterator.java:437)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.insertVertex(EppsteinShortestPathIterator.java:345)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.buildDGraph(EppsteinShortestPathIterator.java:268)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.buildPathsGraph(EppsteinShortestPathIterator.java:240)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.&lt;init&gt;(EppsteinShortestPathIterator.java:149)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest.testSimpleGraph3(EppsteinShortestPathIteratorTest.java:198)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testNoSinkGraph" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.001" displayname="testNoSinkGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testNoSinkGraph(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testNoSidetracksInGraph" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.0" displayname="testNoSidetracksInGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testNoSidetracksInGraph(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.008" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]">
        <error>java.lang.NullPointerException: Cannot invoke "java.util.List.get(int)" because "vertices" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorProduct1.siftDown(EppsteinShortestPathIteratorProduct1.java:29)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorProduct1.heapify(EppsteinShortestPathIteratorProduct1.java:16)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.getOutrootAndRestHeapRoot(EppsteinShortestPathIterator.java:437)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.insertVertex(EppsteinShortestPathIterator.java:345)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.buildDGraph(EppsteinShortestPathIterator.java:268)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.buildPathsGraph(EppsteinShortestPathIterator.java:240)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIterator.&lt;init&gt;(EppsteinShortestPathIterator.java:149)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest.testOnRandomGraph(EppsteinShortestPathIteratorTest.java:347)&#13;
	at org.jgrapht.core/org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest.testOnRandomGraphs(EppsteinShortestPathIteratorTest.java:329)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testCyclicGraph1" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.001" displayname="testCyclicGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testCyclicGraph1(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testCyclicGraph2" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.001" displayname="testCyclicGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testCyclicGraph2(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testCyclicGraph3" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.0" displayname="testCyclicGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testCyclicGraph3(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testSourceEqualsTarget" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.001" displayname="testSourceEqualsTarget" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testSourceEqualsTarget(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testNotShortestPathEdgesGraph" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.0" displayname="testNotShortestPathEdgesGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testNotShortestPathEdgesGraph(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
      <testcase name="testNoPathLeft" classname="org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest" time="0.0" displayname="testNoPathLeft" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest]/[test:testNoPathLeft(org.jgrapht.alg.shortestpath.EppsteinShortestPathIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest" time="7.66" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest]">
      <testcase name="testSimpleDisconnectedWeightedGraph" classname="org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest" time="0.003" displayname="testSimpleDisconnectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest]/[test:testSimpleDisconnectedWeightedGraph(org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest)]"/>
      <testcase name="testRandomInstances" classname="org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest" time="7.655" displayname="testRandomInstances" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest]/[test:testRandomInstances(org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest)]"/>
      <testcase name="testSimpleConnectedWeightedGraph" classname="org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest" time="0.002" displayname="testSimpleConnectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest]/[test:testSimpleConnectedWeightedGraph(org.jgrapht.alg.spanning.BoruvkaMinimumSpanningTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.WeightedGraphTest" time="0.0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphTest]">
      <testcase name="testInvalidEdgeOnWeightedGraph" classname="org.jgrapht.graph.WeightedGraphTest" time="0.0" displayname="testInvalidEdgeOnWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphTest]/[test:testInvalidEdgeOnWeightedGraph(org.jgrapht.graph.WeightedGraphTest)]"/>
      <testcase name="testDefaultWeightedEdge" classname="org.jgrapht.graph.WeightedGraphTest" time="0.0" displayname="testDefaultWeightedEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphTest]/[test:testDefaultWeightedEdge(org.jgrapht.graph.WeightedGraphTest)]"/>
      <testcase name="testStringAsWeightedEdge" classname="org.jgrapht.graph.WeightedGraphTest" time="0.0" displayname="testStringAsWeightedEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphTest]/[test:testStringAsWeightedEdge(org.jgrapht.graph.WeightedGraphTest)]"/>
      <testcase name="testDefaultEdgeOnWeightedGraphs" classname="org.jgrapht.graph.WeightedGraphTest" time="0.0" displayname="testDefaultEdgeOnWeightedGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphTest]/[test:testDefaultEdgeOnWeightedGraphs(org.jgrapht.graph.WeightedGraphTest)]"/>
      <testcase name="testInvalidEdgeOnWeightedGraphSet" classname="org.jgrapht.graph.WeightedGraphTest" time="0.0" displayname="testInvalidEdgeOnWeightedGraphSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphTest]/[test:testInvalidEdgeOnWeightedGraphSet(org.jgrapht.graph.WeightedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest" time="0.0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest]">
      <testcase name="testMedian" classname="org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest" time="0.0" displayname="testMedian" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest]/[test:testMedian(org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest)]"/>
      <testcase name="testBarycenter" classname="org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest" time="0.0" displayname="testBarycenter" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest]/[test:testBarycenter(org.jgrapht.alg.drawing.GreedyTwoLayeredBipartiteLayout2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.ComplementGraphGeneratorTest" time="0.0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.ComplementGraphGeneratorTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.generate.ComplementGraphGeneratorTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.ComplementGraphGeneratorTest]/[test:testEmptyGraph(org.jgrapht.generate.ComplementGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraph" classname="org.jgrapht.generate.ComplementGraphGeneratorTest" time="0.0" displayname="testUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.ComplementGraphGeneratorTest]/[test:testUndirectedGraph(org.jgrapht.generate.ComplementGraphGeneratorTest)]"/>
      <testcase name="testGraphWithSelfLoops" classname="org.jgrapht.generate.ComplementGraphGeneratorTest" time="0.0" displayname="testGraphWithSelfLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.ComplementGraphGeneratorTest]/[test:testGraphWithSelfLoops(org.jgrapht.generate.ComplementGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.generate.ComplementGraphGeneratorTest" time="0.0" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.ComplementGraphGeneratorTest]/[test:testDirectedGraph(org.jgrapht.generate.ComplementGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.model.MapLayoutModel2DTest" time="0.0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.MapLayoutModel2DTest]">
      <testcase name="testGeneral" classname="org.jgrapht.alg.drawing.model.MapLayoutModel2DTest" time="0.0" displayname="testGeneral" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.MapLayoutModel2DTest]/[test:testGeneral(org.jgrapht.alg.drawing.model.MapLayoutModel2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest" time="1.767" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest]">
      <testcase name="testFind2ApproximationWeightedCover" classname="org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest" time="0.05" displayname="testFind2ApproximationWeightedCover" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest]/[test:testFind2ApproximationWeightedCover(org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest)]"/>
      <testcase name="testFind2ApproximationCover2" classname="org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest" time="1.706" displayname="testFind2ApproximationCover2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest]/[test:testFind2ApproximationCover2(org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest)]"/>
      <testcase name="testFind2ApproximationCover" classname="org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest" time="0.01" displayname="testFind2ApproximationCover" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest]/[test:testFind2ApproximationCover(org.jgrapht.alg.vertexcover.BarYehudaEvenTwoApproxVCImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.util.RadixSortTest" time="0.533" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.RadixSortTest]">
      <testcase name="testEmptyArray" classname="org.jgrapht.util.RadixSortTest" time="0.075" displayname="testEmptyArray" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.RadixSortTest]/[test:testEmptyArray(org.jgrapht.util.RadixSortTest)]"/>
      <testcase name="testRandomHugeArray" classname="org.jgrapht.util.RadixSortTest" time="0.456" displayname="testRandomHugeArray" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.RadixSortTest]/[test:testRandomHugeArray(org.jgrapht.util.RadixSortTest)]"/>
      <testcase name="testSmallArray" classname="org.jgrapht.util.RadixSortTest" time="0.0" displayname="testSmallArray" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.RadixSortTest]/[test:testSmallArray(org.jgrapht.util.RadixSortTest)]"/>
      <testcase name="testNullArray" classname="org.jgrapht.util.RadixSortTest" time="0.0" displayname="testNullArray" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.RadixSortTest]/[test:testNullArray(org.jgrapht.util.RadixSortTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.302" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]">
      <testcase name="testPlanarity10" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.022" displayname="testPlanarity10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity10(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity11" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity11(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity12" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity12(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity13" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity13(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity14" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity14" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity14(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity15" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity15" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity15(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity16" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity16" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity16(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity17" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity17(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity18" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity18" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity18(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity19" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.025" displayname="testPlanarity19" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity19(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity20" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity20" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity20(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity21" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.002" displayname="testPlanarity21" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity21(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity22" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity22" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity22(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity23" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity23" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity23(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity24" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity24" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity24(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity25" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity25" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity25(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity26" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity26" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity26(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity27" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity27" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity27(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity28" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.099" displayname="testPlanarity28" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity28(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity29" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.003" displayname="testPlanarity29" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity29(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity30" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.011" displayname="testPlanarity30" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity30(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity31" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.002" displayname="testPlanarity31" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity31(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity32" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.051" displayname="testPlanarity32" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity32(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity33" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.006" displayname="testPlanarity33" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity33(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity34" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.043" displayname="testPlanarity34" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity34(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity35" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.004" displayname="testPlanarity35" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity35(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity36" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.009" displayname="testPlanarity36" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity36(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity37" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.003" displayname="testPlanarity37" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity37(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testNonPlanarGraphNoEmbedding" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testNonPlanarGraphNoEmbedding" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testNonPlanarGraphNoEmbedding(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity0" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity0(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity1" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity1(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity2" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity2(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity3" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity3(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity4" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity4(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity5" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity5(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity6" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity6(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity7" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity7(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity8" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarity8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity8(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarity9" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.0" displayname="testPlanarity9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarity9(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
      <testcase name="testPlanarGraphNoKuratowskiSubdivision" classname="org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest" time="0.001" displayname="testPlanarGraphNoKuratowskiSubdivision" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest]/[test:testPlanarGraphNoKuratowskiSubdivision(org.jgrapht.alg.planar.BoyerMyrvoldPlanarityInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.997" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]">
      <testcase name="testFranklinGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.138" displayname="testFranklinGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testFranklinGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testPoussinGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.002" displayname="testPoussinGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testPoussinGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testThomsenGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.0" displayname="testThomsenGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testThomsenGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testHerschelGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.002" displayname="testHerschelGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testHerschelGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testKrackhardtKiteGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testKrackhardtKiteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testKrackhardtKiteGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testBrinkmannGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testBrinkmannGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testBrinkmannGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testErreraGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testErreraGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testErreraGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testGossetGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.005" displayname="testGossetGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testGossetGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testDoyleGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.147" displayname="testDoyleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testDoyleGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testBlanusaSecondSnarkGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.002" displayname="testBlanusaSecondSnarkGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testBlanusaSecondSnarkGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testGoldnerHararyGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.0" displayname="testGoldnerHararyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testGoldnerHararyGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testDoubleStarSnarkGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.002" displayname="testDoubleStarSnarkGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testDoubleStarSnarkGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testFrughtGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.0" displayname="testFrughtGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testFrughtGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testPappusGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.012" displayname="testPappusGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testPappusGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testSchlaefliGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testSchlaefliGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testSchlaefliGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testKlein7RegularGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.086" displayname="testKlein7RegularGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testKlein7RegularGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testEllinghamHorton54Graph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.01" displayname="testEllinghamHorton54Graph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testEllinghamHorton54Graph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testFolkmanGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.175" displayname="testFolkmanGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testFolkmanGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testTietzeGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testTietzeGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testTietzeGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testClebschGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.1" displayname="testClebschGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testClebschGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testTutteGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.003" displayname="testTutteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testTutteGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testGroetzschGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.0" displayname="testGroetzschGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testGroetzschGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testKlein3RegularGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.17" displayname="testKlein3RegularGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testKlein3RegularGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testClawGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.0" displayname="testClawGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testClawGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testBidiakisCubeGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testBidiakisCubeGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testBidiakisCubeGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testHeawoodGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.004" displayname="testHeawoodGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testHeawoodGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testEllinghamHorton78Graph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.096" displayname="testEllinghamHorton78Graph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testEllinghamHorton78Graph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testChvatalGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testChvatalGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testChvatalGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testHoffmanGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.003" displayname="testHoffmanGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testHoffmanGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testBlanusaFirstSnarkGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testBlanusaFirstSnarkGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testBlanusaFirstSnarkGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testMoserSpindleGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testMoserSpindleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testMoserSpindleGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testKittellGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.0" displayname="testKittellGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testKittellGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testBullGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.001" displayname="testBullGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testBullGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testDiamondGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.0" displayname="testDiamondGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testDiamondGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testBuckyBallGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.003" displayname="testBuckyBallGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testBuckyBallGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
      <testcase name="testCoxeterGraph" classname="org.jgrapht.generate.NamedGraphGeneratorTest" time="0.022" displayname="testCoxeterGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.NamedGraphGeneratorTest]/[test:testCoxeterGraph(org.jgrapht.generate.NamedGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.309" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]">
      <testcase name="testTwoDisjointPathsNegative" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.142" displayname="testTwoDisjointPathsNegative" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testTwoDisjointPathsNegative(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testThreeDisjointPathsWithMultiHitsOnEdge" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.002" displayname="testThreeDisjointPathsWithMultiHitsOnEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testThreeDisjointPathsWithMultiHitsOnEdge(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPaths" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testTwoDisjointPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testTwoDisjointPaths(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testSequentialCallsSanity" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testSequentialCallsSanity" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testSequentialCallsSanity(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testUnweightedGraphIsNotChanged" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testUnweightedGraphIsNotChanged" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testUnweightedGraphIsNotChanged(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testRing" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testRing" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testRing(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testStar" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.004" displayname="testStar" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testStar(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsNoNeedToMerge" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testTwoDisjointPathsNoNeedToMerge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testTwoDisjointPathsNoNeedToMerge(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testMaximumKPathsAreReturned" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testMaximumKPathsAreReturned" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testMaximumKPathsAreReturned(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testThreeDisjointPathsReverseEdgeExist" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testThreeDisjointPathsReverseEdgeExist" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testThreeDisjointPathsReverseEdgeExist(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testDisconnectedGraphIsNotChanged" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testDisconnectedGraphIsNotChanged" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testDisconnectedGraphIsNotChanged(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsWithReversedEdgesExist" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testTwoDisjointPathsWithReversedEdgesExist" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testTwoDisjointPathsWithReversedEdgesExist(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testSinglePath" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testSinglePath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testSinglePath(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsJointNode" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testTwoDisjointPathsJointNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testTwoDisjointPathsJointNode(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testWikipediaGraph" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testWikipediaGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testWikipediaGraph(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testThreeDisjointPathsGraphIsNotChanged" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testThreeDisjointPathsGraphIsNotChanged" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testThreeDisjointPathsGraphIsNotChanged(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testUnweightedGraph" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.002" displayname="testUnweightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testUnweightedGraph(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testDisconnectedGraph" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testDisconnectedGraph(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testFirstPathEdgesFirst" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.002" displayname="testFirstPathEdgesFirst" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testFirstPathEdgesFirst(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testClique" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.145" displayname="testClique" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testClique(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testLinear" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testLinear" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testLinear(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testTwoDisjointPathsNeedToMerge" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.001" displayname="testTwoDisjointPathsNeedToMerge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testTwoDisjointPathsNeedToMerge(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
      <testcase name="testThreeDisjointPaths" classname="org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest" time="0.0" displayname="testThreeDisjointPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest]/[test:testThreeDisjointPaths(org.jgrapht.alg.shortestpath.BhandariKDisjointShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest" time="1.741" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest]">
      <testcase name="testRandomFixedSeed13" classname="org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest" time="0.512" displayname="testRandomFixedSeed13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest]/[test:testRandomFixedSeed13(org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest)]"/>
      <testcase name="testRandomFixedSeed17" classname="org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest" time="0.469" displayname="testRandomFixedSeed17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest]/[test:testRandomFixedSeed17(org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest)]"/>
      <testcase name="testRandomFixedSeed8" classname="org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest" time="0.418" displayname="testRandomFixedSeed8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest]/[test:testRandomFixedSeed8(org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest)]"/>
      <testcase name="testRandomFixedSeed" classname="org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest" time="0.341" displayname="testRandomFixedSeed" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest]/[test:testRandomFixedSeed(org.jgrapht.alg.shortestpath.AllPairsShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.vertexcover.GreedyVCImplTest" time="0.13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.GreedyVCImplTest]">
      <testcase name="testFindGreedyCover" classname="org.jgrapht.alg.vertexcover.GreedyVCImplTest" time="0.058" displayname="testFindGreedyCover" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.GreedyVCImplTest]/[test:testFindGreedyCover(org.jgrapht.alg.vertexcover.GreedyVCImplTest)]"/>
      <testcase name="testFindGreedyWeightedCover" classname="org.jgrapht.alg.vertexcover.GreedyVCImplTest" time="0.072" displayname="testFindGreedyWeightedCover" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.GreedyVCImplTest]/[test:testFindGreedyWeightedCover(org.jgrapht.alg.vertexcover.GreedyVCImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="25.972" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.001" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testEmptyGraph(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testEmptySetOfRoots" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testEmptySetOfRoots" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testEmptySetOfRoots(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testOneNode" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.001" displayname="testOneNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testOneNode(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testInvalidNode" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.001" displayname="testInvalidNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testInvalidNode(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testBinaryTree" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testBinaryTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testBinaryTree(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testDisconnectSmallGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testDisconnectSmallGraph(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testSmallTree" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testSmallTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testSmallTree(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testGraphAllPossibleQueries" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.016" displayname="testGraphAllPossibleQueries" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testGraphAllPossibleQueries(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph2" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.001" displayname="testDisconnectSmallGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testDisconnectSmallGraph2(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree2" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testTwoRootsInTheSameTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testTwoRootsInTheSameTree2(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="randomHugeConnectedTree" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="3.13" displayname="randomHugeConnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:randomHugeConnectedTree(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testTwoRootsInTheSameTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testTwoRootsInTheSameTree(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testSmallDisconnectedTrees" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="16.074" displayname="testSmallDisconnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testSmallDisconnectedTrees(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testSmallTree2" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.001" displayname="testSmallTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testSmallTree2(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testRootNotInGraph" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testRootNotInGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testRootNotInGraph(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testNotExploredNode" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testNotExploredNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testNotExploredNode(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testLongChain" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.039" displayname="testLongChain" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testLongChain(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="randomHugePossiblyDisconnectedTree" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="2.802" displayname="randomHugePossiblyDisconnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:randomHugePossiblyDisconnectedTree(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testNonBinaryTreeBatch" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="0.0" displayname="testNonBinaryTreeBatch" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testNonBinaryTreeBatch(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
      <testcase name="testSmallConnectedTrees" classname="org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest" time="3.904" displayname="testSmallConnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest]/[test:testSmallConnectedTrees(org.jgrapht.alg.lca.EulerTourRMQLCAFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.958" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]">
      <testcase name="testIsWeaklyChordal10" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.009" displayname="testIsWeaklyChordal10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal10(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal11" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.0" displayname="testIsWeaklyChordal11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal11(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal12" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.093" displayname="testIsWeaklyChordal12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal12(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal13" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.003" displayname="testIsWeaklyChordal13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal13(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal14" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.001" displayname="testIsWeaklyChordal14" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal14(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal15" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.001" displayname="testIsWeaklyChordal15" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal15(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal16" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.002" displayname="testIsWeaklyChordal16" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal16(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal17" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.011" displayname="testIsWeaklyChordal17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal17(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal18" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.003" displayname="testIsWeaklyChordal18" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal18(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal19" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.316" displayname="testIsWeaklyChordal19" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal19(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal20" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.07" displayname="testIsWeaklyChordal20" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal20(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal21" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.004" displayname="testIsWeaklyChordal21" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal21(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal22" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.002" displayname="testIsWeaklyChordal22" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal22(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal23" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.015" displayname="testIsWeaklyChordal23" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal23(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal24" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.002" displayname="testIsWeaklyChordal24" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal24(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal25" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.002" displayname="testIsWeaklyChordal25" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal25(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal26" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.001" displayname="testIsWeaklyChordal26" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal26(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal1" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.0" displayname="testIsWeaklyChordal1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal1(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal2" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.0" displayname="testIsWeaklyChordal2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal2(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal3" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.0" displayname="testIsWeaklyChordal3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal3(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal4" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.0" displayname="testIsWeaklyChordal4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal4(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal5" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.001" displayname="testIsWeaklyChordal5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal5(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal6" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.0" displayname="testIsWeaklyChordal6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal6(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal7" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.001" displayname="testIsWeaklyChordal7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal7(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal8" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.112" displayname="testIsWeaklyChordal8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal8(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
      <testcase name="testIsWeaklyChordal9" classname="org.jgrapht.alg.cycle.WeakChordalityInspectorTest" time="0.307" displayname="testIsWeaklyChordal9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.WeakChordalityInspectorTest]/[test:testIsWeaklyChordal9(org.jgrapht.alg.cycle.WeakChordalityInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest" time="0.013" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest]">
      <testcase name="testGetMaximumClique1" classname="org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest" time="0.011" displayname="testGetMaximumClique1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest]/[test:testGetMaximumClique1(org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest)]"/>
      <testcase name="testGetMaximumClique2" classname="org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest" time="0.001" displayname="testGetMaximumClique2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest]/[test:testGetMaximumClique2(org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest)]"/>
      <testcase name="testGetMaximumClique3" classname="org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest" time="0.0" displayname="testGetMaximumClique3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest]/[test:testGetMaximumClique3(org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest)]"/>
      <testcase name="testGetMaximumClique4" classname="org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest" time="0.0" displayname="testGetMaximumClique4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest]/[test:testGetMaximumClique4(org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.GenericGraphsTest" time="0.041" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GenericGraphsTest]">
      <testcase name="testEqualButNotSameVertex" classname="org.jgrapht.graph.GenericGraphsTest" time="0.008" displayname="testEqualButNotSameVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GenericGraphsTest]/[test:testEqualButNotSameVertex(org.jgrapht.graph.GenericGraphsTest)]"/>
      <testcase name="testLegalInsertStringGraph" classname="org.jgrapht.graph.GenericGraphsTest" time="0.0" displayname="testLegalInsertStringGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GenericGraphsTest]/[test:testLegalInsertStringGraph(org.jgrapht.graph.GenericGraphsTest)]"/>
      <testcase name="testLegalInsertFooGraph" classname="org.jgrapht.graph.GenericGraphsTest" time="0.004" displayname="testLegalInsertFooGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GenericGraphsTest]/[test:testLegalInsertFooGraph(org.jgrapht.graph.GenericGraphsTest)]"/>
      <testcase name="testAlissaHacker" classname="org.jgrapht.graph.GenericGraphsTest" time="0.028" displayname="testAlissaHacker" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GenericGraphsTest]/[test:testAlissaHacker(org.jgrapht.graph.GenericGraphsTest)]"/>
      <testcase name="testLegalInsertFooBarGraph" classname="org.jgrapht.graph.GenericGraphsTest" time="0.001" displayname="testLegalInsertFooBarGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GenericGraphsTest]/[test:testLegalInsertFooBarGraph(org.jgrapht.graph.GenericGraphsTest)]"/>
      <testcase name="testLegalInsertBarGraph" classname="org.jgrapht.graph.GenericGraphsTest" time="0.0" displayname="testLegalInsertBarGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GenericGraphsTest]/[test:testLegalInsertBarGraph(org.jgrapht.graph.GenericGraphsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.JohnsonSimpleCyclesTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.JohnsonSimpleCyclesTest]">
      <testcase name="testSmallExample" classname="org.jgrapht.alg.cycle.JohnsonSimpleCyclesTest" time="0.005" displayname="testSmallExample" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.JohnsonSimpleCyclesTest]/[test:testSmallExample(org.jgrapht.alg.cycle.JohnsonSimpleCyclesTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]">
      <testcase name="testAddEdge" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.001" displayname="testAddEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testAddEdge(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testGetPenultimateBlossomAndFixBlossomGrandparent" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.001" displayname="testGetPenultimateBlossomAndFixBlossomGrandparent" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testGetPenultimateBlossomAndFixBlossomGrandparent(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testIncidentEdgeIterator1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.001" displayname="testIncidentEdgeIterator1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testIncidentEdgeIterator1(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testGetPenultimateBlossom" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.001" displayname="testGetPenultimateBlossom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testGetPenultimateBlossom(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testRemoveFromChildList" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.0" displayname="testRemoveFromChildList" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testRemoveFromChildList(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testRemoveEdge" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.0" displayname="testRemoveEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testRemoveEdge(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testAncestors" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.0" displayname="testAncestors" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testAncestors(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testLabels" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.0" displayname="testLabels" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testLabels(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
      <testcase name="testMoveChildrenTo" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest" time="0.0" displayname="testMoveChildrenTo" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest]/[test:testMoveChildrenTo(org.jgrapht.alg.matching.blossom.v5.BlossomVNodeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest]">
      <testcase name="testGetCurrentPlusMinusHeap" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest" time="0.001" displayname="testGetCurrentPlusMinusHeap" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest]/[test:testGetCurrentPlusMinusHeap(org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest)]"/>
      <testcase name="testRemoveFromTreeEdgeList" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest" time="0.0" displayname="testRemoveFromTreeEdgeList" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest]/[test:testRemoveFromTreeEdgeList(org.jgrapht.alg.matching.blossom.v5.BlossomVTreeEdgeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest" time="0.775" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest]">
      <testcase name="testFind2ApproximationWeightedCover" classname="org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest" time="0.089" displayname="testFind2ApproximationWeightedCover" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest]/[test:testFind2ApproximationWeightedCover(org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest)]"/>
      <testcase name="testFind2ApproximationCover2" classname="org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest" time="0.635" displayname="testFind2ApproximationCover2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest]/[test:testFind2ApproximationCover2(org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest)]"/>
      <testcase name="testFind2ApproximationCover" classname="org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest" time="0.051" displayname="testFind2ApproximationCover" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest]/[test:testFind2ApproximationCover(org.jgrapht.alg.vertexcover.ClarksonTwoApproxVCImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest" time="0.029" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest" time="0.029" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest)]"/>
      <testcase name="testInvalidPrediction" classname="org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest" time="0.0" displayname="testInvalidPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest]/[test:testInvalidPrediction(org.jgrapht.alg.linkprediction.ResourceAllocationIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]">
      <testcase name="testGraph2Nodes" classname="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.004" displayname="testGraph2Nodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]/[test:testGraph2Nodes(org.jgrapht.alg.scoring.EigenvectorCentralityTest)]"/>
      <testcase name="testGraph3Nodes" classname="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.0" displayname="testGraph3Nodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]/[test:testGraph3Nodes(org.jgrapht.alg.scoring.EigenvectorCentralityTest)]"/>
      <testcase name="testBadParameters1" classname="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.0" displayname="testBadParameters1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]/[test:testBadParameters1(org.jgrapht.alg.scoring.EigenvectorCentralityTest)]"/>
      <testcase name="testBadParameters2" classname="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.0" displayname="testBadParameters2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]/[test:testBadParameters2(org.jgrapht.alg.scoring.EigenvectorCentralityTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.001" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]/[test:testGraph1(org.jgrapht.alg.scoring.EigenvectorCentralityTest)]"/>
      <testcase name="testNonExistantVertex" classname="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.0" displayname="testNonExistantVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]/[test:testNonExistantVertex(org.jgrapht.alg.scoring.EigenvectorCentralityTest)]"/>
      <testcase name="testWeightedGraph1" classname="org.jgrapht.alg.scoring.EigenvectorCentralityTest" time="0.001" displayname="testWeightedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.EigenvectorCentralityTest]/[test:testWeightedGraph1(org.jgrapht.alg.scoring.EigenvectorCentralityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest" time="0.145" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest]">
      <testcase name="testBadInput" classname="org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest" time="0.14" displayname="testBadInput" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest]/[test:testBadInput(org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest)]"/>
      <testcase name="testWithDifferentAspectRatio" classname="org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest" time="0.001" displayname="testWithDifferentAspectRatio" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest]/[test:testWithDifferentAspectRatio(org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest)]"/>
      <testcase name="testSimple" classname="org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest" time="0.003" displayname="testSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest]/[test:testSimple(org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest)]"/>
      <testcase name="testBadInput1" classname="org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest" time="0.001" displayname="testBadInput1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest]/[test:testBadInput1(org.jgrapht.alg.drawing.RescaleLayoutAlgorithm2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.util.FixedSizeIntegerQueueTest" time="0.0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.FixedSizeIntegerQueueTest]">
      <testcase name="testQueue" classname="org.jgrapht.alg.util.FixedSizeIntegerQueueTest" time="0.0" displayname="testQueue" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.FixedSizeIntegerQueueTest]/[test:testQueue(org.jgrapht.alg.util.FixedSizeIntegerQueueTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.LexBreadthFirstIteratorTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.LexBreadthFirstIteratorTest]">
      <testcase name="testLexicographicalBfsIterator1" classname="org.jgrapht.traverse.LexBreadthFirstIteratorTest" time="0.001" displayname="testLexicographicalBfsIterator1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.LexBreadthFirstIteratorTest]/[test:testLexicographicalBfsIterator1(org.jgrapht.traverse.LexBreadthFirstIteratorTest)]"/>
      <testcase name="testLexicographicalBfsIterator2" classname="org.jgrapht.traverse.LexBreadthFirstIteratorTest" time="0.0" displayname="testLexicographicalBfsIterator2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.LexBreadthFirstIteratorTest]/[test:testLexicographicalBfsIterator2(org.jgrapht.traverse.LexBreadthFirstIteratorTest)]"/>
      <testcase name="testLexicographicalBfsIterator3" classname="org.jgrapht.traverse.LexBreadthFirstIteratorTest" time="0.0" displayname="testLexicographicalBfsIterator3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.LexBreadthFirstIteratorTest]/[test:testLexicographicalBfsIterator3(org.jgrapht.traverse.LexBreadthFirstIteratorTest)]"/>
      <testcase name="testLexicographicalBfsIterator4" classname="org.jgrapht.traverse.LexBreadthFirstIteratorTest" time="0.002" displayname="testLexicographicalBfsIterator4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.LexBreadthFirstIteratorTest]/[test:testLexicographicalBfsIterator4(org.jgrapht.traverse.LexBreadthFirstIteratorTest)]"/>
      <testcase name="testEvents" classname="org.jgrapht.traverse.LexBreadthFirstIteratorTest" time="0.0" displayname="testEvents" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.LexBreadthFirstIteratorTest]/[test:testEvents(org.jgrapht.traverse.LexBreadthFirstIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.RandomLayoutAlgorithm2DTest" time="0.02" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.RandomLayoutAlgorithm2DTest]">
      <testcase name="testRandom" classname="org.jgrapht.alg.drawing.RandomLayoutAlgorithm2DTest" time="0.02" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.RandomLayoutAlgorithm2DTest]/[test:testRandom(org.jgrapht.alg.drawing.RandomLayoutAlgorithm2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest" time="0.058" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest]">
      <testcase name="testGraphWithIsolatedVertex" classname="org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest" time="0.017" displayname="testGraphWithIsolatedVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest]/[test:testGraphWithIsolatedVertex(org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest" time="0.005" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest]/[test:testGraph1(org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest)]"/>
      <testcase name="testInitializerSamePosition" classname="org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest" time="0.036" displayname="testInitializerSamePosition" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest]/[test:testInitializerSamePosition(org.jgrapht.alg.drawing.FRLayoutAlgorithm2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.TreeMeasurerTest" time="0.04" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TreeMeasurerTest]">
      <testcase name="testTwoCenters" classname="org.jgrapht.alg.shortestpath.TreeMeasurerTest" time="0.039" displayname="testTwoCenters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TreeMeasurerTest]/[test:testTwoCenters(org.jgrapht.alg.shortestpath.TreeMeasurerTest)]"/>
      <testcase name="testOneCenter" classname="org.jgrapht.alg.shortestpath.TreeMeasurerTest" time="0.001" displayname="testOneCenter" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TreeMeasurerTest]/[test:testOneCenter(org.jgrapht.alg.shortestpath.TreeMeasurerTest)]"/>
      <testcase name="testNoCenters" classname="org.jgrapht.alg.shortestpath.TreeMeasurerTest" time="0.0" displayname="testNoCenters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TreeMeasurerTest]/[test:testNoCenters(org.jgrapht.alg.shortestpath.TreeMeasurerTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="4.838" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]">
      <testcase name="testRandomDirectedGraphs" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="2.74" displayname="testRandomDirectedGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testRandomDirectedGraphs(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testRandomUndirectedGraphs" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="2.051" displayname="testRandomUndirectedGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testRandomUndirectedGraphs(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testProblematicCase" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testProblematicCase" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testProblematicCase(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN1" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testUndirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN1(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN2" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testUndirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN2(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN3" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testUndirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN3(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN4" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.004" displayname="testUndirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN4(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN5" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.001" displayname="testUndirectedN5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN5(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN6" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.001" displayname="testUndirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN6(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN7" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testUndirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN7(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN8" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.003" displayname="testUndirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN8(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN9" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.001" displayname="testUndirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testUndirectedN9(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN0" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.003" displayname="testDirectedN0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN0(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN1" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testDirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN1(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN2" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.001" displayname="testDirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN2(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN3" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testDirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN3(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN4" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.001" displayname="testDirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN4(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN6" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.005" displayname="testDirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN6(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN7" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.005" displayname="testDirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN7(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN8" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.0" displayname="testDirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN8(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN9" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.001" displayname="testDirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN9(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN10" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.004" displayname="testDirectedN10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN10(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN11" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.012" displayname="testDirectedN11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN11(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
      <testcase name="testDirectedN12" classname="org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest" time="0.003" displayname="testDirectedN12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest]/[test:testDirectedN12(org.jgrapht.alg.flow.EdmondsKarpMinimumSTCutTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clique.BronKerboschCliqueFinderTest" time="0.075" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.BronKerboschCliqueFinderTest]">
      <testcase name="testFindAll" classname="org.jgrapht.alg.clique.BronKerboschCliqueFinderTest" time="0.072" displayname="testFindAll" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.BronKerboschCliqueFinderTest]/[test:testFindAll(org.jgrapht.alg.clique.BronKerboschCliqueFinderTest)]"/>
      <testcase name="testFindBiggest" classname="org.jgrapht.alg.clique.BronKerboschCliqueFinderTest" time="0.001" displayname="testFindBiggest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.BronKerboschCliqueFinderTest]/[test:testFindBiggest(org.jgrapht.alg.clique.BronKerboschCliqueFinderTest)]"/>
      <testcase name="testComplete" classname="org.jgrapht.alg.clique.BronKerboschCliqueFinderTest" time="0.002" displayname="testComplete" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.BronKerboschCliqueFinderTest]/[test:testComplete(org.jgrapht.alg.clique.BronKerboschCliqueFinderTest)]"/>
      <testcase name="testNonSimple" classname="org.jgrapht.alg.clique.BronKerboschCliqueFinderTest" time="0.0" displayname="testNonSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.BronKerboschCliqueFinderTest]/[test:testNonSimple(org.jgrapht.alg.clique.BronKerboschCliqueFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.024" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]">
      <testcase name="testContainsEdgeObjectObject" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.009" displayname="testContainsEdgeObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testContainsEdgeObjectObject(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testOutgoingEdgesOf" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testOutgoingEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testOutgoingEdgesOf(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testContainsVertex" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testContainsVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testContainsVertex(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testRemoveEdgeObjectObject" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.002" displayname="testRemoveEdgeObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testRemoveEdgeObjectObject(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testRemoveEdgeEdge" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.001" displayname="testRemoveEdgeEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testRemoveEdgeEdge(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testGetAllEdges" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testGetAllEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testGetAllEdges(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testVertexSet" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.001" displayname="testVertexSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testVertexSet(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testGetEdge" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testGetEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testGetEdge(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testInDegreeOf" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.003" displayname="testInDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testInDegreeOf(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testGetEdgeSupplier" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.001" displayname="testGetEdgeSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testGetEdgeSupplier(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testAddEdgeEdge" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testAddEdgeEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testAddEdgeEdge(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testContainsEdgeEdge" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testContainsEdgeEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testContainsEdgeEdge(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testRemoveVertex" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.001" displayname="testRemoveVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testRemoveVertex(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testAddVertex" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.001" displayname="testAddVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testAddVertex(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testReversedView" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.001" displayname="testReversedView" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testReversedView(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testAddEdgeObjectObject" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testAddEdgeObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testAddEdgeObjectObject(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testOutDegreeOf" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testOutDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testOutDegreeOf(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testRemoveAllEdgesObjectObject" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testRemoveAllEdgesObjectObject" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testRemoveAllEdgesObjectObject(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testEdgeSet" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.001" displayname="testEdgeSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testEdgeSet(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testEdgesOf" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testEdgesOf(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
      <testcase name="testIncomingOutgoingEdgesOf" classname="org.jgrapht.graph.SimpleIdentityDirectedGraphTest" time="0.0" displayname="testIncomingOutgoingEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.SimpleIdentityDirectedGraphTest]/[test:testIncomingOutgoingEdgesOf(org.jgrapht.graph.SimpleIdentityDirectedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.connectivity.ConnectivityInspectorTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.ConnectivityInspectorTest]">
      <testcase name="testIsGraphConnected" classname="org.jgrapht.alg.connectivity.ConnectivityInspectorTest" time="0.0" displayname="testIsGraphConnected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.ConnectivityInspectorTest]/[test:testIsGraphConnected(org.jgrapht.alg.connectivity.ConnectivityInspectorTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.alg.connectivity.ConnectivityInspectorTest" time="0.001" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.ConnectivityInspectorTest]/[test:testDirectedGraph(org.jgrapht.alg.connectivity.ConnectivityInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.GraphWalkTest" time="0.041" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]">
      <testcase name="testFirstEmptyWalkEquality" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testFirstEmptyWalkEquality" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testFirstEmptyWalkEquality(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testValidPaths" classname="org.jgrapht.graph.GraphWalkTest" time="0.0" displayname="testValidPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testValidPaths(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testEmptyPath" classname="org.jgrapht.graph.GraphWalkTest" time="0.0" displayname="testEmptyPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testEmptyPath(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testReversePathUndirected" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testReversePathUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testReversePathUndirected(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testIllegalConcatPath1" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testIllegalConcatPath1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testIllegalConcatPath1(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testIllegalConcatPath2" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testIllegalConcatPath2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testIllegalConcatPath2(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testConcatPath1" classname="org.jgrapht.graph.GraphWalkTest" time="0.0" displayname="testConcatPath1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testConcatPath1(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testReverseInvalidPathDirected" classname="org.jgrapht.graph.GraphWalkTest" time="0.031" displayname="testReverseInvalidPathDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testReverseInvalidPathDirected(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testConcatPathWithSingleton" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testConcatPathWithSingleton" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testConcatPathWithSingleton(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testReversePathDirected" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testReversePathDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testReversePathDirected(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testInvalidPath1" classname="org.jgrapht.graph.GraphWalkTest" time="0.0" displayname="testInvalidPath1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testInvalidPath1(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testInvalidPath2" classname="org.jgrapht.graph.GraphWalkTest" time="0.0" displayname="testInvalidPath2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testInvalidPath2(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testInvalidPath3" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testInvalidPath3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testInvalidPath3(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testInvalidPath4" classname="org.jgrapht.graph.GraphWalkTest" time="0.0" displayname="testInvalidPath4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testInvalidPath4(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testInvalidPath5" classname="org.jgrapht.graph.GraphWalkTest" time="0.0" displayname="testInvalidPath5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testInvalidPath5(org.jgrapht.graph.GraphWalkTest)]"/>
      <testcase name="testNonSimplePath" classname="org.jgrapht.graph.GraphWalkTest" time="0.001" displayname="testNonSimplePath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.GraphWalkTest]/[test:testNonSimplePath(org.jgrapht.graph.GraphWalkTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.752" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]">
      <testcase name="testGraphWithNoEdges" classname="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.004" displayname="testGraphWithNoEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]/[test:testGraphWithNoEdges(org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest)]"/>
      <testcase name="testSquareGraph" classname="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.003" displayname="testSquareGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]/[test:testSquareGraph(org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest)]"/>
      <testcase name="testRandomGraphs" classname="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.738" displayname="testRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]/[test:testRandomGraphs(org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest)]"/>
      <testcase name="testTriangleGraph" classname="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.001" displayname="testTriangleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]/[test:testTriangleGraph(org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest)]"/>
      <testcase name="testWikipediaGraph" classname="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.003" displayname="testWikipediaGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]/[test:testWikipediaGraph(org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest)]"/>
      <testcase name="testGomoryHuExampleGraph" classname="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.002" displayname="testGomoryHuExampleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]/[test:testGomoryHuExampleGraph(org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest)]"/>
      <testcase name="testDisconnectedGraph" classname="org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest" time="0.001" displayname="testDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest]/[test:testDisconnectedGraph(org.jgrapht.alg.flow.GusfieldGomoryHuCutTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.681" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]">
      <testcase name="testEmptyMatching" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.001" displayname="testEmptyMatching" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testEmptyMatching(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
      <testcase name="testRandomBipartiteGraphs" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.637" displayname="testRandomBipartiteGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testRandomBipartiteGraphs(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
      <testcase name="testBipartiteMatching1" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.04" displayname="testBipartiteMatching1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testBipartiteMatching1(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
      <testcase name="testBipartiteMatching2" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.0" displayname="testBipartiteMatching2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testBipartiteMatching2(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
      <testcase name="testPseudoGraph" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.0" displayname="testPseudoGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testPseudoGraph(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testGraph1(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
      <testcase name="testGraph2" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.001" displayname="testGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testGraph2(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
      <testcase name="testBipartiteMatchingIssue233" classname="org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest" time="0.0" displayname="testBipartiteMatchingIssue233" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest]/[test:testBipartiteMatchingIssue233(org.jgrapht.alg.matching.HopcroftKarpMaximumCardinalityBipartiteMatchingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.TransitiveReductionTest" time="0.077" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]">
      <testcase name="testReduceNull" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.073" displayname="testReduceNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testReduceNull(org.jgrapht.alg.TransitiveReductionTest)]"/>
      <testcase name="testReduceAlreadyReduced" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.001" displayname="testReduceAlreadyReduced" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testReduceAlreadyReduced(org.jgrapht.alg.TransitiveReductionTest)]"/>
      <testcase name="testReduceFarAway" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.0" displayname="testReduceFarAway" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testReduceFarAway(org.jgrapht.alg.TransitiveReductionTest)]"/>
      <testcase name="testReduceBasic" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.0" displayname="testReduceBasic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testReduceBasic(org.jgrapht.alg.TransitiveReductionTest)]"/>
      <testcase name="testReduceNoVertexNoEdge" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.0" displayname="testReduceNoVertexNoEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testReduceNoVertexNoEdge(org.jgrapht.alg.TransitiveReductionTest)]"/>
      <testcase name="testInternals" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.001" displayname="testInternals" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testInternals(org.jgrapht.alg.TransitiveReductionTest)]"/>
      <testcase name="testReduceCanonicalGraph" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.0" displayname="testReduceCanonicalGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testReduceCanonicalGraph(org.jgrapht.alg.TransitiveReductionTest)]"/>
      <testcase name="testReduceSomeVerticesNoEdge" classname="org.jgrapht.alg.TransitiveReductionTest" time="0.001" displayname="testReduceSomeVerticesNoEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveReductionTest]/[test:testReduceSomeVerticesNoEdge(org.jgrapht.alg.TransitiveReductionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.012" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]">
      <testcase name="testSimpleGraph" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.008" displayname="testSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testSimpleGraph(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testCompleteSimpleGraph" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testCompleteSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testCompleteSimpleGraph(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testNegativeD" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testNegativeD" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testNegativeD(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testNegativeN" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testNegativeN" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testNegativeN(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testOddDTimesN" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testOddDTimesN" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testOddDTimesN(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testZeroNodes" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testZeroNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testZeroNodes(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testPseudograph" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.002" displayname="testPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testPseudograph(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testCompletePseudograph" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testCompletePseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testCompletePseudograph(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testDGreaterThanN" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testDGreaterThanN" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testDGreaterThanN(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.001" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testDirectedGraph(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
      <testcase name="testZeroDegree" classname="org.jgrapht.generate.RandomRegularGraphGeneratorTest" time="0.0" displayname="testZeroDegree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.RandomRegularGraphGeneratorTest]/[test:testZeroDegree(org.jgrapht.generate.RandomRegularGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.ListSingleSourcePathsTest" time="0.106" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ListSingleSourcePathsTest]">
      <testcase name="test" classname="org.jgrapht.alg.shortestpath.ListSingleSourcePathsTest" time="0.106" displayname="test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ListSingleSourcePathsTest]/[test:test(org.jgrapht.alg.shortestpath.ListSingleSourcePathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clustering.GirvanNewmanClusteringTest" time="0.071" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.GirvanNewmanClusteringTest]">
      <testcase name="testUndirectedGraph" classname="org.jgrapht.alg.clustering.GirvanNewmanClusteringTest" time="0.071" displayname="testUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.GirvanNewmanClusteringTest]/[test:testUndirectedGraph(org.jgrapht.alg.clustering.GirvanNewmanClusteringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest" time="0.13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest]">
      <testcase name="testGraph1" classname="org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest" time="0.123" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest]/[test:testGraph1(org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest)]"/>
      <testcase name="testGraph2" classname="org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest" time="0.001" displayname="testGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest]/[test:testGraph2(org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest)]"/>
      <testcase name="testGraph3" classname="org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest" time="0.004" displayname="testGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest]/[test:testGraph3(org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest)]"/>
      <testcase name="testGraph1WithLoops" classname="org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest" time="0.001" displayname="testGraph1WithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest]/[test:testGraph1WithLoops(org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest)]"/>
      <testcase name="testNegativeWeightsGraph" classname="org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest" time="0.0" displayname="testNegativeWeightsGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest]/[test:testNegativeWeightsGraph(org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest)]"/>
      <testcase name="testGraph1WithMultipleEdges" classname="org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest" time="0.0" displayname="testGraph1WithMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest]/[test:testGraph1WithMultipleEdges(org.jgrapht.alg.spanning.GreedyMultiplicativeSpannerTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.GraphTestsTest" time="0.098" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]">
      <testcase name="testHasSelfLoops" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testHasSelfLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testHasSelfLoops(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsConnectedDirected" classname="org.jgrapht.GraphTestsTest" time="0.085" displayname="testIsConnectedDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsConnectedDirected(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsOverfull" classname="org.jgrapht.GraphTestsTest" time="0.003" displayname="testIsOverfull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsOverfull(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="failRequireIsWeightedOnUnweightedGraph" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="failRequireIsWeightedOnUnweightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:failRequireIsWeightedOnUnweightedGraph(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsConnectedUndirected" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsConnectedUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsConnectedUndirected(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsForest1" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsForest1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsForest1(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsForest2" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="testIsForest2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsForest2(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsK5Subdivision1" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsK5Subdivision1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsK5Subdivision1(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsK5Subdivision2" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="testIsK5Subdivision2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsK5Subdivision2(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsPlanar1" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsPlanar1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsPlanar1(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsPlanar2" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsPlanar2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsPlanar2(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsPlanar3" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="testIsPlanar3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsPlanar3(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testHasMultipleEdges" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testHasMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testHasMultipleEdges(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="isSplit1" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="isSplit1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:isSplit1(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="isSplit2" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="isSplit2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:isSplit2(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsWeaklyChordal" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="testIsWeaklyChordal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsWeaklyChordal(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsSimple" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsSimple(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsChordal" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsChordal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsChordal(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsCompleteDirected" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsCompleteDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsCompleteDirected(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="failRequireIsWeightedOnNull" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="failRequireIsWeightedOnNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:failRequireIsWeightedOnNull(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsCompleteUndirected" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsCompleteUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsCompleteUndirected(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsTree" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="testIsTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsTree(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsCubic" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsCubic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsCubic(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsEmpty" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsEmpty" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsEmpty(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsK33Subdivision1" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testIsK33Subdivision1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsK33Subdivision1(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testIsK33Subdivision2" classname="org.jgrapht.GraphTestsTest" time="0.001" displayname="testIsK33Subdivision2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testIsK33Subdivision2(org.jgrapht.GraphTestsTest)]"/>
      <testcase name="testRequireIsWeighted" classname="org.jgrapht.GraphTestsTest" time="0.0" displayname="testRequireIsWeighted" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphTestsTest]/[test:testRequireIsWeighted(org.jgrapht.GraphTestsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="9.248" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.11" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testDifferentSourcesAndTargetsMultigraph" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.011" displayname="testDifferentSourcesAndTargetsMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testDifferentSourcesAndTargetsMultigraph(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesEqualTargetsMultigraph" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.002" displayname="testSourcesEqualTargetsMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testSourcesEqualTargetsMultigraph(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesEqualTargetsSimpleGraph" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.003" displayname="testSourcesEqualTargetsSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testSourcesEqualTargetsSimpleGraph(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testTargetsIsNull" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.001" displayname="testTargetsIsNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testTargetsIsNull(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="9.02" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testMoreSourcesThanTargets1" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.003" displayname="testMoreSourcesThanTargets1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testMoreSourcesThanTargets1(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testMoreSourcesThanTargets2" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.002" displayname="testMoreSourcesThanTargets2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testMoreSourcesThanTargets2(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesIsNull" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.001" displayname="testSourcesIsNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testSourcesIsNull(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testNoPath" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.0" displayname="testNoPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testNoPath(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
      <testcase name="testDifferentSourcesAndTargetsSimpleGraph" classname="org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest" time="0.095" displayname="testDifferentSourcesAndTargetsSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest]/[test:testDifferentSourcesAndTargetsSimpleGraph(org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.HubPromotedIndexLinkPredictionTest" time="0.111" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.HubPromotedIndexLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.HubPromotedIndexLinkPredictionTest" time="0.111" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.HubPromotedIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.HubPromotedIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.021" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]">
      <testcase name="testInstanceWithRandomness" classname="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.014" displayname="testInstanceWithRandomness" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]/[test:testInstanceWithRandomness(org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testViolatedCapacityConstraint" classname="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.003" displayname="testViolatedCapacityConstraint" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]/[test:testViolatedCapacityConstraint(org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testUnconnectedGraph" classname="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.0" displayname="testUnconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]/[test:testUnconnectedGraph(org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstance1" classname="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.001" displayname="testInstance1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]/[test:testInstance1(org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstance2" classname="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.001" displayname="testInstance2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]/[test:testInstance2(org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInstance3" classname="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.001" displayname="testInstance3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]/[test:testInstance3(org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest)]"/>
      <testcase name="testInvalidGraph" classname="org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest" time="0.001" displayname="testInvalidGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest]/[test:testInvalidGraph(org.jgrapht.alg.spanning.EsauWilliamsCapacitatedMinimumSpanningTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.AsUndirectedGraphTest" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]">
      <testcase name="testOutgoingEdgesOf" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.001" displayname="testOutgoingEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testOutgoingEdgesOf(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testAddEdge" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testAddEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testAddEdge(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testGetAllEdges" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testGetAllEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testGetAllEdges(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testToString" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.001" displayname="testToString" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testToString(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testGetEdge" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testGetEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testGetEdge(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testInDegreeOf" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testInDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testInDegreeOf(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testRemoveVertex" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testRemoveVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testRemoveVertex(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testRemoveEdge" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testRemoveEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testRemoveEdge(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testAddVertex" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testAddVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testAddVertex(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testDegreeOf" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testDegreeOf(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testOutDegreeOf" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testOutDegreeOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testOutDegreeOf(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testEdgesOf" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.0" displayname="testEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testEdgesOf(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
      <testcase name="testIncomingEdgesOf" classname="org.jgrapht.graph.AsUndirectedGraphTest" time="0.001" displayname="testIncomingEdgesOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUndirectedGraphTest]/[test:testIncomingEdgesOf(org.jgrapht.graph.AsUndirectedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="3.173" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]">
      <testcase name="testTarjan1985" classname="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="0.004" displayname="testTarjan1985" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]/[test:testTarjan1985(org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest)]"/>
      <testcase name="testSimpleGraph1" classname="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="0.001" displayname="testSimpleGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]/[test:testSimpleGraph1(org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest)]"/>
      <testcase name="testSimpleGraph2" classname="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="0.0" displayname="testSimpleGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]/[test:testSimpleGraph2(org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest)]"/>
      <testcase name="testPseudograph1" classname="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="0.001" displayname="testPseudograph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]/[test:testPseudograph1(org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest)]"/>
      <testcase name="testRandomGraphs" classname="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="3.164" displayname="testRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]/[test:testRandomGraphs(org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest)]"/>
      <testcase name="testBerry2010" classname="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="0.001" displayname="testBerry2010" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]/[test:testBerry2010(org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest" time="0.002" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest]/[test:testGraph1(org.jgrapht.alg.clique.CliqueMinimalSeparatorDecompositionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.024" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.021" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]/[test:testEmptyGraph(org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testMultigraphsWithLoops" classname="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.001" displayname="testMultigraphsWithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]/[test:testMultigraphsWithLoops(org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testZeroCycleSpaceDimension" classname="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.0" displayname="testZeroCycleSpaceDimension" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]/[test:testZeroCycleSpaceDimension(org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testTwoParallelEdges" classname="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.001" displayname="testTwoParallelEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]/[test:testTwoParallelEdges(org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testMoreParallelEdges" classname="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.0" displayname="testMoreParallelEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]/[test:testMoreParallelEdges(org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testMultiGraphWithMultipleComponentsWithLoops" classname="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.0" displayname="testMultiGraphWithMultipleComponentsWithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]/[test:testMultiGraphWithMultipleComponentsWithLoops(org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testSimple" classname="org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest" time="0.001" displayname="testSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest]/[test:testSimple(org.jgrapht.alg.cycle.QueueBFSFundamentalCycleBasisTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.model.BoxesTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.BoxesTest]">
      <testcase name="testContainsPoint2D" classname="org.jgrapht.alg.drawing.model.BoxesTest" time="0.001" displayname="testContainsPoint2D" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.BoxesTest]/[test:testContainsPoint2D(org.jgrapht.alg.drawing.model.BoxesTest)]"/>
      <testcase name="testSplitAlongXAxis" classname="org.jgrapht.alg.drawing.model.BoxesTest" time="0.0" displayname="testSplitAlongXAxis" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.BoxesTest]/[test:testSplitAlongXAxis(org.jgrapht.alg.drawing.model.BoxesTest)]"/>
      <testcase name="testSplitAlongYAxis" classname="org.jgrapht.alg.drawing.model.BoxesTest" time="0.0" displayname="testSplitAlongYAxis" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.BoxesTest]/[test:testSplitAlongYAxis(org.jgrapht.alg.drawing.model.BoxesTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.MaskSubgraphTest" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskSubgraphTest]">
      <testcase name="testInOutEdgesUndirected" classname="org.jgrapht.graph.MaskSubgraphTest" time="0.002" displayname="testInOutEdgesUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskSubgraphTest]/[test:testInOutEdgesUndirected(org.jgrapht.graph.MaskSubgraphTest)]"/>
      <testcase name="testUnmodifiable" classname="org.jgrapht.graph.MaskSubgraphTest" time="0.001" displayname="testUnmodifiable" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskSubgraphTest]/[test:testUnmodifiable(org.jgrapht.graph.MaskSubgraphTest)]"/>
      <testcase name="testInOutEdgesDirected" classname="org.jgrapht.graph.MaskSubgraphTest" time="0.001" displayname="testInOutEdgesDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskSubgraphTest]/[test:testInOutEdgesDirected(org.jgrapht.graph.MaskSubgraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.GreedyColoringTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]">
      <testcase name="testGreedy" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.0" displayname="testGreedy" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testGreedy(org.jgrapht.alg.color.GreedyColoringTest)]"/>
      <testcase name="testDSaturNonOptimal" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.0" displayname="testDSaturNonOptimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testDSaturNonOptimal(org.jgrapht.alg.color.GreedyColoringTest)]"/>
      <testcase name="testRandomFixedSeed17" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.001" displayname="testRandomFixedSeed17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testRandomFixedSeed17(org.jgrapht.alg.color.GreedyColoringTest)]"/>
      <testcase name="testMyciel3" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.0" displayname="testMyciel3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testMyciel3(org.jgrapht.alg.color.GreedyColoringTest)]"/>
      <testcase name="testMyciel4" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.0" displayname="testMyciel4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testMyciel4(org.jgrapht.alg.color.GreedyColoringTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testGraph1(org.jgrapht.alg.color.GreedyColoringTest)]"/>
      <testcase name="testRandom" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.001" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testRandom(org.jgrapht.alg.color.GreedyColoringTest)]"/>
      <testcase name="testCompleteGraph" classname="org.jgrapht.alg.color.GreedyColoringTest" time="0.001" displayname="testCompleteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.GreedyColoringTest]/[test:testCompleteGraph(org.jgrapht.alg.color.GreedyColoringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.GraphsTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]">
      <testcase name="removeVertex_vertexNotFound" classname="org.jgrapht.GraphsTest" time="0.0" displayname="removeVertex_vertexNotFound" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:removeVertex_vertexNotFound(org.jgrapht.GraphsTest)]"/>
      <testcase name="vertexHasParents_A" classname="org.jgrapht.GraphsTest" time="0.001" displayname="vertexHasParents_A" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:vertexHasParents_A(org.jgrapht.GraphsTest)]"/>
      <testcase name="vertexHasParents_B" classname="org.jgrapht.GraphsTest" time="0.0" displayname="vertexHasParents_B" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:vertexHasParents_B(org.jgrapht.GraphsTest)]"/>
      <testcase name="addIncomingEdges" classname="org.jgrapht.GraphsTest" time="0.0" displayname="addIncomingEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:addIncomingEdges(org.jgrapht.GraphsTest)]"/>
      <testcase name="addOutgoingEdges" classname="org.jgrapht.GraphsTest" time="0.0" displayname="addOutgoingEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:addOutgoingEdges(org.jgrapht.GraphsTest)]"/>
      <testcase name="testNeighborSetOf" classname="org.jgrapht.GraphsTest" time="0.001" displayname="testNeighborSetOf" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:testNeighborSetOf(org.jgrapht.GraphsTest)]"/>
      <testcase name="removeVertex00" classname="org.jgrapht.GraphsTest" time="0.0" displayname="removeVertex00" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:removeVertex00(org.jgrapht.GraphsTest)]"/>
      <testcase name="removeVertex01" classname="org.jgrapht.GraphsTest" time="0.0" displayname="removeVertex01" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:removeVertex01(org.jgrapht.GraphsTest)]"/>
      <testcase name="removeVertex02" classname="org.jgrapht.GraphsTest" time="0.001" displayname="removeVertex02" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:removeVertex02(org.jgrapht.GraphsTest)]"/>
      <testcase name="vertexHasChildren_B" classname="org.jgrapht.GraphsTest" time="0.0" displayname="vertexHasChildren_B" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:vertexHasChildren_B(org.jgrapht.GraphsTest)]"/>
      <testcase name="vertexHasChildren_C" classname="org.jgrapht.GraphsTest" time="0.0" displayname="vertexHasChildren_C" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphsTest]/[test:vertexHasChildren_C(org.jgrapht.GraphsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest" time="3.521" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest]">
      <testcase name="testOneVertex" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest" time="0.095" displayname="testOneVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest]/[test:testOneVertex(org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest)]"/>
      <testcase name="testTwoVertices" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest" time="0.001" displayname="testTwoVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest]/[test:testTwoVertices(org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest" time="3.421" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest)]"/>
      <testcase name="testThreeVertices" classname="org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest" time="0.004" displayname="testThreeVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest]/[test:testThreeVertices(org.jgrapht.alg.shortestpath.TransitNodeRoutingShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest]">
      <testcase name="testCubic" classname="org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest" time="0.002" displayname="testCubic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest]/[test:testCubic(org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest)]"/>
      <testcase name="testWheel" classname="org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest" time="0.0" displayname="testWheel" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest]/[test:testWheel(org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest)]"/>
      <testcase name="test4Cycle" classname="org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest" time="0.0" displayname="test4Cycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest]/[test:test4Cycle(org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest)]"/>
      <testcase name="testWhisker" classname="org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest" time="0.0" displayname="testWhisker" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest]/[test:testWhisker(org.jgrapht.alg.vertexcover.RecursiveExactVCImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.ClosestFirstIteratorTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.ClosestFirstIteratorTest]">
      <testcase name="testMultipleStarts" classname="org.jgrapht.traverse.ClosestFirstIteratorTest" time="0.004" displayname="testMultipleStarts" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.ClosestFirstIteratorTest]/[test:testMultipleStarts(org.jgrapht.traverse.ClosestFirstIteratorTest)]"/>
      <testcase name="testRadius" classname="org.jgrapht.traverse.ClosestFirstIteratorTest" time="0.0" displayname="testRadius" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.ClosestFirstIteratorTest]/[test:testRadius(org.jgrapht.traverse.ClosestFirstIteratorTest)]"/>
      <testcase name="testNonCrossComponentTraversal" classname="org.jgrapht.traverse.ClosestFirstIteratorTest" time="0.0" displayname="testNonCrossComponentTraversal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.ClosestFirstIteratorTest]/[test:testNonCrossComponentTraversal(org.jgrapht.traverse.ClosestFirstIteratorTest)]"/>
      <testcase name="testDirectedGraphNullConstructors" classname="org.jgrapht.traverse.ClosestFirstIteratorTest" time="0.0" displayname="testDirectedGraphNullConstructors" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.ClosestFirstIteratorTest]/[test:testDirectedGraphNullConstructors(org.jgrapht.traverse.ClosestFirstIteratorTest)]"/>
      <testcase name="testDirectedGraphViaCCI" classname="org.jgrapht.traverse.ClosestFirstIteratorTest" time="0.0" displayname="testDirectedGraphViaCCI" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.ClosestFirstIteratorTest]/[test:testDirectedGraphViaCCI(org.jgrapht.traverse.ClosestFirstIteratorTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.traverse.ClosestFirstIteratorTest" time="0.001" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.ClosestFirstIteratorTest]/[test:testDirectedGraph(org.jgrapht.traverse.ClosestFirstIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest]">
      <testcase name="testAddTreeEdge" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest" time="0.0" displayname="testAddTreeEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest]/[test:testAddTreeEdge(org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest)]"/>
      <testcase name="testMoveEdge" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest" time="0.001" displayname="testMoveEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest]/[test:testMoveEdge(org.jgrapht.alg.matching.blossom.v5.BlossomVStateTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.GraphMetricsTest" time="6.34" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]">
      <testcase name="testGraphDirectedCyclic2" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testGraphDirectedCyclic2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphDirectedCyclic2(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphGirthAcyclic" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testGraphGirthAcyclic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphGirthAcyclic(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphGirthRingGraphOdd" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testGraphGirthRingGraphOdd" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphGirthRingGraphOdd(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testDirectedGraphs" classname="org.jgrapht.GraphMetricsTest" time="0.03" displayname="testDirectedGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testDirectedGraphs(org.jgrapht.GraphMetricsTest)]">
        <failure>java.lang.AssertionError: expected:&lt;3&gt; but was:&lt;2&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:647)&#13;
	at org.junit.Assert.assertEquals(Assert.java:633)&#13;
	at org.jgrapht.core/org.jgrapht.GraphMetricsTest.testDirectedGraphs(GraphMetricsTest.java:256)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testMultipleEdges2" classname="org.jgrapht.GraphMetricsTest" time="0.002" displayname="testMultipleEdges2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testMultipleEdges2(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testMultiGraphDirected" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testMultiGraphDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testMultiGraphDirected(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testMultiGraphUndirected" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testMultiGraphUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testMultiGraphUndirected(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testCountTriangles" classname="org.jgrapht.GraphMetricsTest" time="4.237" displayname="testCountTriangles" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testCountTriangles(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphGirthRingGraphEven" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testGraphGirthRingGraphEven" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphGirthRingGraphEven(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphGirthGridGraph" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testGraphGirthGridGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphGirthGridGraph(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testPseudoGraphDirected" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testPseudoGraphDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testPseudoGraphDirected(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testCountTriangles2" classname="org.jgrapht.GraphMetricsTest" time="2.013" displayname="testCountTriangles2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testCountTriangles2(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testCountTriangles3" classname="org.jgrapht.GraphMetricsTest" time="0.034" displayname="testCountTriangles3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testCountTriangles3(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testCountTriangles4" classname="org.jgrapht.GraphMetricsTest" time="0.003" displayname="testCountTriangles4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testCountTriangles4(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphDirectedAcyclic" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testGraphDirectedAcyclic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphDirectedAcyclic(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphRadius" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testGraphRadius" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphRadius(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testMultipleEdges" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testMultipleEdges(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphDiameter" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testGraphDiameter" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphDiameter(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphDirected1" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testGraphDirected1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphDirected1(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphDirectedCyclic" classname="org.jgrapht.GraphMetricsTest" time="0.0" displayname="testGraphDirectedCyclic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphDirectedCyclic(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testGraphGirthWheelGraph" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testGraphGirthWheelGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testGraphGirthWheelGraph(org.jgrapht.GraphMetricsTest)]"/>
      <testcase name="testPseudoGraphUndirected" classname="org.jgrapht.GraphMetricsTest" time="0.001" displayname="testPseudoGraphUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.GraphMetricsTest]/[test:testPseudoGraphUndirected(org.jgrapht.GraphMetricsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="1.181" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]">
      <testcase name="testAddEdge" classname="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="0.245" displayname="testAddEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]/[test:testAddEdge(org.jgrapht.graph.concurrent.AsSynchronizedGraphTest)]"/>
      <testcase name="testScenario" classname="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="0.486" displayname="testScenario" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]/[test:testScenario(org.jgrapht.graph.concurrent.AsSynchronizedGraphTest)]"/>
      <testcase name="testCopyless" classname="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="0.043" displayname="testCopyless" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]/[test:testCopyless(org.jgrapht.graph.concurrent.AsSynchronizedGraphTest)]"/>
      <testcase name="testRemoveVertex" classname="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="0.22" displayname="testRemoveVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]/[test:testRemoveVertex(org.jgrapht.graph.concurrent.AsSynchronizedGraphTest)]"/>
      <testcase name="testRemoveEdge" classname="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="0.1" displayname="testRemoveEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]/[test:testRemoveEdge(org.jgrapht.graph.concurrent.AsSynchronizedGraphTest)]"/>
      <testcase name="testAddVertex" classname="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="0.085" displayname="testAddVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]/[test:testAddVertex(org.jgrapht.graph.concurrent.AsSynchronizedGraphTest)]"/>
      <testcase name="testOthers" classname="org.jgrapht.graph.concurrent.AsSynchronizedGraphTest" time="0.001" displayname="testOthers" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.concurrent.AsSynchronizedGraphTest]/[test:testOthers(org.jgrapht.graph.concurrent.AsSynchronizedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]">
      <testcase name="testOneVertex" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.003" displayname="testOneVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testOneVertex(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testLineGraph2" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.0" displayname="testLineGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testLineGraph2(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testNullRoot" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.0" displayname="testNullRoot" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testNullRoot(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testLineGraph" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.0" displayname="testLineGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testLineGraph(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testSmallTree" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.001" displayname="testSmallTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testSmallTree(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testNoHeavyEdges" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.0" displayname="testNoHeavyEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testNoHeavyEdges(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testDisconnectedSmallGraph" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.0" displayname="testDisconnectedSmallGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testDisconnectedSmallGraph(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testRootNotInTree" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.0" displayname="testRootNotInTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testRootNotInTree(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
      <testcase name="testNullGraph" classname="org.jgrapht.alg.decomposition.HeavyPathDecompositionTest" time="0.0" displayname="testNullGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.HeavyPathDecompositionTest]/[test:testNullGraph(org.jgrapht.alg.decomposition.HeavyPathDecompositionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.016" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]">
      <testcase name="test4RegularAddShortcutInsteadOfRewiring" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.013" displayname="test4RegularAddShortcutInsteadOfRewiring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:test4RegularAddShortcutInsteadOfRewiring(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="testNonIntegerVertices" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="testNonIntegerVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:testNonIntegerVertices(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="test6RegularSomeRewiring" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="test6RegularSomeRewiring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:test6RegularSomeRewiring(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="test4RegularNoRewiring" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="test4RegularNoRewiring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:test4RegularNoRewiring(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="test4RegularSomeRewiring" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="test4RegularSomeRewiring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:test4RegularSomeRewiring(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="testLessThan3Nodes" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.001" displayname="testLessThan3Nodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:testLessThan3Nodes(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="test6RegularNoRewiring" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="test6RegularNoRewiring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:test6RegularNoRewiring(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="test4RegularMoreRewiring" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="test4RegularMoreRewiring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:test4RegularMoreRewiring(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
      <testcase name="test4RegularNoRewiringDirected" classname="org.jgrapht.generate.WattsStrogatzGraphGeneratorTest" time="0.0" displayname="test4RegularNoRewiringDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WattsStrogatzGraphGeneratorTest]/[test:test4RegularNoRewiringDirected(org.jgrapht.generate.WattsStrogatzGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest]">
      <testcase name="testWithOrder" classname="org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest" time="0.002" displayname="testWithOrder" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest]/[test:testWithOrder(org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest)]"/>
      <testcase name="testSimple" classname="org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest" time="0.001" displayname="testSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest]/[test:testSimple(org.jgrapht.alg.drawing.CircularLayoutAlgorithm2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.util.NeighborCacheTest" time="0.044" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.NeighborCacheTest]">
      <testcase name="testNeighborSet" classname="org.jgrapht.alg.util.NeighborCacheTest" time="0.001" displayname="testNeighborSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.NeighborCacheTest]/[test:testNeighborSet(org.jgrapht.alg.util.NeighborCacheTest)]"/>
      <testcase name="testDirectedNeighborSet" classname="org.jgrapht.alg.util.NeighborCacheTest" time="0.001" displayname="testDirectedNeighborSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.NeighborCacheTest]/[test:testDirectedNeighborSet(org.jgrapht.alg.util.NeighborCacheTest)]"/>
      <testcase name="testVertexRemoval" classname="org.jgrapht.alg.util.NeighborCacheTest" time="0.008" displayname="testVertexRemoval" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.NeighborCacheTest]/[test:testVertexRemoval(org.jgrapht.alg.util.NeighborCacheTest)]"/>
      <testcase name="testNeighborListCreation" classname="org.jgrapht.alg.util.NeighborCacheTest" time="0.034" displayname="testNeighborListCreation" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.NeighborCacheTest]/[test:testNeighborListCreation(org.jgrapht.alg.util.NeighborCacheTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]">
      <testcase name="testWithInvalidPartition" classname="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.004" displayname="testWithInvalidPartition" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]/[test:testWithInvalidPartition(org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest)]"/>
      <testcase name="test24" classname="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.001" displayname="test24" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]/[test:test24(org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest)]"/>
      <testcase name="testSuboptimal" classname="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.0" displayname="testSuboptimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]/[test:testSuboptimal(org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest)]"/>
      <testcase name="testOptimalPartition" classname="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.0" displayname="testOptimalPartition" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]/[test:testOptimalPartition(org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest)]"/>
      <testcase name="testWithSelfLoops" classname="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.001" displayname="testWithSelfLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]/[test:testWithSelfLoops(org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest)]"/>
      <testcase name="testNegative" classname="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.0" displayname="testNegative" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]/[test:testNegative(org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest)]"/>
      <testcase name="testSingle" classname="org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest" time="0.0" displayname="testSingle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest]/[test:testSingle(org.jgrapht.alg.clustering.UndirectedModularityMeasurerTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]">
      <testcase name="testCubicalGraph" classname="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.0" displayname="testCubicalGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]/[test:testCubicalGraph(org.jgrapht.generate.WindmillGraphsGeneratorTest)]"/>
      <testcase name="testGraph1a" classname="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.002" displayname="testGraph1a" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]/[test:testGraph1a(org.jgrapht.generate.WindmillGraphsGeneratorTest)]"/>
      <testcase name="testGraph2a" classname="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.001" displayname="testGraph2a" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]/[test:testGraph2a(org.jgrapht.generate.WindmillGraphsGeneratorTest)]"/>
      <testcase name="testGraph2b" classname="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.0" displayname="testGraph2b" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]/[test:testGraph2b(org.jgrapht.generate.WindmillGraphsGeneratorTest)]"/>
      <testcase name="testGraph3a" classname="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.0" displayname="testGraph3a" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]/[test:testGraph3a(org.jgrapht.generate.WindmillGraphsGeneratorTest)]"/>
      <testcase name="testGraph3b" classname="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.0" displayname="testGraph3b" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]/[test:testGraph3b(org.jgrapht.generate.WindmillGraphsGeneratorTest)]"/>
      <testcase name="testButterflyGraph" classname="org.jgrapht.generate.WindmillGraphsGeneratorTest" time="0.0" displayname="testButterflyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.WindmillGraphsGeneratorTest]/[test:testButterflyGraph(org.jgrapht.generate.WindmillGraphsGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.089" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]">
      <testcase name="testCornerCases" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.002" displayname="testCornerCases" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testCornerCases(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN1" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.001" displayname="testUndirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN1(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN2" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.0" displayname="testUndirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN2(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN3" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.001" displayname="testUndirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN3(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN4" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.007" displayname="testUndirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN4(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN5" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.001" displayname="testUndirectedN5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN5(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN6" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.002" displayname="testUndirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN6(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN7" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.001" displayname="testUndirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN7(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN8" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.037" displayname="testUndirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN8(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testUndirectedN9" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.0" displayname="testUndirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testUndirectedN9(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN0" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.0" displayname="testDirectedN0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN0(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN1" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.0" displayname="testDirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN1(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN2" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.0" displayname="testDirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN2(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN3" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.001" displayname="testDirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN3(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN4" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.0" displayname="testDirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN4(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN6" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.004" displayname="testDirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN6(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN7" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.007" displayname="testDirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN7(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN8" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.001" displayname="testDirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN8(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN9" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.001" displayname="testDirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN9(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN10" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.006" displayname="testDirectedN10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN10(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN11" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.007" displayname="testDirectedN11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN11(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
      <testcase name="testDirectedN12" classname="org.jgrapht.alg.flow.EdmondsKarpMFImplTest" time="0.004" displayname="testDirectedN12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.EdmondsKarpMFImplTest]/[test:testDirectedN12(org.jgrapht.alg.flow.EdmondsKarpMFImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.DirectedSimpleCyclesTest" time="4.603" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.DirectedSimpleCyclesTest]">
      <testcase name="test" classname="org.jgrapht.alg.cycle.DirectedSimpleCyclesTest" time="4.603" displayname="test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.DirectedSimpleCyclesTest]/[test:test(org.jgrapht.alg.cycle.DirectedSimpleCyclesTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.017" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]">
      <testcase name="testGraph1" classname="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.007" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]/[test:testGraph1(org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest)]"/>
      <testcase name="testGraph2" classname="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.0" displayname="testGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]/[test:testGraph2(org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest)]"/>
      <testcase name="testGraph3" classname="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.001" displayname="testGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]/[test:testGraph3(org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest)]"/>
      <testcase name="testGraph4" classname="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.001" displayname="testGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]/[test:testGraph4(org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest)]"/>
      <testcase name="testGraph5" classname="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.0" displayname="testGraph5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]/[test:testGraph5(org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest)]"/>
      <testcase name="testGraph6" classname="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.003" displayname="testGraph6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]/[test:testGraph6(org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest)]"/>
      <testcase name="testGraph7" classname="org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest" time="0.003" displayname="testGraph7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest]/[test:testGraph7(org.jgrapht.alg.cycle.HowardMinimumMeanCycleTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest" time="0.008" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest]">
      <testcase name="testSubgraph" classname="org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest" time="0.005" displayname="testSubgraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest]/[test:testSubgraph(org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest)]"/>
      <testcase name="testAutomorphism" classname="org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest" time="0.002" displayname="testAutomorphism" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest]/[test:testAutomorphism(org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest)]"/>
      <testcase name="testSubgraph2" classname="org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest" time="0.001" displayname="testSubgraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest]/[test:testSubgraph2(org.jgrapht.alg.isomorphism.VF2GraphIsomorphismInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest" time="8.48" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest]">
      <testcase name="testCompositionOfMappings" classname="org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest" time="0.008" displayname="testCompositionOfMappings" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest]/[test:testCompositionOfMappings(org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest)]"/>
      <testcase name="testIdentity" classname="org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest" time="0.001" displayname="testIdentity" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest]/[test:testIdentity(org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest)]"/>
      <testcase name="testCompositionOfRandomMappings" classname="org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest" time="8.471" displayname="testCompositionOfRandomMappings" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest]/[test:testCompositionOfRandomMappings(org.jgrapht.alg.isomorphism.IsomorphicGraphMappingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.022" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]">
      <testcase name="testExogenousFactor" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.016" displayname="testExogenousFactor" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testExogenousFactor(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testEmptyGraph(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testweightedGraph2" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testweightedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testweightedGraph2(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testGraph2Nodes" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testGraph2Nodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testGraph2Nodes(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testGraph3Nodes" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.001" displayname="testGraph3Nodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testGraph3Nodes(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testUnweightedGraph2" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testUnweightedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testUnweightedGraph2(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testBadParameters1" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testBadParameters1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testBadParameters1(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testBadParameters2" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testBadParameters2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testBadParameters2(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testBadParameters3" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testBadParameters3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testBadParameters3(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.002" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testGraph1(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testGraph2" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testGraph2(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testGraph3" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.001" displayname="testGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testGraph3(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testNonExistantVertex" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testNonExistantVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testNonExistantVertex(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
      <testcase name="testWeightedGraph1" classname="org.jgrapht.alg.scoring.KatzCentralityTest" time="0.0" displayname="testWeightedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.KatzCentralityTest]/[test:testWeightedGraph1(org.jgrapht.alg.scoring.KatzCentralityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest]">
      <testcase name="testFindAll" classname="org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest" time="0.001" displayname="testFindAll" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest]/[test:testFindAll(org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest)]"/>
      <testcase name="testFindBiggest" classname="org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest" time="0.001" displayname="testFindBiggest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest]/[test:testFindBiggest(org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest)]"/>
      <testcase name="testComplete" classname="org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest" time="0.0" displayname="testComplete" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest]/[test:testComplete(org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest)]"/>
      <testcase name="testNonSimple" classname="org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest" time="0.001" displayname="testNonSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest]/[test:testNonSimple(org.jgrapht.alg.clique.PivotBronKerboschCliqueFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.interfaces.AStarAdmissibleHeuristicTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.interfaces.AStarAdmissibleHeuristicTest]">
      <testcase name="org.jgrapht.interfaces.AStarAdmissibleHeuristicTest" classname="org.jgrapht.interfaces.AStarAdmissibleHeuristicTest" time="0.001" displayname="initializationError" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.interfaces.AStarAdmissibleHeuristicTest]/[test:initializationError(org.jgrapht.interfaces.AStarAdmissibleHeuristicTest)]">
        <error>java.lang.reflect.InaccessibleObjectException: Unable to make public void org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.testEmptyGraph() accessible: module org.jgrapht.core does not "exports org.jgrapht.interfaces" to unnamed module @52e677af&#13;
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:354)&#13;
	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297)&#13;
	at java.base/java.lang.reflect.Method.checkCanSetAccessible(Method.java:200)&#13;
	at java.base/java.lang.reflect.Method.setAccessible(Method.java:194)&#13;
	at org.junit.runners.model.FrameworkMethod.&lt;init&gt;(FrameworkMethod.java:35)&#13;
	at org.junit.runners.model.TestClass.scanAnnotatedMembers(TestClass.java:66)&#13;
	at org.junit.runners.model.TestClass.&lt;init&gt;(TestClass.java:57)&#13;
	at org.junit.runners.JUnit4.&lt;init&gt;(JUnit4.java:23)&#13;
	at org.junit.internal.builders.JUnit4Builder.runnerForClass(JUnit4Builder.java:10)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder$DefensiveJUnit4Builder.runnerForClass(DefensiveAllDefaultPossibilitiesBuilder.java:129)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:70)&#13;
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:37)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder.runnerForClass(DefensiveAllDefaultPossibilitiesBuilder.java:57)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:70)&#13;
	at org.junit.runners.model.RunnerBuilder.runners(RunnerBuilder.java:125)&#13;
	at org.junit.runners.model.RunnerBuilder.runners(RunnerBuilder.java:111)&#13;
	at org.junit.runners.Suite.&lt;init&gt;(Suite.java:102)&#13;
	at com.googlecode.junittoolbox.WildcardPatternSuite.&lt;init&gt;(WildcardPatternSuite.java:222)&#13;
	at com.googlecode.junittoolbox.ParallelSuite.&lt;init&gt;(ParallelSuite.java:39)&#13;
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)&#13;
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)&#13;
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:483)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:107)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder$DefensiveAnnotatedBuilder.buildRunner(DefensiveAllDefaultPossibilitiesBuilder.java:114)&#13;
	at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:70)&#13;
	at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:37)&#13;
	at org.junit.vintage.engine.discovery.DefensiveAllDefaultPossibilitiesBuilder.runnerForClass(DefensiveAllDefaultPossibilitiesBuilder.java:57)&#13;
	at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:70)&#13;
	at org.junit.vintage.engine.discovery.ClassSelectorResolver.resolveTestClass(ClassSelectorResolver.java:66)&#13;
	at org.junit.vintage.engine.discovery.ClassSelectorResolver.resolve(ClassSelectorResolver.java:47)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.lambda$resolve$2(EngineDiscoveryRequestResolution.java:134)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.tryAdvance(ArrayList.java:1602)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolve(EngineDiscoveryRequestResolution.java:185)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolve(EngineDiscoveryRequestResolution.java:125)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.resolveCompletely(EngineDiscoveryRequestResolution.java:91)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolution.run(EngineDiscoveryRequestResolution.java:82)&#13;
	at org.junit.platform.engine.support.discovery.EngineDiscoveryRequestResolver.resolve(EngineDiscoveryRequestResolver.java:113)&#13;
	at org.junit.vintage.engine.discovery.VintageDiscoverer.discover(VintageDiscoverer.java:42)&#13;
	at org.junit.vintage.engine.VintageTestEngine.discover(VintageTestEngine.java:64)&#13;
	at org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discoverEngineRoot(EngineDiscoveryOrchestrator.java:152)&#13;
	at org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discoverSafely(EngineDiscoveryOrchestrator.java:134)&#13;
	at org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discover(EngineDiscoveryOrchestrator.java:108)&#13;
	at org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discover(EngineDiscoveryOrchestrator.java:80)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discover(DefaultLauncher.java:110)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.discover(DefaultLauncher.java:78)&#13;
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.discover(DefaultLauncherSession.java:81)&#13;
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.discover(SessionPerRequestLauncher.java:46)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.&lt;init&gt;(JUnit5TestReference.java:46)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.createUnfilteredTest(JUnit5TestLoader.java:76)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.createTest(JUnit5TestLoader.java:66)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestLoader.loadTests(JUnit5TestLoader.java:53)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:513)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="org.jgrapht.graph.ListenableGraphTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.ListenableGraphTest]">
      <testcase name="testGraphListener" classname="org.jgrapht.graph.ListenableGraphTest" time="0.002" displayname="testGraphListener" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.ListenableGraphTest]/[test:testGraphListener(org.jgrapht.graph.ListenableGraphTest)]"/>
      <testcase name="testVertexSetListener" classname="org.jgrapht.graph.ListenableGraphTest" time="0.0" displayname="testVertexSetListener" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.ListenableGraphTest]/[test:testVertexSetListener(org.jgrapht.graph.ListenableGraphTest)]"/>
      <testcase name="testWithVertexSupplier" classname="org.jgrapht.graph.ListenableGraphTest" time="0.001" displayname="testWithVertexSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.ListenableGraphTest]/[test:testWithVertexSupplier(org.jgrapht.graph.ListenableGraphTest)]"/>
      <testcase name="testListenableDirectedWeightedGraph" classname="org.jgrapht.graph.ListenableGraphTest" time="0.0" displayname="testListenableDirectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.ListenableGraphTest]/[test:testListenableDirectedWeightedGraph(org.jgrapht.graph.ListenableGraphTest)]"/>
      <testcase name="testListenableDirectedWeightedGraphWithCustomEdge" classname="org.jgrapht.graph.ListenableGraphTest" time="0.0" displayname="testListenableDirectedWeightedGraphWithCustomEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.ListenableGraphTest]/[test:testListenableDirectedWeightedGraphWithCustomEdge(org.jgrapht.graph.ListenableGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.ApBetweennessCentralityTest" incomplete="true" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ApBetweennessCentralityTest]">
      <testcase name="testNoOverflow" classname="org.jgrapht.alg.scoring.ApBetweennessCentralityTest" incomplete="true" displayname="testNoOverflow" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.ApBetweennessCentralityTest]/[test:testNoOverflow(org.jgrapht.alg.scoring.ApBetweennessCentralityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.014" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]">
      <testcase name="testSaturationDegree" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.007" displayname="testSaturationDegree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testSaturationDegree(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
      <testcase name="testDSaturNonOptimal" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.001" displayname="testDSaturNonOptimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testDSaturNonOptimal(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
      <testcase name="testRandomFixedSeed17" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.002" displayname="testRandomFixedSeed17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testRandomFixedSeed17(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
      <testcase name="testMyciel3" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.0" displayname="testMyciel3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testMyciel3(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
      <testcase name="testMyciel4" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.0" displayname="testMyciel4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testMyciel4(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testGraph1(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
      <testcase name="testRandom" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.002" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testRandom(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
      <testcase name="testCompleteGraph" classname="org.jgrapht.alg.color.SaturationDegreeColoringTest" time="0.001" displayname="testCompleteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.SaturationDegreeColoringTest]/[test:testCompleteGraph(org.jgrapht.alg.color.SaturationDegreeColoringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="35.578" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]">
      <testcase name="testSimpleGraph" classname="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="0.063" displayname="testSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]/[test:testSimpleGraph(org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="0.001" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest)]"/>
      <testcase name="testLabyrinth1" classname="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="0.005" displayname="testLabyrinth1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]/[test:testLabyrinth1(org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest)]"/>
      <testcase name="testLabyrinth2" classname="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="0.001" displayname="testLabyrinth2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]/[test:testLabyrinth2(org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest)]"/>
      <testcase name="testRandomGraphs" classname="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="35.505" displayname="testRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]/[test:testRandomGraphs(org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest)]"/>
      <testcase name="testMultiGraph" classname="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="0.0" displayname="testMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]/[test:testMultiGraph(org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest)]"/>
      <testcase name="testInconsistentHeuristic" classname="org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest" time="0.003" displayname="testInconsistentHeuristic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest]/[test:testInconsistentHeuristic(org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest" time="0.032" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest]">
      <testcase name="testMinimal" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest" time="0.007" displayname="testMinimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest]/[test:testMinimal(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest)]"/>
      <testcase name="testEmpty1" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest" time="0.001" displayname="testEmpty1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest]/[test:testEmpty1(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest)]"/>
      <testcase name="testEmpty2" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest" time="0.0" displayname="testEmpty2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest]/[test:testEmpty2(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest)]"/>
      <testcase name="testMedium" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest" time="0.02" displayname="testMedium" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest]/[test:testMedium(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest)]"/>
      <testcase name="testSmall1" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest" time="0.002" displayname="testSmall1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest]/[test:testSmall1(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest)]"/>
      <testcase name="testSmall2" classname="org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest" time="0.002" displayname="testSmall2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest]/[test:testSmall2(org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeightsPerEdgeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.BFSShortestPathTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BFSShortestPathTest]">
      <testcase name="testAllPaths" classname="org.jgrapht.alg.shortestpath.BFSShortestPathTest" time="0.003" displayname="testAllPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BFSShortestPathTest]/[test:testAllPaths(org.jgrapht.alg.shortestpath.BFSShortestPathTest)]"/>
      <testcase name="testPathBetween" classname="org.jgrapht.alg.shortestpath.BFSShortestPathTest" time="0.002" displayname="testPathBetween" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BFSShortestPathTest]/[test:testPathBetween(org.jgrapht.alg.shortestpath.BFSShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="2.558" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]">
      <testcase name="testInvalidRoot" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.0" displayname="testInvalidRoot" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testInvalidRoot(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testOnlyOneNullGraph" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.001" displayname="testOnlyOneNullGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testOnlyOneNullGraph(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testCornerCase2" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.0" displayname="testCornerCase2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testCornerCase2(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testCornerCase3" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.0" displayname="testCornerCase3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testCornerCase3(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testSingleVertex" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.001" displayname="testSingleVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testSingleVertex(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testSmall" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.0" displayname="testSmall" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testSmall(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testLineGraph" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.31" displayname="testLineGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testLineGraph(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testNonIsomorphic" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.001" displayname="testNonIsomorphic" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testNonIsomorphic(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testDisconnectedTree" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.004" displayname="testDisconnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testDisconnectedTree(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testHugeNumberOfChildren" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="2.237" displayname="testHugeNumberOfChildren" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testHugeNumberOfChildren(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testNullGraphs" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.003" displayname="testNullGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testNullGraphs(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testCornerCase" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.0" displayname="testCornerCase" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testCornerCase(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testSmall2" classname="org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest" time="0.0" displayname="testSmall2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest]/[test:testSmall2(org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.021" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.017" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:testEmptyGraph(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testMultigraphsWithLoops" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.0" displayname="testMultigraphsWithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:testMultigraphsWithLoops(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testZeroCycleSpaceDimension" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.0" displayname="testZeroCycleSpaceDimension" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:testZeroCycleSpaceDimension(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testTwoParallelEdges" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.0" displayname="testTwoParallelEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:testTwoParallelEdges(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
      <testcase name="test1" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.001" displayname="test1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:test1(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testMoreParallelEdges" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.0" displayname="testMoreParallelEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:testMoreParallelEdges(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testMultiGraphWithMultipleComponentsWithLoops" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.0" displayname="testMultiGraphWithMultipleComponentsWithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:testMultiGraphWithMultipleComponentsWithLoops(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
      <testcase name="testSimple" classname="org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest" time="0.001" displayname="testSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest]/[test:testSimple(org.jgrapht.alg.cycle.StackBFSFundamentalCycleBasisTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.partition.BipartitePartitioningTest" time="3.391" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]">
      <testcase name="testOddCycle" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.001" displayname="testOddCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testOddCycle(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testEmptyGraph(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testBipartite10" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.001" displayname="testBipartite10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testBipartite10(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testBipartite20" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.0" displayname="testBipartite20" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testBipartite20(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testBipartite30" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.001" displayname="testBipartite30" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testBipartite30(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testBipartite40" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.0" displayname="testBipartite40" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testBipartite40(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testStarGraph" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.0" displayname="testStarGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testStarGraph(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testComplete" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.005" displayname="testComplete" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testComplete(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testEvenCycle" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.001" displayname="testEvenCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testEvenCycle(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testIsBipartitePartition" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.001" displayname="testIsBipartitePartition" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testIsBipartitePartition(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testRandomBipartite" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.05" displayname="testRandomBipartite" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testRandomBipartite(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testForest" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="0.136" displayname="testForest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testForest(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testBipartite" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="1.419" displayname="testBipartite" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testBipartite(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
      <testcase name="testBipartite2" classname="org.jgrapht.alg.partition.BipartitePartitioningTest" time="1.775" displayname="testBipartite2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.partition.BipartitePartitioningTest]/[test:testBipartite2(org.jgrapht.alg.partition.BipartitePartitioningTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.model.ListenableLayoutModel2DTest" time="0.112" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.ListenableLayoutModel2DTest]">
      <testcase name="testGeneral" classname="org.jgrapht.alg.drawing.model.ListenableLayoutModel2DTest" time="0.112" displayname="testGeneral" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.ListenableLayoutModel2DTest]/[test:testGeneral(org.jgrapht.alg.drawing.model.ListenableLayoutModel2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest" time="0.012" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest]">
      <testcase name="testUndirectedWithIdMap" classname="org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest" time="0.01" displayname="testUndirectedWithIdMap" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest]/[test:testUndirectedWithIdMap(org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest)]"/>
      <testcase name="testNonNegativeWeights" classname="org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest" time="0.001" displayname="testNonNegativeWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest]/[test:testNonNegativeWeights(org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest)]"/>
      <testcase name="testDirectedWithIdMap" classname="org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest" time="0.0" displayname="testDirectedWithIdMap" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest]/[test:testDirectedWithIdMap(org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest)]"/>
      <testcase name="testDirected" classname="org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest" time="0.001" displayname="testDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest]/[test:testDirected(org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest" time="0.0" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest]/[test:testUndirected(org.jgrapht.alg.shortestpath.IntVertexDijkstraShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.015" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]">
      <testcase name="testArcNum_TooManyArcsInMinCostFlowProblem_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testArcNum_TooManyArcsInMinCostFlowProblem_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_TooManyArcsInMinCostFlowProblem_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSupply_SupplyNotSet_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSupply_SupplyNotSet_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSupply_SupplyNotSet_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testPercentWithInfCost_NegativeValue_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testPercentWithInfCost_NegativeValue_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testPercentWithInfCost_NegativeValue_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testTransshipmentSourceNum_TransshipmentSourceNumGreaterThanSourceNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testTransshipmentSourceNum_TransshipmentSourceNumGreaterThanSourceNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testTransshipmentSourceNum_TransshipmentSourceNumGreaterThanSourceNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_MaximumMinimumCapacity_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCapacities_MaximumMinimumCapacity_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_MaximumMinimumCapacity_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testMinCostFlowConfig_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testMinCostFlowConfig_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testMinCostFlowConfig_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_NegativeArcNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testArcNum_NegativeArcNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_NegativeArcNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_TooFewArcsInAssignmentProblem_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_TooFewArcsInAssignmentProblem_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_TooFewArcsInAssignmentProblem_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_ArcNumNotSet_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_ArcNumNotSet_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_ArcNumNotSet_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSupply_MaximumSupply_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSupply_MaximumSupply_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSupply_MaximumSupply_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSinkNum_NegativeSinkNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testSinkNum_NegativeSinkNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSinkNum_NegativeSinkNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSupply_NegativeSupply_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSupply_NegativeSupply_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSupply_NegativeSupply_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_MinimumNumberOfArcsInMinCostFlowProblem_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_MinimumNumberOfArcsInMinCostFlowProblem_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_MinimumNumberOfArcsInMinCostFlowProblem_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_MaximumNumberOfArcsInMinCostFlowProblem_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_MaximumNumberOfArcsInMinCostFlowProblem_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_MaximumNumberOfArcsInMinCostFlowProblem_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_MinimumCapacityGreaterThatMaximumCapacity_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testCapacities_MinimumCapacityGreaterThatMaximumCapacity_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_MinimumCapacityGreaterThatMaximumCapacity_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_MaximumMaximumCapacity_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCapacities_MaximumMaximumCapacity_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_MaximumMaximumCapacity_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_TooHighMaximumCapacity_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCapacities_TooHighMaximumCapacity_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_TooHighMaximumCapacity_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSinkNum_SinkNumGreaterThanNodeNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testSinkNum_SinkNumGreaterThanNodeNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSinkNum_SinkNumGreaterThanNodeNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_MinimumNumberOfArcsInAssignmentProblem_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_MinimumNumberOfArcsInAssignmentProblem_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_MinimumNumberOfArcsInAssignmentProblem_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testPercentCapacitated_NegativeValue_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testPercentCapacitated_NegativeValue_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testPercentCapacitated_NegativeValue_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_NegativeMinimumCapacity_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCapacities_NegativeMinimumCapacity_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_NegativeMinimumCapacity_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_MaximumCapacityNotSet_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCapacities_MaximumCapacityNotSet_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_MaximumCapacityNotSet_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="test" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:test(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testNodeNum_TooHighNodeNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testNodeNum_TooHighNodeNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testNodeNum_TooHighNodeNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSourceNum_SourceNumGreaterThanNodeNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testSourceNum_SourceNumGreaterThanNodeNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSourceNum_SourceNumGreaterThanNodeNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_MaximumNumberOfArcsInAssignmentProblem_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_MaximumNumberOfArcsInAssignmentProblem_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_MaximumNumberOfArcsInAssignmentProblem_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCosts_TooHighMinimumCost_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCosts_TooHighMinimumCost_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCosts_TooHighMinimumCost_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSupply_TooHighSupply_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSupply_TooHighSupply_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSupply_TooHighSupply_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testPercentWithInfCost_TooHighValue_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testPercentWithInfCost_TooHighValue_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testPercentWithInfCost_TooHighValue_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSourceNum_SinkNumNotSet_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSourceNum_SinkNumNotSet_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSourceNum_SinkNumNotSet_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testTransshipmentSinkNum_TransshipmentSinkNumGreaterThanSourceNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testTransshipmentSinkNum_TransshipmentSinkNumGreaterThanSourceNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testTransshipmentSinkNum_TransshipmentSinkNumGreaterThanSourceNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCosts_TooLowMinimumCost_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCosts_TooLowMinimumCost_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCosts_TooLowMinimumCost_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testPercentCapacitated_TooHighValue_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testPercentCapacitated_TooHighValue_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testPercentCapacitated_TooHighValue_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_MinimumCapacityNotSet_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testCapacities_MinimumCapacityNotSet_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_MinimumCapacityNotSet_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCosts_TooHighMaximumCost_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCosts_TooHighMaximumCost_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCosts_TooHighMaximumCost_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_TooManyArcsInAssignmentProblem_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_TooManyArcsInAssignmentProblem_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_TooManyArcsInAssignmentProblem_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSupply_SupplySmallerThanSourceNodeNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSupply_SupplySmallerThanSourceNodeNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSupply_SupplySmallerThanSourceNodeNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_TooFewArcsInMinCostFlowProblem_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testArcNum_TooFewArcsInMinCostFlowProblem_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_TooFewArcsInMinCostFlowProblem_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCosts_TooLowMaximumCost_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCosts_TooLowMaximumCost_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCosts_TooLowMaximumCost_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testNodeNum_NegativeNodeNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testNodeNum_NegativeNodeNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testNodeNum_NegativeNodeNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSourceSinkNum_SourceNumPlusSinkNumGreaterThanTheNodeNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSourceSinkNum_SourceNumPlusSinkNumGreaterThanTheNodeNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSourceSinkNum_SourceNumPlusSinkNumGreaterThanTheNodeNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCosts_MinimumCostGreaterThanMaximumCost_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testCosts_MinimumCostGreaterThanMaximumCost_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCosts_MinimumCostGreaterThanMaximumCost_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testAssignmentConfig_Ok" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testAssignmentConfig_Ok" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testAssignmentConfig_Ok(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_TooHighMinimumCapacity_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCapacities_TooHighMinimumCapacity_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_TooHighMinimumCapacity_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testTransshipmentSinkNum_NegativeTransshipmentSinkNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testTransshipmentSinkNum_NegativeTransshipmentSinkNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testTransshipmentSinkNum_NegativeTransshipmentSinkNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSourceNum_NegativeSourceNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSourceNum_NegativeSourceNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSourceNum_NegativeSourceNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testCapacities_NegativeMaximumCapacity_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testCapacities_NegativeMaximumCapacity_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testCapacities_NegativeMaximumCapacity_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testSourceNum_SourceNumNotSet_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testSourceNum_SourceNumNotSet_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testSourceNum_SourceNumNotSet_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testNodeNum_NodeNumNotSet_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.001" displayname="testNodeNum_NodeNumNotSet_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testNodeNum_NodeNumNotSet_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testArcNum_TooHighArcNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testArcNum_TooHighArcNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testArcNum_TooHighArcNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
      <testcase name="testTransshipmentSourceNum_NegativeTransshipmentSourceNum_IllegalArgumentException" classname="org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest" time="0.0" displayname="testTransshipmentSourceNum_NegativeTransshipmentSourceNum_IllegalArgumentException" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest]/[test:testTransshipmentSourceNum_NegativeTransshipmentSourceNum_IllegalArgumentException(org.jgrapht.generate.netgen.NetworkGeneratorConfigBuilderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="4.923" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]">
      <testcase name="testRandomDirectedGraphs" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="2.417" displayname="testRandomDirectedGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testRandomDirectedGraphs(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testRandomUndirectedGraphs" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="2.437" displayname="testRandomUndirectedGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testRandomUndirectedGraphs(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDisconnected1" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.001" displayname="testDisconnected1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDisconnected1(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDisconnected2" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testDisconnected2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDisconnected2(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testProblematicCase" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testProblematicCase" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testProblematicCase(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN1" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testUndirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN1(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN2" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testUndirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN2(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN3" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.001" displayname="testUndirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN3(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN4" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.002" displayname="testUndirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN4(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN5" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.001" displayname="testUndirectedN5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN5(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN6" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.001" displayname="testUndirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN6(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN7" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testUndirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN7(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN8" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.002" displayname="testUndirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN8(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testUndirectedN9" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.001" displayname="testUndirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testUndirectedN9(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN0" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testDirectedN0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN0(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN1" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testDirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN1(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN2" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testDirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN2(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN3" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.001" displayname="testDirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN3(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN4" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testDirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN4(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN6" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.002" displayname="testDirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN6(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN7" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.003" displayname="testDirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN7(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN8" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.0" displayname="testDirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN8(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN9" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.001" displayname="testDirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN9(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN10" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.036" displayname="testDirectedN10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN10(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN11" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.003" displayname="testDirectedN11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN11(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
      <testcase name="testDirectedN12" classname="org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest" time="0.014" displayname="testDirectedN12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest]/[test:testDirectedN12(org.jgrapht.alg.flow.PushRelabelMinimumSTCutTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.MaskVertexSetTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskVertexSetTest]">
      <testcase name="testSize" classname="org.jgrapht.graph.MaskVertexSetTest" time="0.001" displayname="testSize" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskVertexSetTest]/[test:testSize(org.jgrapht.graph.MaskVertexSetTest)]"/>
      <testcase name="testContains" classname="org.jgrapht.graph.MaskVertexSetTest" time="0.0" displayname="testContains" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskVertexSetTest]/[test:testContains(org.jgrapht.graph.MaskVertexSetTest)]"/>
      <testcase name="testIsEmpty" classname="org.jgrapht.graph.MaskVertexSetTest" time="0.0" displayname="testIsEmpty" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskVertexSetTest]/[test:testIsEmpty(org.jgrapht.graph.MaskVertexSetTest)]"/>
      <testcase name="testIterator" classname="org.jgrapht.graph.MaskVertexSetTest" time="0.001" displayname="testIterator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.MaskVertexSetTest]/[test:testIterator(org.jgrapht.graph.MaskVertexSetTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest]">
      <testcase name="testVertical" classname="org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest" time="0.0" displayname="testVertical" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest]/[test:testVertical(org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest)]"/>
      <testcase name="testHorizontal" classname="org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest" time="0.0" displayname="testHorizontal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest]/[test:testHorizontal(org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest)]"/>
      <testcase name="testWithPartition" classname="org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest" time="0.0" displayname="testWithPartition" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest]/[test:testWithPartition(org.jgrapht.alg.drawing.TwoLayeredBipartiteLayout2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest" time="5.203" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest]">
      <testcase name="testSimpleDisconnectedWeightedGraph" classname="org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest" time="0.001" displayname="testSimpleDisconnectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest]/[test:testSimpleDisconnectedWeightedGraph(org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest)]"/>
      <testcase name="testRandomInstances" classname="org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest" time="5.202" displayname="testRandomInstances" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest]/[test:testRandomInstances(org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest)]"/>
      <testcase name="testSimpleConnectedWeightedGraph" classname="org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest" time="0.0" displayname="testSimpleConnectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest]/[test:testSimpleConnectedWeightedGraph(org.jgrapht.alg.spanning.PrimMinimumSpanningTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.AsUnweightedGraphTest" time="0.091" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]">
      <testcase name="getEdgeWeightOfLoop" classname="org.jgrapht.graph.AsUnweightedGraphTest" time="0.089" displayname="getEdgeWeightOfLoop" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]/[test:getEdgeWeightOfLoop(org.jgrapht.graph.AsUnweightedGraphTest)]"/>
      <testcase name="setEdgeWeight" classname="org.jgrapht.graph.AsUnweightedGraphTest" time="0.001" displayname="setEdgeWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]/[test:setEdgeWeight(org.jgrapht.graph.AsUnweightedGraphTest)]"/>
      <testcase name="failOnCreationOfUnweightedGraph" classname="org.jgrapht.graph.AsUnweightedGraphTest" time="0.0" displayname="failOnCreationOfUnweightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]/[test:failOnCreationOfUnweightedGraph(org.jgrapht.graph.AsUnweightedGraphTest)]"/>
      <testcase name="getType" classname="org.jgrapht.graph.AsUnweightedGraphTest" time="0.0" displayname="getType" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]/[test:getType(org.jgrapht.graph.AsUnweightedGraphTest)]"/>
      <testcase name="getEdgeWeightOfE12" classname="org.jgrapht.graph.AsUnweightedGraphTest" time="0.001" displayname="getEdgeWeightOfE12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]/[test:getEdgeWeightOfE12(org.jgrapht.graph.AsUnweightedGraphTest)]"/>
      <testcase name="getEdgeWeightOfE23" classname="org.jgrapht.graph.AsUnweightedGraphTest" time="0.0" displayname="getEdgeWeightOfE23" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]/[test:getEdgeWeightOfE23(org.jgrapht.graph.AsUnweightedGraphTest)]"/>
      <testcase name="getEdgeWeightOfE24" classname="org.jgrapht.graph.AsUnweightedGraphTest" time="0.0" displayname="getEdgeWeightOfE24" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsUnweightedGraphTest]/[test:getEdgeWeightOfE24(org.jgrapht.graph.AsUnweightedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]">
      <testcase name="testSimpleGraph" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.001" displayname="testSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testSimpleGraph(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testGraphsWithNonIntrusiveEdge" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.001" displayname="testGraphsWithNonIntrusiveEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testGraphsWithNonIntrusiveEdge(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testUndirectedEquality" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.0" displayname="testUndirectedEquality" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testUndirectedEquality(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testDefaultDirectedGraph" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.0" displayname="testDefaultDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testDefaultDirectedGraph(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testAsWeightedGraphs" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.0" displayname="testAsWeightedGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testAsWeightedGraphs(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testPseudograph" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.0" displayname="testPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testPseudograph(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testDirectedEquality" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.0" displayname="testDirectedEquality" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testDirectedEquality(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testGrapshWithCustomEdges" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.102" displayname="testGrapshWithCustomEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testGrapshWithCustomEdges(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
      <testcase name="testHashcodeEquals" classname="org.jgrapht.graph.EqualsAndHashCodeTest" time="0.001" displayname="testHashcodeEquals" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.EqualsAndHashCodeTest]/[test:testHashcodeEquals(org.jgrapht.graph.EqualsAndHashCodeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.441" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]">
      <testcase name="testTED_articleTree1_to_treeWithOneVertex" classname="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.436" displayname="testTED_articleTree1_to_treeWithOneVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]/[test:testTED_articleTree1_to_treeWithOneVertex(org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest)]"/>
      <testcase name="testTED_treeWithOneVertex_to_treeWithOneVertex" classname="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.001" displayname="testTED_treeWithOneVertex_to_treeWithOneVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]/[test:testTED_treeWithOneVertex_to_treeWithOneVertex(org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest)]"/>
      <testcase name="testTED_treeWithOneVertex_to_articleTree2" classname="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.0" displayname="testTED_treeWithOneVertex_to_articleTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]/[test:testTED_treeWithOneVertex_to_articleTree2(org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest)]"/>
      <testcase name="testTED_tree1_to_articleTree2" classname="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.001" displayname="testTED_tree1_to_articleTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]/[test:testTED_tree1_to_articleTree2(org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest)]"/>
      <testcase name="testTED_articleTree1_to_tree1" classname="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.001" displayname="testTED_articleTree1_to_tree1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]/[test:testTED_articleTree1_to_tree1(org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest)]"/>
      <testcase name="testTED_articleTree1_to_articleTree2" classname="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.001" displayname="testTED_articleTree1_to_articleTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]/[test:testTED_articleTree1_to_articleTree2(org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest)]"/>
      <testcase name="testTED_tree2_to_tree3" classname="org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest" time="0.001" displayname="testTED_tree2_to_tree3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest]/[test:testTED_tree2_to_tree3(org.jgrapht.alg.similarity.ZhangShashaTreeEditDistanceTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="2.6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]">
      <testcase name="testNonIsomorphicAsUnrootedButAsRooted" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.001" displayname="testNonIsomorphicAsUnrootedButAsRooted" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testNonIsomorphicAsUnrootedButAsRooted(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testEmptyGraph(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testInvalidRoot" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.001" displayname="testInvalidRoot" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testInvalidRoot(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testOnlyOneNullGraph" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.0" displayname="testOnlyOneNullGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testOnlyOneNullGraph(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testUnrootedIsomorphism" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.011" displayname="testUnrootedIsomorphism" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testUnrootedIsomorphism(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testCornerCase2" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.001" displayname="testCornerCase2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testCornerCase2(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testCornerCase3" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.001" displayname="testCornerCase3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testCornerCase3(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testSingleVertex" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.0" displayname="testSingleVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testSingleVertex(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testRandomTrees" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="2.578" displayname="testRandomTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testRandomTrees(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testSmall" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.001" displayname="testSmall" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testSmall(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testDisconnectedTree" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.002" displayname="testDisconnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testDisconnectedTree(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testNullGraphs" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.0" displayname="testNullGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testNullGraphs(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testCornerCase" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.001" displayname="testCornerCase" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testCornerCase(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
      <testcase name="testSmall2" classname="org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest" time="0.0" displayname="testSmall2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest]/[test:testSmall2(org.jgrapht.alg.isomorphism.AHUUnrootedTreeIsomorphismInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="39.994" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]">
      <testcase name="testSimpleGraph" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="0.077" displayname="testSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]/[test:testSimpleGraph(org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="39.899" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest)]"/>
      <testcase name="testTargetNotPresent" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="0.001" displayname="testTargetNotPresent" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]/[test:testTargetNotPresent(org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest)]"/>
      <testcase name="testRingGraph" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="0.016" displayname="testRingGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]/[test:testRingGraph(org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest)]"/>
      <testcase name="testSourceNotPresent" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="0.001" displayname="testSourceNotPresent" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]/[test:testSourceNotPresent(org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest)]"/>
      <testcase name="testNoPath" classname="org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest" time="0.0" displayname="testNoPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest]/[test:testNoPath(org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest]">
      <testcase name="maximumWeightBipartiteMatching1" classname="org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest" time="0.003" displayname="maximumWeightBipartiteMatching1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest]/[test:maximumWeightBipartiteMatching1(org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest)]"/>
      <testcase name="maximumWeightBipartiteMatching2" classname="org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest" time="0.001" displayname="maximumWeightBipartiteMatching2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest]/[test:maximumWeightBipartiteMatching2(org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest)]">
        <error>java.lang.IllegalArgumentException: Invalid handle!&#13;
	at org.jheaps@0.14/org.jheaps.tree.FibonacciHeap$Node.delete(FibonacciHeap.java:454)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatching.augment(MaximumWeightBipartiteMatching.java:306)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatching.getMatching(MaximumWeightBipartiteMatching.java:150)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest.maximumWeightBipartiteMatching2(MaximumWeightBipartiteMatchingTest.java:88)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="maximumWeightBipartiteMatching3" classname="org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest" time="0.001" displayname="maximumWeightBipartiteMatching3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest]/[test:maximumWeightBipartiteMatching3(org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest)]">
        <error>java.lang.IllegalArgumentException: Invalid handle!&#13;
	at org.jheaps@0.14/org.jheaps.tree.FibonacciHeap$Node.delete(FibonacciHeap.java:454)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatching.augment(MaximumWeightBipartiteMatching.java:306)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatching.getMatching(MaximumWeightBipartiteMatching.java:150)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest.maximumWeightBipartiteMatching3(MaximumWeightBipartiteMatchingTest.java:104)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="maximumWeightBipartiteMatching4" classname="org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest" time="0.0" displayname="maximumWeightBipartiteMatching4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest]/[test:maximumWeightBipartiteMatching4(org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest)]"/>
      <testcase name="maximumWeightBipartiteMatching5" classname="org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest" time="0.001" displayname="maximumWeightBipartiteMatching5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest]/[test:maximumWeightBipartiteMatching5(org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest)]">
        <error>java.lang.IllegalArgumentException: Invalid handle!&#13;
	at org.jheaps@0.14/org.jheaps.tree.FibonacciHeap$Node.delete(FibonacciHeap.java:454)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatching.augment(MaximumWeightBipartiteMatching.java:306)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatching.getMatching(MaximumWeightBipartiteMatching.java:150)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest.maximumWeightBipartiteMatching5(MaximumWeightBipartiteMatchingTest.java:146)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest]">
      <testcase name="createAsWeightedGraphWithWeightPropagationOnAnUnweightedGraph" classname="org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest" time="0.001" displayname="createAsWeightedGraphWithWeightPropagationOnAnUnweightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest]/[test:createAsWeightedGraphWithWeightPropagationOnAnUnweightedGraph(org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testGetDefaultEdgeWeight" classname="org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest" time="0.0" displayname="testGetDefaultEdgeWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest]/[test:testGetDefaultEdgeWeight(org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testGetType" classname="org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest" time="0.0" displayname="testGetType" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest]/[test:testGetType(org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testGetEdgeWeight" classname="org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest" time="0.0" displayname="testGetEdgeWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest]/[test:testGetEdgeWeight(org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testSetEdgeWeight" classname="org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest" time="0.0" displayname="testSetEdgeWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest]/[test:testSetEdgeWeight(org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testGetEdgeWeightOfNull" classname="org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest" time="0.0" displayname="testGetEdgeWeightOfNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest]/[test:testGetEdgeWeightOfNull(org.jgrapht.graph.UnweightedGraphAsWeightedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.DegeneracyOrderingIteratorTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DegeneracyOrderingIteratorTest]">
      <testcase name="testGraphWithListener" classname="org.jgrapht.traverse.DegeneracyOrderingIteratorTest" time="0.004" displayname="testGraphWithListener" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DegeneracyOrderingIteratorTest]/[test:testGraphWithListener(org.jgrapht.traverse.DegeneracyOrderingIteratorTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.traverse.DegeneracyOrderingIteratorTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.DegeneracyOrderingIteratorTest]/[test:testGraph1(org.jgrapht.traverse.DegeneracyOrderingIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.791" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]">
      <testcase name="testIsMaximum1" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.001" displayname="testIsMaximum1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testIsMaximum1(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph10" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.002" displayname="testGraph10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph10(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph11" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph11(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph12" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph12(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph13" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph13(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph14" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.001" displayname="testGraph14" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph14(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph15" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph15" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph15(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testIsMaximumMatching2" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testIsMaximumMatching2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testIsMaximumMatching2(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testIsMaximumMatching3" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testIsMaximumMatching3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testIsMaximumMatching3(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testIsMaximumMatching4" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testIsMaximumMatching4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testIsMaximumMatching4(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testPseudoGraph" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testPseudoGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testPseudoGraph(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testDisconnectedGraph" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testDisconnectedGraph(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.002" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph1(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph2" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.004" displayname="testGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph2(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph3" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.004" displayname="testGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph3(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph4" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.003" displayname="testGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph4(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph5" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.003" displayname="testGraph5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph5(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph6" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.003" displayname="testGraph6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph6(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph7" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.005" displayname="testGraph7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph7(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph8" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.004" displayname="testGraph8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph8(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph9" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.002" displayname="testGraph9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph9(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testRandomGraphsLarge" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.39" displayname="testRandomGraphsLarge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testRandomGraphsLarge(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testRandomGraphsSmall" classname="org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest" time="0.336" displayname="testRandomGraphsSmall" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest]/[test:testRandomGraphsSmall(org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.486" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]">
      <testcase name="testSingletonGraph" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.213" displayname="testSingletonGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testSingletonGraph(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testEmptyGraph(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testEmptyGraphNormalized" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.001" displayname="testEmptyGraphNormalized" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testEmptyGraphNormalized(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testRing" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.015" displayname="testRing" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testRing(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testStar" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.005" displayname="testStar" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testStar(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testAsWeighted1" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.006" displayname="testAsWeighted1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testAsWeighted1(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testNormalization" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.002" displayname="testNormalization" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testNormalization(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testK2GraphNormalized" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testK2GraphNormalized" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testK2GraphNormalized(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testUnweighted1" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testUnweighted1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testUnweighted1(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testUnweighted2" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.001" displayname="testUnweighted2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testUnweighted2(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testUnweighted3" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.001" displayname="testUnweighted3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testUnweighted3(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testUnweighted4" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testUnweighted4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testUnweighted4(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testSingletonGraphNormalized" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testSingletonGraphNormalized" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testSingletonGraphNormalized(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testOverflow" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.233" displayname="testOverflow" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testOverflow(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testLinear" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.004" displayname="testLinear" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testLinear(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testK2Graph" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testK2Graph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testK2Graph(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testNullGraph" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testNullGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testNullGraph(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testWeighted5" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.001" displayname="testWeighted5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testWeighted5(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
      <testcase name="testWeighted6" classname="org.jgrapht.alg.scoring.BetweennessCentralityTest" time="0.0" displayname="testWeighted6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.BetweennessCentralityTest]/[test:testWeighted6(org.jgrapht.alg.scoring.BetweennessCentralityTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.CycleDetectorTest" time="0.019" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CycleDetectorTest]">
      <testcase name="testDirectedWithDoubledCycle" classname="org.jgrapht.alg.cycle.CycleDetectorTest" time="0.005" displayname="testDirectedWithDoubledCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CycleDetectorTest]/[test:testDirectedWithDoubledCycle(org.jgrapht.alg.cycle.CycleDetectorTest)]"/>
      <testcase name="testDirectedWithoutCycle" classname="org.jgrapht.alg.cycle.CycleDetectorTest" time="0.001" displayname="testDirectedWithoutCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CycleDetectorTest]/[test:testDirectedWithoutCycle(org.jgrapht.alg.cycle.CycleDetectorTest)]"/>
      <testcase name="testVertexEquals" classname="org.jgrapht.alg.cycle.CycleDetectorTest" time="0.013" displayname="testVertexEquals" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CycleDetectorTest]/[test:testVertexEquals(org.jgrapht.alg.cycle.CycleDetectorTest)]"/>
      <testcase name="testDirectedWithCycle" classname="org.jgrapht.alg.cycle.CycleDetectorTest" time="0.0" displayname="testDirectedWithCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CycleDetectorTest]/[test:testDirectedWithCycle(org.jgrapht.alg.cycle.CycleDetectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.CorenessTest" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.CorenessTest]">
      <testcase name="testSingletonGraph" classname="org.jgrapht.alg.scoring.CorenessTest" time="0.003" displayname="testSingletonGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.CorenessTest]/[test:testSingletonGraph(org.jgrapht.alg.scoring.CorenessTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.scoring.CorenessTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.CorenessTest]/[test:testEmptyGraph(org.jgrapht.alg.scoring.CorenessTest)]"/>
      <testcase name="testGraph" classname="org.jgrapht.alg.scoring.CorenessTest" time="0.001" displayname="testGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.CorenessTest]/[test:testGraph(org.jgrapht.alg.scoring.CorenessTest)]"/>
      <testcase name="testAnotherGraph" classname="org.jgrapht.alg.scoring.CorenessTest" time="0.0" displayname="testAnotherGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.CorenessTest]/[test:testAnotherGraph(org.jgrapht.alg.scoring.CorenessTest)]"/>
      <testcase name="testNonExistantVertex" classname="org.jgrapht.alg.scoring.CorenessTest" time="0.0" displayname="testNonExistantVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.CorenessTest]/[test:testNonExistantVertex(org.jgrapht.alg.scoring.CorenessTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.alg.scoring.CorenessTest" time="0.001" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.CorenessTest]/[test:testBadParameters(org.jgrapht.alg.scoring.CorenessTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.util.SupplierUtilTest" time="0.059" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]">
      <testcase name="testCreateSupplier" classname="org.jgrapht.util.SupplierUtilTest" time="0.04" displayname="testCreateSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateSupplier(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateStringSupplier" classname="org.jgrapht.util.SupplierUtilTest" time="0.004" displayname="testCreateStringSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateStringSupplier(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testAllPredefinedPublicSupplieres" classname="org.jgrapht.util.SupplierUtilTest" time="0.003" displayname="testAllPredefinedPublicSupplieres" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testAllPredefinedPublicSupplieres(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateSupplier_classWithoutNoArgumentConstructor" classname="org.jgrapht.util.SupplierUtilTest" time="0.001" displayname="testCreateSupplier_classWithoutNoArgumentConstructor" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateSupplier_classWithoutNoArgumentConstructor(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateIntegerSupplier" classname="org.jgrapht.util.SupplierUtilTest" time="0.002" displayname="testCreateIntegerSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateIntegerSupplier(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateStringSupplierInt" classname="org.jgrapht.util.SupplierUtilTest" time="0.001" displayname="testCreateStringSupplierInt" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateStringSupplierInt(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateLongSupplier" classname="org.jgrapht.util.SupplierUtilTest" time="0.002" displayname="testCreateLongSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateLongSupplier(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateRandomUUIDStringSupplier" classname="org.jgrapht.util.SupplierUtilTest" time="0.002" displayname="testCreateRandomUUIDStringSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateRandomUUIDStringSupplier(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateDefaultWeightedEdgeSupplier" classname="org.jgrapht.util.SupplierUtilTest" time="0.001" displayname="testCreateDefaultWeightedEdgeSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateDefaultWeightedEdgeSupplier(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateLongSupplierLong" classname="org.jgrapht.util.SupplierUtilTest" time="0.0" displayname="testCreateLongSupplierLong" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateLongSupplierLong(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateDefaultEdgeSupplier" classname="org.jgrapht.util.SupplierUtilTest" time="0.0" displayname="testCreateDefaultEdgeSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateDefaultEdgeSupplier(org.jgrapht.util.SupplierUtilTest)]"/>
      <testcase name="testCreateIntegerSupplierInt" classname="org.jgrapht.util.SupplierUtilTest" time="0.001" displayname="testCreateIntegerSupplierInt" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.SupplierUtilTest]/[test:testCreateIntegerSupplierInt(org.jgrapht.util.SupplierUtilTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.builder.GraphTypeBuilderTest" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphTypeBuilderTest]">
      <testcase name="testGraphTypeBuilderWithEdgeSupplier" classname="org.jgrapht.graph.builder.GraphTypeBuilderTest" time="0.001" displayname="testGraphTypeBuilderWithEdgeSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphTypeBuilderTest]/[test:testGraphTypeBuilderWithEdgeSupplier(org.jgrapht.graph.builder.GraphTypeBuilderTest)]"/>
      <testcase name="testGraphTypeBuilderWithVertexClass" classname="org.jgrapht.graph.builder.GraphTypeBuilderTest" time="0.0" displayname="testGraphTypeBuilderWithVertexClass" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphTypeBuilderTest]/[test:testGraphTypeBuilderWithVertexClass(org.jgrapht.graph.builder.GraphTypeBuilderTest)]"/>
      <testcase name="testGraphTypeBuilderFromGraph" classname="org.jgrapht.graph.builder.GraphTypeBuilderTest" time="0.0" displayname="testGraphTypeBuilderFromGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphTypeBuilderTest]/[test:testGraphTypeBuilderFromGraph(org.jgrapht.graph.builder.GraphTypeBuilderTest)]"/>
      <testcase name="testGraphTypeBuilder" classname="org.jgrapht.graph.builder.GraphTypeBuilderTest" time="0.0" displayname="testGraphTypeBuilder" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphTypeBuilderTest]/[test:testGraphTypeBuilder(org.jgrapht.graph.builder.GraphTypeBuilderTest)]"/>
      <testcase name="testGraphTypeBuilderUndirected" classname="org.jgrapht.graph.builder.GraphTypeBuilderTest" time="0.0" displayname="testGraphTypeBuilderUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphTypeBuilderTest]/[test:testGraphTypeBuilderUndirected(org.jgrapht.graph.builder.GraphTypeBuilderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.IncomingOutgoingEdgesTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.IncomingOutgoingEdgesTest]">
      <testcase name="org.jgrapht.graph.IncomingOutgoingEdgesTest" classname="org.jgrapht.graph.IncomingOutgoingEdgesTest" time="0.002" displayname="testUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.IncomingOutgoingEdgesTest]/[test:testUndirectedGraph(org.jgrapht.graph.IncomingOutgoingEdgesTest)]"/>
      <testcase name="org.jgrapht.graph.IncomingOutgoingEdgesTest" classname="org.jgrapht.graph.IncomingOutgoingEdgesTest" time="0.002" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.IncomingOutgoingEdgesTest]/[test:testDirectedGraph(org.jgrapht.graph.IncomingOutgoingEdgesTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.DinicMFImplTest" time="0.317" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]">
      <testcase name="simpleTest1" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.008" displayname="simpleTest1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:simpleTest1(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="simpleTest2" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="simpleTest2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:simpleTest2(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="simpleTest3" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.001" displayname="simpleTest3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:simpleTest3(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="exceptionTest1" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="exceptionTest1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:exceptionTest1(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="disconnectedTest" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="disconnectedTest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:disconnectedTest(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN1" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="testUndirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN1(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN2" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.001" displayname="testUndirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN2(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN3" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.003" displayname="testUndirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN3(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN4" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.026" displayname="testUndirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN4(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN5" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.009" displayname="testUndirectedN5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN5(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN6" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.017" displayname="testUndirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN6(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN7" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.001" displayname="testUndirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN7(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN8" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.014" displayname="testUndirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN8(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testUndirectedN9" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.001" displayname="testUndirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testUndirectedN9(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN0" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="testDirectedN0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN0(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN1" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="testDirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN1(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN2" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.002" displayname="testDirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN2(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN3" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="testDirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN3(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN4" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="testDirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN4(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN6" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.009" displayname="testDirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN6(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN7" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.074" displayname="testDirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN7(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN8" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="testDirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN8(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN9" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.0" displayname="testDirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN9(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN10" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.007" displayname="testDirectedN10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN10(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN11" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.037" displayname="testDirectedN11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN11(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
      <testcase name="testDirectedN12" classname="org.jgrapht.alg.flow.DinicMFImplTest" time="0.01" displayname="testDirectedN12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.DinicMFImplTest]/[test:testDirectedN12(org.jgrapht.alg.flow.DinicMFImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.019" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]">
      <testcase name="testOnePSimple" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testOnePSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testOnePSimple(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testZeroQSimple" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testZeroQSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testZeroQSimple(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testCompleteSimpleGraph" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testCompleteSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testCompleteSimpleGraph(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testZeroK" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testZeroK" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testZeroK(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testZeroL" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testZeroL" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testZeroL(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testOneQSimple" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testOneQSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testOneQSimple(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testNegativeK" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testNegativeK" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testNegativeK(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testNegativeL" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testNegativeL" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testNegativeL(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testNegativeP" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testNegativeP" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testNegativeP(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testNegativeQ" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testNegativeQ" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testNegativeQ(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testTooLargeP" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testTooLargeP" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testTooLargeP(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testTooLargeQ" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testTooLargeQ" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testTooLargeQ(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testSelfLoopContradiction" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testSelfLoopContradiction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testSelfLoopContradiction(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testZeroPDefault" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testZeroPDefault" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testZeroPDefault(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testCallGetCommunitiesBeforeGenerateGraph" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testCallGetCommunitiesBeforeGenerateGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testCallGetCommunitiesBeforeGenerateGraph(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testCompleteDefaultDirectedGraph" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.003" displayname="testCompleteDefaultDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testCompleteDefaultDirectedGraph(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testOnePDefault" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testOnePDefault" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testOnePDefault(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testZeroQDefault" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testZeroQDefault" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testZeroQDefault(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testGetCommunities" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testGetCommunities" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testGetCommunities(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testZeroPSimple" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.0" displayname="testZeroPSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testZeroPSimple(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testCallGetCommunitiesMoreThanOnce" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.001" displayname="testCallGetCommunitiesMoreThanOnce" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testCallGetCommunitiesMoreThanOnce(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
      <testcase name="testOneQDefault" classname="org.jgrapht.generate.PlantedPartitionGraphGeneratorTest" time="0.003" displayname="testOneQDefault" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.PlantedPartitionGraphGeneratorTest]/[test:testOneQDefault(org.jgrapht.generate.PlantedPartitionGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest" time="6.743" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest]">
      <testcase name="testSimpleDisconnectedWeightedGraph" classname="org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest" time="0.001" displayname="testSimpleDisconnectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest]/[test:testSimpleDisconnectedWeightedGraph(org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest)]"/>
      <testcase name="testRandomInstances" classname="org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest" time="6.742" displayname="testRandomInstances" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest]/[test:testRandomInstances(org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest)]"/>
      <testcase name="testSimpleConnectedWeightedGraph" classname="org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest" time="0.0" displayname="testSimpleConnectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest]/[test:testSimpleConnectedWeightedGraph(org.jgrapht.alg.spanning.KruskalMinimumSpanningTreeTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.212" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]">
      <testsuite name="[GabowStrongConnectivityInspector]" time="0.088" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]">
        <testcase name="testStronglyConnected1" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.006" displayname="testStronglyConnected1[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected1%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected2" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected2[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected2%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected3" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.0" displayname="testStronglyConnected3[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected3%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected4" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected4[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected4%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected5" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected5[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected5%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected6" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected6[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected6%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected7" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected7[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected7%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected8" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.067" displayname="testStronglyConnected8[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testStronglyConnected8%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testCondensation2" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.002" displayname="testCondensation2[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testCondensation2%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testCondensation" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.007" displayname="testCondensation[GabowStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BGabowStrongConnectivityInspector%5D]/[test:testCondensation%5BGabowStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
      </testsuite>
      <testsuite name="[KosarajuStrongConnectivityInspector]" time="0.123" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]">
        <testcase name="testStronglyConnected1" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected1[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected1%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected2" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected2[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected2%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected3" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.111" displayname="testStronglyConnected3[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected3%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected4" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.003" displayname="testStronglyConnected4[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected4%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected5" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected5[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected5%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected6" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected6[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected6%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected7" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testStronglyConnected7[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected7%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testStronglyConnected8" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.002" displayname="testStronglyConnected8[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testStronglyConnected8%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testCondensation2" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.0" displayname="testCondensation2[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testCondensation2%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
        <testcase name="testCondensation" classname="org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest" time="0.001" displayname="testCondensation[KosarajuStrongConnectivityInspector]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest]/[test:%5BKosarajuStrongConnectivityInspector%5D]/[test:testCondensation%5BKosarajuStrongConnectivityInspector%5D(org.jgrapht.alg.connectivity.StrongConnectivityAlgorithmTest)]"/>
      </testsuite>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.DijkstraClosestFirstIteratorTest" time="0.0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraClosestFirstIteratorTest]">
      <testcase name="testUndirected" classname="org.jgrapht.alg.shortestpath.DijkstraClosestFirstIteratorTest" time="0.0" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DijkstraClosestFirstIteratorTest]/[test:testUndirected(org.jgrapht.alg.shortestpath.DijkstraClosestFirstIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.model.Point2DTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Point2DTest]">
      <testcase name="testConstructorAndGetters" classname="org.jgrapht.alg.drawing.model.Point2DTest" time="0.001" displayname="testConstructorAndGetters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Point2DTest]/[test:testConstructorAndGetters(org.jgrapht.alg.drawing.model.Point2DTest)]"/>
      <testcase name="testDefaultConstructor" classname="org.jgrapht.alg.drawing.model.Point2DTest" time="0.0" displayname="testDefaultConstructor" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.Point2DTest]/[test:testDefaultConstructor(org.jgrapht.alg.drawing.model.Point2DTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clustering.KSpanningTreeClusteringTest" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.KSpanningTreeClusteringTest]">
      <testcase name="test1" classname="org.jgrapht.alg.clustering.KSpanningTreeClusteringTest" time="0.003" displayname="test1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.KSpanningTreeClusteringTest]/[test:test1(org.jgrapht.alg.clustering.KSpanningTreeClusteringTest)]"/>
      <testcase name="test2" classname="org.jgrapht.alg.clustering.KSpanningTreeClusteringTest" time="0.0" displayname="test2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.KSpanningTreeClusteringTest]/[test:test2(org.jgrapht.alg.clustering.KSpanningTreeClusteringTest)]"/>
      <testcase name="testOneCluster" classname="org.jgrapht.alg.clustering.KSpanningTreeClusteringTest" time="0.001" displayname="testOneCluster" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.KSpanningTreeClusteringTest]/[test:testOneCluster(org.jgrapht.alg.clustering.KSpanningTreeClusteringTest)]"/>
      <testcase name="testNClusters" classname="org.jgrapht.alg.clustering.KSpanningTreeClusteringTest" time="0.0" displayname="testNClusters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.KSpanningTreeClusteringTest]/[test:testNClusters(org.jgrapht.alg.clustering.KSpanningTreeClusteringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.IgnoreDirectionTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.IgnoreDirectionTest]">
      <testcase name="testDirectedGraph" classname="org.jgrapht.traverse.IgnoreDirectionTest" time="0.001" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.IgnoreDirectionTest]/[test:testDirectedGraph(org.jgrapht.traverse.IgnoreDirectionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]">
      <testcase name="testSetEdgePropagatesChangesToBackingGraph" classname="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.0" displayname="testSetEdgePropagatesChangesToBackingGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]/[test:testSetEdgePropagatesChangesToBackingGraph(org.jgrapht.graph.WeightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testGetDefaultEdgeWeight" classname="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.0" displayname="testGetDefaultEdgeWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]/[test:testGetDefaultEdgeWeight(org.jgrapht.graph.WeightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testWeightFunction" classname="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.0" displayname="testWeightFunction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]/[test:testWeightFunction(org.jgrapht.graph.WeightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testGetEdgeWeight" classname="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.0" displayname="testGetEdgeWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]/[test:testGetEdgeWeight(org.jgrapht.graph.WeightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testSetEdgeWeight" classname="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.0" displayname="testSetEdgeWeight" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]/[test:testSetEdgeWeight(org.jgrapht.graph.WeightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testGetEdgeWeightOfNull" classname="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.0" displayname="testGetEdgeWeightOfNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]/[test:testGetEdgeWeightOfNull(org.jgrapht.graph.WeightedGraphAsWeightedGraphTest)]"/>
      <testcase name="testSetEdgeWeightDefaultPropagation" classname="org.jgrapht.graph.WeightedGraphAsWeightedGraphTest" time="0.001" displayname="testSetEdgeWeightDefaultPropagation" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.WeightedGraphAsWeightedGraphTest]/[test:testSetEdgeWeightDefaultPropagation(org.jgrapht.graph.WeightedGraphAsWeightedGraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.083" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]">
      <testcase name="testLargestDegreeFirstColoringSimple" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.002" displayname="testLargestDegreeFirstColoringSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testLargestDegreeFirstColoringSimple(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testLargestDegreeFirstColoringNonSimple" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.076" displayname="testLargestDegreeFirstColoringNonSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testLargestDegreeFirstColoringNonSimple(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testMyciel3" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.0" displayname="testMyciel3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testMyciel3(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testLargestDegreeFirstColoring" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.0" displayname="testLargestDegreeFirstColoring" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testLargestDegreeFirstColoring(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testLargestDegreeFirstColoring1" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.001" displayname="testLargestDegreeFirstColoring1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testLargestDegreeFirstColoring1(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testDSaturNonOptimal" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.0" displayname="testDSaturNonOptimal" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testDSaturNonOptimal(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testRandomFixedSeed17" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.001" displayname="testRandomFixedSeed17" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testRandomFixedSeed17(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testMyciel4" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.001" displayname="testMyciel4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testMyciel4(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.0" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testGraph1(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testRandom" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.001" displayname="testRandom" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testRandom(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
      <testcase name="testCompleteGraph" classname="org.jgrapht.alg.color.LargestDegreeFirstColoringTest" time="0.001" displayname="testCompleteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.LargestDegreeFirstColoringTest]/[test:testCompleteGraph(org.jgrapht.alg.color.LargestDegreeFirstColoringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.TransitiveClosureTest" time="0.084" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveClosureTest]">
      <testcase name="testCompleteBipartiteDag" classname="org.jgrapht.alg.TransitiveClosureTest" time="0.081" displayname="testCompleteBipartiteDag" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveClosureTest]/[test:testCompleteBipartiteDag(org.jgrapht.alg.TransitiveClosureTest)]"/>
      <testcase name="testNoVerticesDag" classname="org.jgrapht.alg.TransitiveClosureTest" time="0.0" displayname="testNoVerticesDag" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveClosureTest]/[test:testNoVerticesDag(org.jgrapht.alg.TransitiveClosureTest)]"/>
      <testcase name="testRingGraph" classname="org.jgrapht.alg.TransitiveClosureTest" time="0.001" displayname="testRingGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveClosureTest]/[test:testRingGraph(org.jgrapht.alg.TransitiveClosureTest)]"/>
      <testcase name="testLinearGraphForDag" classname="org.jgrapht.alg.TransitiveClosureTest" time="0.0" displayname="testLinearGraphForDag" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveClosureTest]/[test:testLinearGraphForDag(org.jgrapht.alg.TransitiveClosureTest)]"/>
      <testcase name="testLinearGraph" classname="org.jgrapht.alg.TransitiveClosureTest" time="0.001" displayname="testLinearGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveClosureTest]/[test:testLinearGraph(org.jgrapht.alg.TransitiveClosureTest)]"/>
      <testcase name="testEmptyDag" classname="org.jgrapht.alg.TransitiveClosureTest" time="0.0" displayname="testEmptyDag" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.TransitiveClosureTest]/[test:testEmptyDag(org.jgrapht.alg.TransitiveClosureTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]">
      <testcase name="testSmallForest" classname="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.0" displayname="testSmallForest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]/[test:testSmallForest(org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]/[test:testEmptyGraph(org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest)]"/>
      <testcase name="testInvalidRoot" classname="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.0" displayname="testInvalidRoot" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]/[test:testInvalidRoot(org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest)]"/>
      <testcase name="testSingleVertex" classname="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.0" displayname="testSingleVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]/[test:testSingleVertex(org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest)]"/>
      <testcase name="testMissingSupplier" classname="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.001" displayname="testMissingSupplier" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]/[test:testMissingSupplier(org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest)]"/>
      <testcase name="testNullGraphs" classname="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.0" displayname="testNullGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]/[test:testNullGraphs(org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest)]"/>
      <testcase name="testSmallForest2" classname="org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest" time="0.002" displayname="testSmallForest2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest]/[test:testSmallForest2(org.jgrapht.alg.isomorphism.AHUForestIsomorphismInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.util.VertexToIntegerMappingTest" time="0.419" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.VertexToIntegerMappingTest]">
      <testcase name="testRandomInstances" classname="org.jgrapht.util.VertexToIntegerMappingTest" time="0.418" displayname="testRandomInstances" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.VertexToIntegerMappingTest]/[test:testRandomInstances(org.jgrapht.util.VertexToIntegerMappingTest)]"/>
      <testcase name="testNotUniqueElements" classname="org.jgrapht.util.VertexToIntegerMappingTest" time="0.0" displayname="testNotUniqueElements" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.VertexToIntegerMappingTest]/[test:testNotUniqueElements(org.jgrapht.util.VertexToIntegerMappingTest)]"/>
      <testcase name="testNullSet" classname="org.jgrapht.util.VertexToIntegerMappingTest" time="0.001" displayname="testNullSet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.VertexToIntegerMappingTest]/[test:testNullSet(org.jgrapht.util.VertexToIntegerMappingTest)]"/>
      <testcase name="testEmptySet" classname="org.jgrapht.util.VertexToIntegerMappingTest" time="0.0" displayname="testEmptySet" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.util.VertexToIntegerMappingTest]/[test:testEmptySet(org.jgrapht.util.VertexToIntegerMappingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.09" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]">
      <testcase name="testSimpleDirectedWeightedGraph" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.001" displayname="testSimpleDirectedWeightedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testSimpleDirectedWeightedGraph(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testPushRelabelWithNonIdenticalNode" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testPushRelabelWithNonIdenticalNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testPushRelabelWithNonIdenticalNode(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN1" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.001" displayname="testUndirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN1(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN2" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testUndirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN2(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN3" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testUndirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN3(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN4" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.005" displayname="testUndirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN4(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN5" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.001" displayname="testUndirectedN5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN5(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN6" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.001" displayname="testUndirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN6(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN7" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testUndirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN7(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN8" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.003" displayname="testUndirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN8(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testUndirectedN9" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testUndirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testUndirectedN9(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN0" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.001" displayname="testDirectedN0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN0(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN1" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testDirectedN1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN1(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN2" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testDirectedN2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN2(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN3" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testDirectedN3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN3(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN4" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.001" displayname="testDirectedN4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN4(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN6" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.003" displayname="testDirectedN6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN6(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN7" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.005" displayname="testDirectedN7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN7(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN8" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testDirectedN8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN8(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN9" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.0" displayname="testDirectedN9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN9(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN10" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.005" displayname="testDirectedN10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN10(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN11" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.012" displayname="testDirectedN11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN11(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
      <testcase name="testDirectedN12" classname="org.jgrapht.alg.flow.PushRelabelMFImplTest" time="0.002" displayname="testDirectedN12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.flow.PushRelabelMFImplTest]/[test:testDirectedN12(org.jgrapht.alg.flow.PushRelabelMFImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clique.AllVariantsBronKerboschCliqueFinderTest" time="0.583" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.AllVariantsBronKerboschCliqueFinderTest]">
      <testcase name="testRandomInstances" classname="org.jgrapht.alg.clique.AllVariantsBronKerboschCliqueFinderTest" time="0.583" displayname="testRandomInstances" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.AllVariantsBronKerboschCliqueFinderTest]/[test:testRandomInstances(org.jgrapht.alg.clique.AllVariantsBronKerboschCliqueFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.isomorphism.GraphOrderingTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.GraphOrderingTest]">
      <testcase name="testUndirectedGraph" classname="org.jgrapht.alg.isomorphism.GraphOrderingTest" time="0.001" displayname="testUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.GraphOrderingTest]/[test:testUndirectedGraph(org.jgrapht.alg.isomorphism.GraphOrderingTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.alg.isomorphism.GraphOrderingTest" time="0.0" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.GraphOrderingTest]/[test:testDirectedGraph(org.jgrapht.alg.isomorphism.GraphOrderingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.scoring.PageRankTest" time="0.189" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.183" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testEmptyGraph(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testUndirectedGraphWikipedia" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.0" displayname="testUndirectedGraphWikipedia" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testUndirectedGraphWikipedia(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testGraphWikipedia" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.001" displayname="testGraphWikipedia" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testGraphWikipedia(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testGraph2Nodes" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.0" displayname="testGraph2Nodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testGraph2Nodes(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testGraph3Nodes" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.0" displayname="testGraph3Nodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testGraph3Nodes(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testUnweightedGraph1" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.002" displayname="testUnweightedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testUnweightedGraph1(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testUnweightedGraph2" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.0" displayname="testUnweightedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testUnweightedGraph2(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testNonExistantVertex" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.001" displayname="testNonExistantVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testNonExistantVertex(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.0" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testBadParameters(org.jgrapht.alg.scoring.PageRankTest)]"/>
      <testcase name="testWeightedGraph1" classname="org.jgrapht.alg.scoring.PageRankTest" time="0.0" displayname="testWeightedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.scoring.PageRankTest]/[test:testWeightedGraph1(org.jgrapht.alg.scoring.PageRankTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.047" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]">
      <testcase name="testLengthOnePathsWithPathValidator" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.042" displayname="testLengthOnePathsWithPathValidator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testLengthOnePathsWithPathValidator(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testPathWeights" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.001" displayname="testPathWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testPathWeights(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testLengthOnePaths" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.0" displayname="testLengthOnePaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testLengthOnePaths(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testSmallExampleGraph" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.0" displayname="testSmallExampleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testSmallExampleGraph(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testCycleBehavior" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.001" displayname="testCycleBehavior" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testCycleBehavior(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testMustBoundIfNonSimplePaths" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.001" displayname="testMustBoundIfNonSimplePaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testMustBoundIfNonSimplePaths(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testTrivialPaths" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.0" displayname="testTrivialPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testTrivialPaths(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testSmallExampleGraphWithPathValidator" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.001" displayname="testSmallExampleGraphWithPathValidator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testSmallExampleGraphWithPathValidator(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
      <testcase name="testZeroLengthPaths" classname="org.jgrapht.alg.shortestpath.AllDirectedPathsTest" time="0.0" displayname="testZeroLengthPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.AllDirectedPathsTest]/[test:testZeroLengthPaths(org.jgrapht.alg.shortestpath.AllDirectedPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.CyclesTest" time="0.075" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CyclesTest]">
      <testcase name="testUndirected1" classname="org.jgrapht.alg.cycle.CyclesTest" time="0.074" displayname="testUndirected1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CyclesTest]/[test:testUndirected1(org.jgrapht.alg.cycle.CyclesTest)]"/>
      <testcase name="testUndirected2" classname="org.jgrapht.alg.cycle.CyclesTest" time="0.0" displayname="testUndirected2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CyclesTest]/[test:testUndirected2(org.jgrapht.alg.cycle.CyclesTest)]"/>
      <testcase name="testSelfLoop1" classname="org.jgrapht.alg.cycle.CyclesTest" time="0.001" displayname="testSelfLoop1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CyclesTest]/[test:testSelfLoop1(org.jgrapht.alg.cycle.CyclesTest)]"/>
      <testcase name="testDirected1" classname="org.jgrapht.alg.cycle.CyclesTest" time="0.0" displayname="testDirected1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CyclesTest]/[test:testDirected1(org.jgrapht.alg.cycle.CyclesTest)]"/>
      <testcase name="testUndirectedNotSimple1" classname="org.jgrapht.alg.cycle.CyclesTest" time="0.0" displayname="testUndirectedNotSimple1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.CyclesTest]/[test:testUndirectedNotSimple1(org.jgrapht.alg.cycle.CyclesTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="19.559" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.001" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testEmptyGraph(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testEmptySetOfRoots" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testEmptySetOfRoots" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testEmptySetOfRoots(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testOneNode" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testOneNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testOneNode(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testInvalidNode" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.001" displayname="testInvalidNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testInvalidNode(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testBinaryTree" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testBinaryTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testBinaryTree(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testDisconnectSmallGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testDisconnectSmallGraph(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testSmallTree" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.004" displayname="testSmallTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testSmallTree(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testGraphAllPossibleQueries" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.053" displayname="testGraphAllPossibleQueries" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testGraphAllPossibleQueries(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testDisconnectSmallGraph2" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testDisconnectSmallGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testDisconnectSmallGraph2(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree2" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testTwoRootsInTheSameTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testTwoRootsInTheSameTree2(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="randomHugeConnectedTree" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="1.942" displayname="randomHugeConnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:randomHugeConnectedTree(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testTwoRootsInTheSameTree" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.001" displayname="testTwoRootsInTheSameTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testTwoRootsInTheSameTree(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testSmallDisconnectedTrees" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="10.658" displayname="testSmallDisconnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testSmallDisconnectedTrees(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testSmallTree2" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testSmallTree2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testSmallTree2(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testRootNotInGraph" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.001" displayname="testRootNotInGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testRootNotInGraph(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testNotExploredNode" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testNotExploredNode" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testNotExploredNode(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testLongChain" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.052" displayname="testLongChain" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testLongChain(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="randomHugePossiblyDisconnectedTree" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="2.244" displayname="randomHugePossiblyDisconnectedTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:randomHugePossiblyDisconnectedTree(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testNonBinaryTreeBatch" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="0.0" displayname="testNonBinaryTreeBatch" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testNonBinaryTreeBatch(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
      <testcase name="testSmallConnectedTrees" classname="org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest" time="4.59" displayname="testSmallConnectedTrees" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest]/[test:testSmallConnectedTrees(org.jgrapht.alg.lca.BinaryLiftingLCAFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.965" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]">
      <testcase name="testApproximationFactorOnRandomInstances" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.075" displayname="testApproximationFactorOnRandomInstances" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testApproximationFactorOnRandomInstances(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]">
        <error>java.lang.RuntimeException: Failed to figure out matching, seems to be a bug&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.PathGrowingWeightedMatching.m1Weight(PathGrowingWeightedMatching.java:253)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.PathGrowingWeightedMatching.run(PathGrowingWeightedMatching.java:169)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.PathGrowingWeightedMatching.getMatching(PathGrowingWeightedMatching.java:134)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.BasePathGrowingWeightedMatchingTest.testApproximationFactorOnRandomInstances(BasePathGrowingWeightedMatchingTest.java:136)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testDynamicProgrammingOnPaths" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.0" displayname="testDynamicProgrammingOnPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testDynamicProgrammingOnPaths(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="testPath1" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.001" displayname="testPath1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testPath1(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]">
        <failure>java.lang.AssertionError: expected:&lt;3&gt; but was:&lt;4&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:647)&#13;
	at org.junit.Assert.assertEquals(Assert.java:633)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.ApproximateWeightedMatchingTest.testPath1(ApproximateWeightedMatchingTest.java:59)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testPath2" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.0" displayname="testPath2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testPath2(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]">
        <failure>java.lang.AssertionError: expected:&lt;2&gt; but was:&lt;4&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:647)&#13;
	at org.junit.Assert.assertEquals(Assert.java:633)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.ApproximateWeightedMatchingTest.testPath2(ApproximateWeightedMatchingTest.java:83)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testNegativeAndZeroEdges1" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.001" displayname="testNegativeAndZeroEdges1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testNegativeAndZeroEdges1(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="testNegativeAndZeroEdges2" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.0" displayname="testNegativeAndZeroEdges2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testNegativeAndZeroEdges2(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="testSelfLoops" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.0" displayname="testSelfLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testSelfLoops(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="test3over4Approximation" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.001" displayname="test3over4Approximation" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:test3over4Approximation(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="testBnGraph" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.884" displayname="testBnGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testBnGraph(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="testNegativeAndZeroEdges" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.001" displayname="testNegativeAndZeroEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testNegativeAndZeroEdges(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="testDisconnectedAndIsolatedVertices" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.0" displayname="testDisconnectedAndIsolatedVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testDisconnectedAndIsolatedVertices(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]"/>
      <testcase name="testMultiGraph" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.001" displayname="testMultiGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testMultiGraph(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]">
        <failure>java.lang.AssertionError: expected:&lt;4&gt; but was:&lt;6&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:647)&#13;
	at org.junit.Assert.assertEquals(Assert.java:633)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.ApproximateWeightedMatchingTest.testMultiGraph(ApproximateWeightedMatchingTest.java:281)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testDirected" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.0" displayname="testDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testDirected(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]">
        <failure>java.lang.AssertionError: expected:&lt;4&gt; but was:&lt;6&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:647)&#13;
	at org.junit.Assert.assertEquals(Assert.java:633)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.ApproximateWeightedMatchingTest.testDirected(ApproximateWeightedMatchingTest.java:316)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testGraph1" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.001" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testGraph1(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]">
        <failure>java.lang.AssertionError: expected:&lt;7&gt; but was:&lt;9&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:647)&#13;
	at org.junit.Assert.assertEquals(Assert.java:633)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.ApproximateWeightedMatchingTest.testGraph1(ApproximateWeightedMatchingTest.java:188)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testSelfLoop" classname="org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest" time="0.0" displayname="testSelfLoop" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest]/[test:testSelfLoop(org.jgrapht.alg.matching.PathGrowingWeightedMatchingTest)]">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:87)&#13;
	at org.junit.Assert.assertTrue(Assert.java:42)&#13;
	at org.junit.Assert.assertTrue(Assert.java:53)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.ApproximateWeightedMatchingTest.testSelfLoop(ApproximateWeightedMatchingTest.java:362)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="org.jgrapht.graph.builder.GraphBuilderTest" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphBuilderTest]">
      <testcase name="testAddEdge" classname="org.jgrapht.graph.builder.GraphBuilderTest" time="0.001" displayname="testAddEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphBuilderTest]/[test:testAddEdge(org.jgrapht.graph.builder.GraphBuilderTest)]"/>
      <testcase name="testAddGraph" classname="org.jgrapht.graph.builder.GraphBuilderTest" time="0.0" displayname="testAddGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphBuilderTest]/[test:testAddGraph(org.jgrapht.graph.builder.GraphBuilderTest)]"/>
      <testcase name="testRemoveVertex" classname="org.jgrapht.graph.builder.GraphBuilderTest" time="0.0" displayname="testRemoveVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphBuilderTest]/[test:testRemoveVertex(org.jgrapht.graph.builder.GraphBuilderTest)]"/>
      <testcase name="testRemoveEdge" classname="org.jgrapht.graph.builder.GraphBuilderTest" time="0.001" displayname="testRemoveEdge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphBuilderTest]/[test:testRemoveEdge(org.jgrapht.graph.builder.GraphBuilderTest)]"/>
      <testcase name="testAddVertex" classname="org.jgrapht.graph.builder.GraphBuilderTest" time="0.0" displayname="testAddVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphBuilderTest]/[test:testAddVertex(org.jgrapht.graph.builder.GraphBuilderTest)]"/>
      <testcase name="testAddVertexPseudograph" classname="org.jgrapht.graph.builder.GraphBuilderTest" time="0.0" displayname="testAddVertexPseudograph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.builder.GraphBuilderTest]/[test:testAddVertexPseudograph(org.jgrapht.graph.builder.GraphBuilderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.HubDepressedIndexLinkPredictionTest" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.HubDepressedIndexLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.HubDepressedIndexLinkPredictionTest" time="0.002" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.HubDepressedIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.HubDepressedIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.graph.AsSubgraphTest" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]">
      <testcase name="testInducedSubgraphListener" classname="org.jgrapht.graph.AsSubgraphTest" time="0.002" displayname="testInducedSubgraphListener" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testInducedSubgraphListener(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testNonValidVerticesFilter" classname="org.jgrapht.graph.AsSubgraphTest" time="0.001" displayname="testNonValidVerticesFilter" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testNonValidVerticesFilter(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testSubgraph" classname="org.jgrapht.graph.AsSubgraphTest" time="0.001" displayname="testSubgraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testSubgraph(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testEdges" classname="org.jgrapht.graph.AsSubgraphTest" time="0.0" displayname="testEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testEdges(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testSubgraphListener" classname="org.jgrapht.graph.AsSubgraphTest" time="0.0" displayname="testSubgraphListener" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testSubgraphListener(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testInducedSubgraphUnderlyingEdgeAddition" classname="org.jgrapht.graph.AsSubgraphTest" time="0.0" displayname="testInducedSubgraphUnderlyingEdgeAddition" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testInducedSubgraphUnderlyingEdgeAddition(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testInOutEdgesUndirected" classname="org.jgrapht.graph.AsSubgraphTest" time="0.0" displayname="testInOutEdgesUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testInOutEdgesUndirected(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testInOutEdgesDirected" classname="org.jgrapht.graph.AsSubgraphTest" time="0.0" displayname="testInOutEdgesDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testInOutEdgesDirected(org.jgrapht.graph.AsSubgraphTest)]"/>
      <testcase name="testNonValidEdgesFilter" classname="org.jgrapht.graph.AsSubgraphTest" time="0.0" displayname="testNonValidEdgesFilter" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.graph.AsSubgraphTest]/[test:testNonValidEdgesFilter(org.jgrapht.graph.AsSubgraphTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.042" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]">
      <testcase name="testForbidAll" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.002" displayname="testForbidAll" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testForbidAll(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testNoPathInGraph" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testNoPathInGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testNoPathInGraph(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testNoSourceGraph" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testNoSourceGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testNoSourceGraph(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testPseudoGraph1" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testPseudoGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testPseudoGraph1(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testPseudoGraph2" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.002" displayname="testPseudoGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testPseudoGraph2(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testPseudoGraph3" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testPseudoGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testPseudoGraph3(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testSimpleGraph1" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testSimpleGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testSimpleGraph1(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testSimpleGraph2" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testSimpleGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testSimpleGraph2(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testSimpleGraph3" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testSimpleGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testSimpleGraph3(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testSimpleGraph4" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testSimpleGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testSimpleGraph4(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testNoSinkGraph" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testNoSinkGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testNoSinkGraph(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testOnlyShortestPathGraph" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testOnlyShortestPathGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testOnlyShortestPathGraph(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testCyclicGraph1" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testCyclicGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testCyclicGraph1(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testCyclicGraph2" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testCyclicGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testCyclicGraph2(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testCyclicGraph3" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testCyclicGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testCyclicGraph3(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testSourceEqualsTarget" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.0" displayname="testSourceEqualsTarget" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testSourceEqualsTarget(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testNonTrivialPathValidator" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testNonTrivialPathValidator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testNonTrivialPathValidator(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testNotShortestPathEdgesGraph" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testNotShortestPathEdgesGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testNotShortestPathEdgesGraph(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
      <testcase name="testNoPathLeft" classname="org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest" time="0.001" displayname="testNoPathLeft" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest]/[test:testNoPathLeft(org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="1.309" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]">
      <testcase name="testZeroCycleSpaceDimension" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.002" displayname="testZeroCycleSpaceDimension" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testZeroCycleSpaceDimension(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testDisconnectedAndWeights" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.001" displayname="testDisconnectedAndWeights" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testDisconnectedAndWeights(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testAlgorithm" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.001" displayname="testAlgorithm" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testAlgorithm(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testMultipleEdges" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testMultipleEdges(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testWithLoops" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testWithLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testWithLoops(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testPatonCycleBasis" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testSingleLoops" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testSingleLoops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testSingleLoops(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis1" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.001" displayname="testPatonCycleBasis1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis1(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis2" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.001" displayname="testPatonCycleBasis2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis2(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis3" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testPatonCycleBasis3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis3(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis4" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testPatonCycleBasis4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis4(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis5" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testPatonCycleBasis5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis5(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis6" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.0" displayname="testPatonCycleBasis6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis6(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis7" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="0.001" displayname="testPatonCycleBasis7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis7(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
      <testcase name="testPatonCycleBasis8" classname="org.jgrapht.alg.cycle.PatonCycleBaseTest" time="1.3" displayname="testPatonCycleBasis8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.PatonCycleBaseTest]/[test:testPatonCycleBasis8(org.jgrapht.alg.cycle.PatonCycleBaseTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="6.254" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]">
      <testsuite name="[0]" time="0.042" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B0%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.042" displayname="testGeneratedGraph[0]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B0%5D]/[test:testGeneratedGraph%5B0%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[1]" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B1%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.001" displayname="testGeneratedGraph[1]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B1%5D]/[test:testGeneratedGraph%5B1%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[2]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B2%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[2]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B2%5D]/[test:testGeneratedGraph%5B2%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[3]" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B3%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.001" displayname="testGeneratedGraph[3]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B3%5D]/[test:testGeneratedGraph%5B3%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[4]" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B4%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.003" displayname="testGeneratedGraph[4]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B4%5D]/[test:testGeneratedGraph%5B4%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[5]" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B5%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.001" displayname="testGeneratedGraph[5]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B5%5D]/[test:testGeneratedGraph%5B5%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[6]" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B6%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.001" displayname="testGeneratedGraph[6]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B6%5D]/[test:testGeneratedGraph%5B6%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[7]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B7%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[7]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B7%5D]/[test:testGeneratedGraph%5B7%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[8]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B8%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[8]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B8%5D]/[test:testGeneratedGraph%5B8%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[9]" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B9%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.003" displayname="testGeneratedGraph[9]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B9%5D]/[test:testGeneratedGraph%5B9%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[10]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B10%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[10]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B10%5D]/[test:testGeneratedGraph%5B10%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[11]" time="0.019" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B11%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.019" displayname="testGeneratedGraph[11]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B11%5D]/[test:testGeneratedGraph%5B11%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[12]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B12%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[12]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B12%5D]/[test:testGeneratedGraph%5B12%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[13]" time="0.017" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B13%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.017" displayname="testGeneratedGraph[13]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B13%5D]/[test:testGeneratedGraph%5B13%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[14]" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B14%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.006" displayname="testGeneratedGraph[14]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B14%5D]/[test:testGeneratedGraph%5B14%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[15]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B15%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[15]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B15%5D]/[test:testGeneratedGraph%5B15%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[16]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B16%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[16]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B16%5D]/[test:testGeneratedGraph%5B16%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[17]" time="0.008" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B17%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.008" displayname="testGeneratedGraph[17]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B17%5D]/[test:testGeneratedGraph%5B17%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[18]" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B18%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.005" displayname="testGeneratedGraph[18]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B18%5D]/[test:testGeneratedGraph%5B18%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[19]" time="0.025" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B19%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.025" displayname="testGeneratedGraph[19]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B19%5D]/[test:testGeneratedGraph%5B19%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[20]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B20%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[20]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B20%5D]/[test:testGeneratedGraph%5B20%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[21]" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B21%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.006" displayname="testGeneratedGraph[21]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B21%5D]/[test:testGeneratedGraph%5B21%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[22]" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B22%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.001" displayname="testGeneratedGraph[22]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B22%5D]/[test:testGeneratedGraph%5B22%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[23]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B23%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[23]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B23%5D]/[test:testGeneratedGraph%5B23%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[24]" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B24%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.005" displayname="testGeneratedGraph[24]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B24%5D]/[test:testGeneratedGraph%5B24%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[25]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B25%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[25]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B25%5D]/[test:testGeneratedGraph%5B25%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[26]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B26%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[26]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B26%5D]/[test:testGeneratedGraph%5B26%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[27]" time="0.024" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B27%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.024" displayname="testGeneratedGraph[27]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B27%5D]/[test:testGeneratedGraph%5B27%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[28]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B28%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[28]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B28%5D]/[test:testGeneratedGraph%5B28%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[29]" time="0.012" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B29%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.012" displayname="testGeneratedGraph[29]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B29%5D]/[test:testGeneratedGraph%5B29%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[30]" time="0.012" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B30%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.012" displayname="testGeneratedGraph[30]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B30%5D]/[test:testGeneratedGraph%5B30%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[31]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B31%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[31]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B31%5D]/[test:testGeneratedGraph%5B31%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[32]" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B32%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.003" displayname="testGeneratedGraph[32]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B32%5D]/[test:testGeneratedGraph%5B32%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[33]" time="0.052" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B33%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.052" displayname="testGeneratedGraph[33]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B33%5D]/[test:testGeneratedGraph%5B33%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[34]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B34%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[34]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B34%5D]/[test:testGeneratedGraph%5B34%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[35]" time="0.007" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B35%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.007" displayname="testGeneratedGraph[35]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B35%5D]/[test:testGeneratedGraph%5B35%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[36]" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B36%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.005" displayname="testGeneratedGraph[36]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B36%5D]/[test:testGeneratedGraph%5B36%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[37]" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B37%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.001" displayname="testGeneratedGraph[37]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B37%5D]/[test:testGeneratedGraph%5B37%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[38]" time="0.104" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B38%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.104" displayname="testGeneratedGraph[38]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B38%5D]/[test:testGeneratedGraph%5B38%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[39]" time="0.005" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B39%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.005" displayname="testGeneratedGraph[39]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B39%5D]/[test:testGeneratedGraph%5B39%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[40]" time="0.06" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B40%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.06" displayname="testGeneratedGraph[40]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B40%5D]/[test:testGeneratedGraph%5B40%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[41]" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B41%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.003" displayname="testGeneratedGraph[41]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B41%5D]/[test:testGeneratedGraph%5B41%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[42]" time="0.014" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B42%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.014" displayname="testGeneratedGraph[42]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B42%5D]/[test:testGeneratedGraph%5B42%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[43]" time="0.019" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B43%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.019" displayname="testGeneratedGraph[43]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B43%5D]/[test:testGeneratedGraph%5B43%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[44]" time="0.019" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B44%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.019" displayname="testGeneratedGraph[44]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B44%5D]/[test:testGeneratedGraph%5B44%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[45]" time="0.007" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B45%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.007" displayname="testGeneratedGraph[45]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B45%5D]/[test:testGeneratedGraph%5B45%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[46]" time="0.045" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B46%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.045" displayname="testGeneratedGraph[46]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B46%5D]/[test:testGeneratedGraph%5B46%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[47]" time="0.016" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B47%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.016" displayname="testGeneratedGraph[47]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B47%5D]/[test:testGeneratedGraph%5B47%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[48]" time="0.02" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B48%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.02" displayname="testGeneratedGraph[48]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B48%5D]/[test:testGeneratedGraph%5B48%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[49]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B49%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[49]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B49%5D]/[test:testGeneratedGraph%5B49%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[50]" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B50%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.003" displayname="testGeneratedGraph[50]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B50%5D]/[test:testGeneratedGraph%5B50%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[51]" time="0.006" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B51%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.006" displayname="testGeneratedGraph[51]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B51%5D]/[test:testGeneratedGraph%5B51%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[52]" time="0.061" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B52%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.061" displayname="testGeneratedGraph[52]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B52%5D]/[test:testGeneratedGraph%5B52%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[53]" time="0.056" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B53%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.056" displayname="testGeneratedGraph[53]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B53%5D]/[test:testGeneratedGraph%5B53%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[54]" time="0.049" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B54%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.049" displayname="testGeneratedGraph[54]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B54%5D]/[test:testGeneratedGraph%5B54%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[55]" time="0.028" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B55%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.028" displayname="testGeneratedGraph[55]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B55%5D]/[test:testGeneratedGraph%5B55%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[56]" time="0.09" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B56%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.09" displayname="testGeneratedGraph[56]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B56%5D]/[test:testGeneratedGraph%5B56%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[57]" time="0.108" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B57%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.108" displayname="testGeneratedGraph[57]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B57%5D]/[test:testGeneratedGraph%5B57%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[58]" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B58%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.002" displayname="testGeneratedGraph[58]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B58%5D]/[test:testGeneratedGraph%5B58%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[59]" time="0.105" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B59%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.105" displayname="testGeneratedGraph[59]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B59%5D]/[test:testGeneratedGraph%5B59%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[60]" time="0.013" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B60%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.013" displayname="testGeneratedGraph[60]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B60%5D]/[test:testGeneratedGraph%5B60%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[61]" time="0.049" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B61%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.049" displayname="testGeneratedGraph[61]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B61%5D]/[test:testGeneratedGraph%5B61%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[62]" time="0.031" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B62%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.031" displayname="testGeneratedGraph[62]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B62%5D]/[test:testGeneratedGraph%5B62%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[63]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B63%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[63]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B63%5D]/[test:testGeneratedGraph%5B63%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[64]" time="0.06" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B64%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.06" displayname="testGeneratedGraph[64]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B64%5D]/[test:testGeneratedGraph%5B64%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[65]" time="0.116" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B65%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.116" displayname="testGeneratedGraph[65]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B65%5D]/[test:testGeneratedGraph%5B65%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[66]" time="0.053" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B66%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.053" displayname="testGeneratedGraph[66]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B66%5D]/[test:testGeneratedGraph%5B66%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[67]" time="0.057" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B67%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.057" displayname="testGeneratedGraph[67]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B67%5D]/[test:testGeneratedGraph%5B67%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[68]" time="0.098" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B68%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.098" displayname="testGeneratedGraph[68]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B68%5D]/[test:testGeneratedGraph%5B68%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[69]" time="0.051" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B69%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.051" displayname="testGeneratedGraph[69]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B69%5D]/[test:testGeneratedGraph%5B69%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[70]" time="0.07" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B70%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.07" displayname="testGeneratedGraph[70]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B70%5D]/[test:testGeneratedGraph%5B70%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[71]" time="0.073" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B71%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.073" displayname="testGeneratedGraph[71]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B71%5D]/[test:testGeneratedGraph%5B71%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[72]" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B72%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.003" displayname="testGeneratedGraph[72]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B72%5D]/[test:testGeneratedGraph%5B72%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[73]" time="0.217" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B73%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.217" displayname="testGeneratedGraph[73]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B73%5D]/[test:testGeneratedGraph%5B73%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[74]" time="0.103" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B74%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.103" displayname="testGeneratedGraph[74]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B74%5D]/[test:testGeneratedGraph%5B74%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[75]" time="0.063" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B75%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.063" displayname="testGeneratedGraph[75]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B75%5D]/[test:testGeneratedGraph%5B75%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[76]" time="0.059" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B76%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.059" displayname="testGeneratedGraph[76]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B76%5D]/[test:testGeneratedGraph%5B76%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[77]" time="0.236" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B77%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.236" displayname="testGeneratedGraph[77]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B77%5D]/[test:testGeneratedGraph%5B77%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[78]" time="0.155" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B78%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.155" displayname="testGeneratedGraph[78]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B78%5D]/[test:testGeneratedGraph%5B78%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[79]" time="0.057" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B79%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.057" displayname="testGeneratedGraph[79]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B79%5D]/[test:testGeneratedGraph%5B79%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[80]" time="0.017" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B80%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.017" displayname="testGeneratedGraph[80]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B80%5D]/[test:testGeneratedGraph%5B80%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[81]" time="0.216" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B81%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.216" displayname="testGeneratedGraph[81]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B81%5D]/[test:testGeneratedGraph%5B81%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[82]" time="0.092" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B82%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.092" displayname="testGeneratedGraph[82]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B82%5D]/[test:testGeneratedGraph%5B82%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[83]" time="0.221" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B83%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.221" displayname="testGeneratedGraph[83]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B83%5D]/[test:testGeneratedGraph%5B83%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[84]" time="0.13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B84%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.13" displayname="testGeneratedGraph[84]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B84%5D]/[test:testGeneratedGraph%5B84%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[85]" time="0.133" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B85%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.133" displayname="testGeneratedGraph[85]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B85%5D]/[test:testGeneratedGraph%5B85%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[86]" time="0.01" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B86%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.01" displayname="testGeneratedGraph[86]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B86%5D]/[test:testGeneratedGraph%5B86%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[87]" time="0.305" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B87%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.305" displayname="testGeneratedGraph[87]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B87%5D]/[test:testGeneratedGraph%5B87%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[88]" time="0.082" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B88%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.082" displayname="testGeneratedGraph[88]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B88%5D]/[test:testGeneratedGraph%5B88%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[89]" time="0.13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B89%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.13" displayname="testGeneratedGraph[89]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B89%5D]/[test:testGeneratedGraph%5B89%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[90]" time="0.19" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B90%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.19" displayname="testGeneratedGraph[90]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B90%5D]/[test:testGeneratedGraph%5B90%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[91]" time="0.241" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B91%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.241" displayname="testGeneratedGraph[91]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B91%5D]/[test:testGeneratedGraph%5B91%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[92]" time="0.336" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B92%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.336" displayname="testGeneratedGraph[92]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B92%5D]/[test:testGeneratedGraph%5B92%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[93]" time="0.301" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B93%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.301" displayname="testGeneratedGraph[93]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B93%5D]/[test:testGeneratedGraph%5B93%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[94]" time="0.076" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B94%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.076" displayname="testGeneratedGraph[94]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B94%5D]/[test:testGeneratedGraph%5B94%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[95]" time="0.004" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B95%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.004" displayname="testGeneratedGraph[95]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B95%5D]/[test:testGeneratedGraph%5B95%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[96]" time="0.273" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B96%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.273" displayname="testGeneratedGraph[96]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B96%5D]/[test:testGeneratedGraph%5B96%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[97]" time="0.025" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B97%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.025" displayname="testGeneratedGraph[97]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B97%5D]/[test:testGeneratedGraph%5B97%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[98]" time="0.321" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B98%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.321" displayname="testGeneratedGraph[98]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B98%5D]/[test:testGeneratedGraph%5B98%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
      <testsuite name="[99]" time="0.414" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B99%5D]">
        <testcase name="testGeneratedGraph" classname="org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest" time="0.414" displayname="testGeneratedGraph[99]" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest]/[test:%5B99%5D]/[test:testGeneratedGraph%5B99%5D(org.jgrapht.alg.decomposition.DulmageMendelsohnDecompositionTest)]"/>
      </testsuite>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.TreeSingleSourcePathsTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TreeSingleSourcePathsTest]">
      <testcase name="test" classname="org.jgrapht.alg.shortestpath.TreeSingleSourcePathsTest" time="0.001" displayname="test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.TreeSingleSourcePathsTest]/[test:test(org.jgrapht.alg.shortestpath.TreeSingleSourcePathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest" time="0.034" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest" time="0.034" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest)]"/>
      <testcase name="testInvalidPrediction" classname="org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest" time="0.0" displayname="testInvalidPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest]/[test:testInvalidPrediction(org.jgrapht.alg.linkprediction.JaccardCoefficientLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.model.PointsTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.PointsTest]">
      <testcase name="testAdd" classname="org.jgrapht.alg.drawing.model.PointsTest" time="0.0" displayname="testAdd" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.PointsTest]/[test:testAdd(org.jgrapht.alg.drawing.model.PointsTest)]"/>
      <testcase name="testSub" classname="org.jgrapht.alg.drawing.model.PointsTest" time="0.001" displayname="testSub" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.PointsTest]/[test:testSub(org.jgrapht.alg.drawing.model.PointsTest)]"/>
      <testcase name="testMinus" classname="org.jgrapht.alg.drawing.model.PointsTest" time="0.0" displayname="testMinus" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.PointsTest]/[test:testMinus(org.jgrapht.alg.drawing.model.PointsTest)]"/>
      <testcase name="testScalarMultiply" classname="org.jgrapht.alg.drawing.model.PointsTest" time="0.0" displayname="testScalarMultiply" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.PointsTest]/[test:testScalarMultiply(org.jgrapht.alg.drawing.model.PointsTest)]"/>
      <testcase name="testLength" classname="org.jgrapht.alg.drawing.model.PointsTest" time="0.0" displayname="testLength" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.model.PointsTest]/[test:testLength(org.jgrapht.alg.drawing.model.PointsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest]">
      <testcase name="testDirectedGraphGnm1" classname="org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnm1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest]/[test:testDirectedGraphGnm1(org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testZeroNodes" classname="org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testZeroNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest]/[test:testZeroNodes(org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnm1" classname="org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest" time="0.001" displayname="testUndirectedGraphGnm1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest]/[test:testUndirectedGraphGnm1(org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testGnmEdgesLimit" classname="org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testGnmEdgesLimit" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest]/[test:testGnmEdgesLimit(org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.GnmRandomBipartiteGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.ChordalGraphColoringTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ChordalGraphColoringTest]">
      <testcase name="testGetColoring1" classname="org.jgrapht.alg.color.ChordalGraphColoringTest" time="0.001" displayname="testGetColoring1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ChordalGraphColoringTest]/[test:testGetColoring1(org.jgrapht.alg.color.ChordalGraphColoringTest)]"/>
      <testcase name="testGetColoring2" classname="org.jgrapht.alg.color.ChordalGraphColoringTest" time="0.001" displayname="testGetColoring2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ChordalGraphColoringTest]/[test:testGetColoring2(org.jgrapht.alg.color.ChordalGraphColoringTest)]"/>
      <testcase name="testGetColoring3" classname="org.jgrapht.alg.color.ChordalGraphColoringTest" time="0.0" displayname="testGetColoring3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ChordalGraphColoringTest]/[test:testGetColoring3(org.jgrapht.alg.color.ChordalGraphColoringTest)]"/>
      <testcase name="testGetColoring4" classname="org.jgrapht.alg.color.ChordalGraphColoringTest" time="0.0" displayname="testGetColoring4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ChordalGraphColoringTest]/[test:testGetColoring4(org.jgrapht.alg.color.ChordalGraphColoringTest)]"/>
      <testcase name="testGetColoring5" classname="org.jgrapht.alg.color.ChordalGraphColoringTest" time="0.001" displayname="testGetColoring5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ChordalGraphColoringTest]/[test:testGetColoring5(org.jgrapht.alg.color.ChordalGraphColoringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.transform.LineGraphConverterTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.transform.LineGraphConverterTest]">
      <testcase name="selfLoopTestUndirected" classname="org.jgrapht.alg.transform.LineGraphConverterTest" time="0.002" displayname="selfLoopTestUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.transform.LineGraphConverterTest]/[test:selfLoopTestUndirected(org.jgrapht.alg.transform.LineGraphConverterTest)]"/>
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.transform.LineGraphConverterTest" time="0.0" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.transform.LineGraphConverterTest]/[test:testEmptyGraph(org.jgrapht.alg.transform.LineGraphConverterTest)]"/>
      <testcase name="testStarGraph" classname="org.jgrapht.alg.transform.LineGraphConverterTest" time="0.0" displayname="testStarGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.transform.LineGraphConverterTest]/[test:testStarGraph(org.jgrapht.alg.transform.LineGraphConverterTest)]"/>
      <testcase name="selfLoopTestDirected" classname="org.jgrapht.alg.transform.LineGraphConverterTest" time="0.0" displayname="selfLoopTestDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.transform.LineGraphConverterTest]/[test:selfLoopTestDirected(org.jgrapht.alg.transform.LineGraphConverterTest)]"/>
      <testcase name="testUndirectedGraph" classname="org.jgrapht.alg.transform.LineGraphConverterTest" time="0.0" displayname="testUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.transform.LineGraphConverterTest]/[test:testUndirectedGraph(org.jgrapht.alg.transform.LineGraphConverterTest)]"/>
      <testcase name="testDirectedGraph" classname="org.jgrapht.alg.transform.LineGraphConverterTest" time="0.0" displayname="testDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.transform.LineGraphConverterTest]/[test:testDirectedGraph(org.jgrapht.alg.transform.LineGraphConverterTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="1.83" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]">
      <testcase name="checkContainsShortestOddHole" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.005" displayname="checkContainsShortestOddHole" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkContainsShortestOddHole(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkDodecahedronGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.003" displayname="checkDodecahedronGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkDodecahedronGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkRoutine3" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.002" displayname="checkRoutine3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkRoutine3(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkDiamondGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.029" displayname="checkDiamondGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkDiamondGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkPetersenGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.0" displayname="checkPetersenGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkPetersenGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkThomsenGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.056" displayname="checkThomsenGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkThomsenGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkBullGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.02" displayname="checkBullGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkBullGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkTietzeGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.005" displayname="checkTietzeGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkTietzeGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkJewel" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.003" displayname="checkJewel" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkJewel(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkPyramid" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.13" displayname="checkPyramid" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkPyramid(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkFruchtGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.004" displayname="checkFruchtGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkFruchtGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkEmptyGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="1.387" displayname="checkEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkEmptyGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkMoserSpindleGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.002" displayname="checkMoserSpindleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkMoserSpindleGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkGroetzschGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.001" displayname="checkGroetzschGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkGroetzschGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkButterflyGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.011" displayname="checkButterflyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkButterflyGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkIsYXComplete" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.0" displayname="checkIsYXComplete" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkIsYXComplete(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkCleanOddHole" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.001" displayname="checkCleanOddHole" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkCleanOddHole(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkClawGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.008" displayname="checkClawGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkClawGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkConfigurationType2" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.003" displayname="checkConfigurationType2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkConfigurationType2(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkConfigurationType3" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.005" displayname="checkConfigurationType3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkConfigurationType3(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
      <testcase name="checkTutteGraph" classname="org.jgrapht.alg.cycle.BergeGraphInspectorTest" time="0.154" displayname="checkTutteGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.BergeGraphInspectorTest]/[test:checkTutteGraph(org.jgrapht.alg.cycle.BergeGraphInspectorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest" time="0.63" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest]">
      <testcase name="testFind2ApproximationCover2" classname="org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest" time="0.625" displayname="testFind2ApproximationCover2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest]/[test:testFind2ApproximationCover2(org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest)]"/>
      <testcase name="testFind2ApproximationCover" classname="org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest" time="0.004" displayname="testFind2ApproximationCover" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest]/[test:testFind2ApproximationCover(org.jgrapht.alg.vertexcover.EdgeBasedTwoApproxVCImplTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.631" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]">
      <testcase name="testNoOutDegreeZero" classname="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.244" displayname="testNoOutDegreeZero" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]/[test:testNoOutDegreeZero(org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest)]"/>
      <testcase name="testIncompatibleGraph" classname="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.0" displayname="testIncompatibleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]/[test:testIncompatibleGraph(org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest)]"/>
      <testcase name="testNoInDegreeZero" classname="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.221" displayname="testNoInDegreeZero" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]/[test:testNoInDegreeZero(org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest)]"/>
      <testcase name="testZeroCases" classname="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.0" displayname="testZeroCases" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]/[test:testZeroCases(org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest)]"/>
      <testcase name="testNumberOfEdges" classname="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.072" displayname="testNumberOfEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]/[test:testNumberOfEdges(org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest)]"/>
      <testcase name="testNumberOfNodes" classname="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.079" displayname="testNumberOfNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]/[test:testNumberOfNodes(org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest" time="0.015" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.DirectedScaleFreeGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.002" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]">
      <testcase name="testDirectedGraphGnp1" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testDirectedGraphGnp1(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp2" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testDirectedGraphGnp2(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testDirectedGraphGnp3" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testDirectedGraphGnp3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testDirectedGraphGnp3(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testZeroNodes" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testZeroNodes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testZeroNodes(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp1" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testUndirectedGraphGnp1(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp2" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testUndirectedGraphGnp2(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testUndirectedGraphGnp3" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testUndirectedGraphGnp3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testUndirectedGraphGnp3(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
      <testcase name="testBadParameters" classname="org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest" time="0.0" displayname="testBadParameters" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest]/[test:testBadParameters(org.jgrapht.generate.GnpRandomBipartiteGraphGeneratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.traverse.MaximumCardinalityIteratorTest" time="0.001" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.MaximumCardinalityIteratorTest]">
      <testcase name="testMaximumCardinalityIterator1" classname="org.jgrapht.traverse.MaximumCardinalityIteratorTest" time="0.0" displayname="testMaximumCardinalityIterator1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.MaximumCardinalityIteratorTest]/[test:testMaximumCardinalityIterator1(org.jgrapht.traverse.MaximumCardinalityIteratorTest)]"/>
      <testcase name="testMaximumCardinalityIterator2" classname="org.jgrapht.traverse.MaximumCardinalityIteratorTest" time="0.0" displayname="testMaximumCardinalityIterator2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.MaximumCardinalityIteratorTest]/[test:testMaximumCardinalityIterator2(org.jgrapht.traverse.MaximumCardinalityIteratorTest)]"/>
      <testcase name="testMaximumCardinalityIterator3" classname="org.jgrapht.traverse.MaximumCardinalityIteratorTest" time="0.0" displayname="testMaximumCardinalityIterator3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.MaximumCardinalityIteratorTest]/[test:testMaximumCardinalityIterator3(org.jgrapht.traverse.MaximumCardinalityIteratorTest)]"/>
      <testcase name="testMaximumCardinalityIterator4" classname="org.jgrapht.traverse.MaximumCardinalityIteratorTest" time="0.001" displayname="testMaximumCardinalityIterator4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.MaximumCardinalityIteratorTest]/[test:testMaximumCardinalityIterator4(org.jgrapht.traverse.MaximumCardinalityIteratorTest)]"/>
      <testcase name="testEvents" classname="org.jgrapht.traverse.MaximumCardinalityIteratorTest" time="0.0" displayname="testEvents" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.traverse.MaximumCardinalityIteratorTest]/[test:testEvents(org.jgrapht.traverse.MaximumCardinalityIteratorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest]">
      <testcase name="testFindAll" classname="org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest" time="0.002" displayname="testFindAll" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest]/[test:testFindAll(org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest)]"/>
      <testcase name="testFindBiggest" classname="org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest" time="0.0" displayname="testFindBiggest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest]/[test:testFindBiggest(org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest)]"/>
      <testcase name="testComplete" classname="org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest" time="0.001" displayname="testComplete" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest]/[test:testComplete(org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest)]"/>
      <testcase name="testNonSimple" classname="org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest" time="0.0" displayname="testNonSimple" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest]/[test:testNonSimple(org.jgrapht.alg.clique.DegeneracyBronKerboschCliqueFinderTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest" time="0.08" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest" time="0.08" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest)]"/>
      <testcase name="testInvalidPrediction" classname="org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest" time="0.0" displayname="testInvalidPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest]/[test:testInvalidPrediction(org.jgrapht.alg.linkprediction.LeichtHolmeNewmanIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.util.VertexDegreeComparatorTest" time="0.067" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.VertexDegreeComparatorTest]">
      <testcase name="testVertexDegreeComparator" classname="org.jgrapht.alg.util.VertexDegreeComparatorTest" time="0.067" displayname="testVertexDegreeComparator" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.util.VertexDegreeComparatorTest]/[test:testVertexDegreeComparator(org.jgrapht.alg.util.VertexDegreeComparatorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="1.823" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]">
      <testcase name="testRandomGraphsBarabasiLargeNoSeed" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.609" displayname="testRandomGraphsBarabasiLargeNoSeed" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testRandomGraphsBarabasiLargeNoSeed(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testIsMaximum1" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testIsMaximum1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testIsMaximum1(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph10" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.003" displayname="testGraph10" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph10(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph11" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph11(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph12" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph12" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph12(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph13" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph13" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph13(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph14" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testGraph14" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph14(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph15" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.001" displayname="testGraph15" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph15(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testIsMaximumMatching2" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testIsMaximumMatching2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testIsMaximumMatching2(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testIsMaximumMatching3" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testIsMaximumMatching3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testIsMaximumMatching3(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testPseudoGraph" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testPseudoGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testPseudoGraph(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testDisconnectedGraph" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.0" displayname="testDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testDisconnectedGraph(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.001" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph1(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph2" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.009" displayname="testGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph2(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph3" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.005" displayname="testGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph3(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph4" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.05" displayname="testGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph4(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph5" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.004" displayname="testGraph5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph5(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph6" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.002" displayname="testGraph6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph6(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph7" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.002" displayname="testGraph7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph7(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph8" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.002" displayname="testGraph8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph8(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testGraph9" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.036" displayname="testGraph9" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testGraph9(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testRandomGraphsBarabasiLarge" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.084" displayname="testRandomGraphsBarabasiLarge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testRandomGraphsBarabasiLarge(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testRandomGraphsLarge" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.6" displayname="testRandomGraphsLarge" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testRandomGraphsLarge(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
      <testcase name="testRandomGraphsSmall" classname="org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest" time="0.411" displayname="testRandomGraphsSmall" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest]/[test:testRandomGraphsSmall(org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatchingTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.ColorRefinementAlgorithmTest" time="0.186" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ColorRefinementAlgorithmTest]">
      <testcase name="testTree" classname="org.jgrapht.alg.color.ColorRefinementAlgorithmTest" time="0.183" displayname="testTree" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ColorRefinementAlgorithmTest]/[test:testTree(org.jgrapht.alg.color.ColorRefinementAlgorithmTest)]">
        <failure>java.lang.AssertionError: Values should be different. Actual: 0&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failEquals(Assert.java:187)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:201)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:213)&#13;
	at org.jgrapht.core/org.jgrapht.alg.color.ColorRefinementAlgorithmTest.testTree(ColorRefinementAlgorithmTest.java:60)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testDirectedGraph1" classname="org.jgrapht.alg.color.ColorRefinementAlgorithmTest" time="0.001" displayname="testDirectedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ColorRefinementAlgorithmTest]/[test:testDirectedGraph1(org.jgrapht.alg.color.ColorRefinementAlgorithmTest)]">
        <failure>java.lang.AssertionError: Values should be different. Actual: 0&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failEquals(Assert.java:187)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:201)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:213)&#13;
	at org.jgrapht.core/org.jgrapht.alg.color.ColorRefinementAlgorithmTest.testDirectedGraph1(ColorRefinementAlgorithmTest.java:182)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testRegular" classname="org.jgrapht.alg.color.ColorRefinementAlgorithmTest" time="0.001" displayname="testRegular" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ColorRefinementAlgorithmTest]/[test:testRegular(org.jgrapht.alg.color.ColorRefinementAlgorithmTest)]"/>
      <testcase name="testGraph1" classname="org.jgrapht.alg.color.ColorRefinementAlgorithmTest" time="0.001" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.ColorRefinementAlgorithmTest]/[test:testGraph1(org.jgrapht.alg.color.ColorRefinementAlgorithmTest)]">
        <failure>java.lang.AssertionError: Values should be different. Actual: 0&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failEquals(Assert.java:187)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:201)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:213)&#13;
	at org.jgrapht.core/org.jgrapht.alg.color.ColorRefinementAlgorithmTest.testGraph1(ColorRefinementAlgorithmTest.java:139)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="org.jgrapht.alg.clustering.LabelPropagationClusteringTest" time="0.049" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.LabelPropagationClusteringTest]">
      <testcase name="test1" classname="org.jgrapht.alg.clustering.LabelPropagationClusteringTest" time="0.015" displayname="test1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.LabelPropagationClusteringTest]/[test:test1(org.jgrapht.alg.clustering.LabelPropagationClusteringTest)]"/>
      <testcase name="test2" classname="org.jgrapht.alg.clustering.LabelPropagationClusteringTest" time="0.0" displayname="test2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.LabelPropagationClusteringTest]/[test:test2(org.jgrapht.alg.clustering.LabelPropagationClusteringTest)]"/>
      <testcase name="test3" classname="org.jgrapht.alg.clustering.LabelPropagationClusteringTest" time="0.0" displayname="test3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.LabelPropagationClusteringTest]/[test:test3(org.jgrapht.alg.clustering.LabelPropagationClusteringTest)]"/>
      <testcase name="testWithIsolatedVertex" classname="org.jgrapht.alg.clustering.LabelPropagationClusteringTest" time="0.0" displayname="testWithIsolatedVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.clustering.LabelPropagationClusteringTest]/[test:testWithIsolatedVertex(org.jgrapht.alg.clustering.LabelPropagationClusteringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]">
      <testcase name="testNegativeCycleDetection" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testNegativeCycleDetection" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testNegativeCycleDetection(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testNegativeEdgeUndirectedGraphActualCycle" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testNegativeEdgeUndirectedGraphActualCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testNegativeEdgeUndirectedGraphActualCycle(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testNegativeCycleDetectionActualCycle" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testNegativeCycleDetectionActualCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testNegativeCycleDetectionActualCycle(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testNegativeEdgeUndirectedGraph" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testNegativeEdgeUndirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testNegativeEdgeUndirectedGraph(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testDoNotDetectNonReachableNegativeCycle" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testDoNotDetectNonReachableNegativeCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testDoNotDetectNonReachableNegativeCycle(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testWikipediaExampleBellmanFord" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testWikipediaExampleBellmanFord" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testWikipediaExampleBellmanFord(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testWithNegativeEdges" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testWithNegativeEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testWithNegativeEdges(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testUndirected" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testUndirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testUndirected(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testNegativeCycle" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testNegativeCycle" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testNegativeCycle(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testNoPath" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testNoPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testNoPath(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testNegativeCycleWithMaxHops" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testNegativeCycleWithMaxHops" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testNegativeCycleWithMaxHops(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
      <testcase name="testPathBetween" classname="org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest" time="0.0" displayname="testPathBetween" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest]/[test:testPathBetween(org.jgrapht.alg.shortestpath.BellmanFordShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="5.402" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]">
      <testcase name="mugg100Test" classname="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="2.675" displayname="mugg100Test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]/[test:mugg100Test(org.jgrapht.alg.color.BrownBacktrackColoringTest)]"/>
      <testcase name="huckTest" classname="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="2.402" displayname="huckTest" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]/[test:huckTest(org.jgrapht.alg.color.BrownBacktrackColoringTest)]"/>
      <testcase name="queen5Test" classname="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="0.001" displayname="queen5Test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]/[test:queen5Test(org.jgrapht.alg.color.BrownBacktrackColoringTest)]"/>
      <testcase name="queen6Test" classname="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="0.076" displayname="queen6Test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]/[test:queen6Test(org.jgrapht.alg.color.BrownBacktrackColoringTest)]"/>
      <testcase name="testClique" classname="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="0.001" displayname="testClique" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]/[test:testClique(org.jgrapht.alg.color.BrownBacktrackColoringTest)]"/>
      <testcase name="myciel3Test" classname="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="0.0" displayname="myciel3Test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]/[test:myciel3Test(org.jgrapht.alg.color.BrownBacktrackColoringTest)]"/>
      <testcase name="myciel4Test" classname="org.jgrapht.alg.color.BrownBacktrackColoringTest" time="0.245" displayname="myciel4Test" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.color.BrownBacktrackColoringTest]/[test:myciel4Test(org.jgrapht.alg.color.BrownBacktrackColoringTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.373" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]">
      <testcase name="testEmptyGraph" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.027" displayname="testEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testEmptyGraph(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testDifferentSourcesAndTargetsMultigraph" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.0" displayname="testDifferentSourcesAndTargetsMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testDifferentSourcesAndTargetsMultigraph(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesEqualTargetsMultigraph" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.001" displayname="testSourcesEqualTargetsMultigraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testSourcesEqualTargetsMultigraph(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesEqualTargetsSimpleGraph" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.0" displayname="testSourcesEqualTargetsSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testSourcesEqualTargetsSimpleGraph(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testTargetsIsNull" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.001" displayname="testTargetsIsNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testTargetsIsNull(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testOnRandomGraphs" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.299" displayname="testOnRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testOnRandomGraphs(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testSourcesIsNull" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.001" displayname="testSourcesIsNull" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testSourcesIsNull(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testNoPath" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.0" displayname="testNoPath" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testNoPath(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
      <testcase name="testDifferentSourcesAndTargetsSimpleGraph" classname="org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest" time="0.0" displayname="testDifferentSourcesAndTargetsSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest]/[test:testDifferentSourcesAndTargetsSimpleGraph(org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest" time="0.036" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest]">
      <testcase name="testWeightedEdges" classname="org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest" time="0.001" displayname="testWeightedEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest]/[test:testWeightedEdges(org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest)]"/>
      <testcase name="testCompareWithDijkstra" classname="org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest" time="0.035" displayname="testCompareWithDijkstra" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest]/[test:testCompareWithDijkstra(org.jgrapht.alg.shortestpath.FloydWarshallShortestPathsTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.MartinShortestPathTest" time="0.019" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.MartinShortestPathTest]">
      <testcase name="testNoPaths" classname="org.jgrapht.alg.shortestpath.MartinShortestPathTest" time="0.016" displayname="testNoPaths" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.MartinShortestPathTest]/[test:testNoPaths(org.jgrapht.alg.shortestpath.MartinShortestPathTest)]"/>
      <testcase name="testGraphDirected" classname="org.jgrapht.alg.shortestpath.MartinShortestPathTest" time="0.003" displayname="testGraphDirected" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.MartinShortestPathTest]/[test:testGraphDirected(org.jgrapht.alg.shortestpath.MartinShortestPathTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest" time="0.11" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest]">
      <testcase name="testGraphZeroTheta" classname="org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest" time="0.088" displayname="testGraphZeroTheta" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest]/[test:testGraphZeroTheta(org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest)]">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:87)&#13;
	at org.junit.Assert.assertTrue(Assert.java:42)&#13;
	at org.junit.Assert.assertTrue(Assert.java:53)&#13;
	at org.jgrapht.core/org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest.testGraphZeroTheta(IndexedFRLayoutAlgorithm2DTest.java:138)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testGraphWithIsolatedVertex" classname="org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest" time="0.013" displayname="testGraphWithIsolatedVertex" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest]/[test:testGraphWithIsolatedVertex(org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest)]">
        <failure>java.lang.AssertionError: expected:&lt;93.47709230744503&gt; but was:&lt;100.0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:89)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:835)&#13;
	at org.junit.Assert.assertEquals(Assert.java:555)&#13;
	at org.junit.Assert.assertEquals(Assert.java:685)&#13;
	at org.jgrapht.core/org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest.testGraphWithIsolatedVertex(IndexedFRLayoutAlgorithm2DTest.java:189)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
      <testcase name="testGraph1" classname="org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest" time="0.009" displayname="testGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest]/[test:testGraph1(org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest)]">
        <failure>java.lang.AssertionError&#13;
	at org.junit.Assert.fail(Assert.java:87)&#13;
	at org.junit.Assert.assertTrue(Assert.java:42)&#13;
	at org.junit.Assert.assertTrue(Assert.java:53)&#13;
	at org.jgrapht.core/org.jgrapht.alg.drawing.IndexedFRLayoutAlgorithm2DTest.testGraph1(IndexedFRLayoutAlgorithm2DTest.java:80)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</failure>
      </testcase>
    </testsuite>
    <testsuite name="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.069" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]">
      <testcase name="testExpand1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.002" displayname="testExpand1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testExpand1(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]">
        <error>java.lang.NullPointerException: Cannot read field "tree" because "blossom" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:52)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:61)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdater.expand(BlossomVPrimalUpdater.java:253)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest.testExpand1(BlossomVPrimalUpdaterTest.java:1455)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testExpand2" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testExpand2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testExpand2(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]">
        <error>java.lang.NullPointerException: Cannot read field "tree" because "blossom" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:52)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:61)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdater.expand(BlossomVPrimalUpdater.java:253)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest.testExpand2(BlossomVPrimalUpdaterTest.java:1581)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testExpand3" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testExpand3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testExpand3(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]">
        <error>java.lang.NullPointerException: Cannot read field "tree" because "blossom" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:52)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:61)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdater.expand(BlossomVPrimalUpdater.java:253)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest.testExpand3(BlossomVPrimalUpdaterTest.java:1691)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testExpand4" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.002" displayname="testExpand4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testExpand4(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]">
        <error>java.lang.NullPointerException: Cannot read field "tree" because "blossom" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:52)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:61)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdater.expand(BlossomVPrimalUpdater.java:253)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest.testExpand4(BlossomVPrimalUpdaterTest.java:1813)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testExpand5" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testExpand5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testExpand5(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]">
        <error>java.lang.NullPointerException: Cannot read field "tree" because "blossom" is null&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:52)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterProduct.iterator(BlossomVPrimalUpdaterProduct.java:61)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdater.expand(BlossomVPrimalUpdater.java:253)&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest.testExpand5(BlossomVPrimalUpdaterTest.java:1974)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testGrow1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testGrow1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testGrow1(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testGrow2" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testGrow2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testGrow2(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testGrow3" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testGrow3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testGrow3(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testGrow4" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testGrow4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testGrow4(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testGrow5" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testGrow5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testGrow5(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testGrow6" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testGrow6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testGrow6(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testFindBlossomRoot" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testFindBlossomRoot" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testFindBlossomRoot(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testShrink1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink1(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink2" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testShrink2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink2(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink3" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testShrink3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink3(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink4" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testShrink4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink4(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink5" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testShrink5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink5(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink6" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testShrink6" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink6(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink7" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testShrink7" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink7(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testShrink8" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testShrink8" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testShrink8(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testAugment1" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testAugment1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testAugment1(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testAugment2" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testAugment2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testAugment2(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testAugment3" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.001" displayname="testAugment3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testAugment3(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
      <testcase name="testAugment4" classname="org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest" time="0.0" displayname="testAugment4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest]/[test:testAugment4(org.jgrapht.alg.matching.blossom.v5.BlossomVPrimalUpdaterTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.253" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]">
      <testcase name="testRadiusEmptyGraph" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.001" displayname="testRadiusEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testRadiusEmptyGraph(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testRadiusDisconnectedGraph" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testRadiusDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testRadiusDisconnectedGraph(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testDiameterEmptyGraph" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.001" displayname="testDiameterEmptyGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testDiameterEmptyGraph(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testDiameterDirectedGraph1" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testDiameterDirectedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testDiameterDirectedGraph1(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testDiameterDirectedGraph2" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testDiameterDirectedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testDiameterDirectedGraph2(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testGraphPeripheryG1" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testGraphPeripheryG1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testGraphPeripheryG1(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testGraphPeripheryG2" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.001" displayname="testGraphPeripheryG2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testGraphPeripheryG2(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testGraphCenterG1" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testGraphCenterG1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testGraphCenterG1(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testGraphCenterG2" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testGraphCenterG2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testGraphCenterG2(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testVertexEccentricityG1" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testVertexEccentricityG1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testVertexEccentricityG1(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testVertexEccentricityG2" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testVertexEccentricityG2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testVertexEccentricityG2(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testGraphPseudoPeripheryG1" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.001" displayname="testGraphPseudoPeripheryG1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testGraphPseudoPeripheryG1(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testGraphPseudoPeripheryG2" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testGraphPseudoPeripheryG2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testGraphPseudoPeripheryG2(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testGraphPseudoPeripheryG3" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.247" displayname="testGraphPseudoPeripheryG3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testGraphPseudoPeripheryG3(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
      <testcase name="testDiameterDisconnectedGraph" classname="org.jgrapht.alg.shortestpath.GraphMeasurerTest" time="0.0" displayname="testDiameterDisconnectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.shortestpath.GraphMeasurerTest]/[test:testDiameterDisconnectedGraph(org.jgrapht.alg.shortestpath.GraphMeasurerTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.generate.netgen.DistributorTest" time="0.061" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]">
      <testcase name="testDistributor_NoLowerBounds_OneValidDistribution" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.052" displayname="testDistributor_NoLowerBounds_OneValidDistribution" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_NoLowerBounds_OneValidDistribution(org.jgrapht.generate.netgen.DistributorTest)]"/>
      <testcase name="testDistributor_NoLowerBounds_NoValidDistribution" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.001" displayname="testDistributor_NoLowerBounds_NoValidDistribution" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_NoLowerBounds_NoValidDistribution(org.jgrapht.generate.netgen.DistributorTest)]"/>
      <testcase name="testDistributor_AllBounds_LargeBounds" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.003" displayname="testDistributor_AllBounds_LargeBounds" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_AllBounds_LargeBounds(org.jgrapht.generate.netgen.DistributorTest)]"/>
      <testcase name="testDistributor_AllBounds1" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.001" displayname="testDistributor_AllBounds1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_AllBounds1(org.jgrapht.generate.netgen.DistributorTest)]"/>
      <testcase name="testDistributor_AllBounds2" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.001" displayname="testDistributor_AllBounds2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_AllBounds2(org.jgrapht.generate.netgen.DistributorTest)]"/>
      <testcase name="testDistributor_AllBounds3" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.001" displayname="testDistributor_AllBounds3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_AllBounds3(org.jgrapht.generate.netgen.DistributorTest)]"/>
      <testcase name="testDistributor_NoUpperBounds_NoValidDistribution" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.0" displayname="testDistributor_NoUpperBounds_NoValidDistribution" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_NoUpperBounds_NoValidDistribution(org.jgrapht.generate.netgen.DistributorTest)]"/>
      <testcase name="testDistributor_NoUpperBounds_OneValidDistribution" classname="org.jgrapht.generate.netgen.DistributorTest" time="0.0" displayname="testDistributor_NoUpperBounds_OneValidDistribution" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.generate.netgen.DistributorTest]/[test:testDistributor_NoUpperBounds_OneValidDistribution(org.jgrapht.generate.netgen.DistributorTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.016" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]">
      <testcase name="testDirectedGraphWithMultipleEdgesAndSelfLoop" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.004" displayname="testDirectedGraphWithMultipleEdgesAndSelfLoop" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testDirectedGraphWithMultipleEdgesAndSelfLoop(org.jgrapht.alg.cycle.ChinesePostmanTest)]">
        <error>java.lang.IllegalArgumentException: Graph supplied isn't complete bipartite with equally sized partitions!&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:96)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.solveCPPDirected(ChinesePostman.java:229)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.getCPPSolution(ChinesePostman.java:94)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.verifyClosedPath(ChinesePostmanTest.java:311)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.testDirectedGraphWithMultipleEdgesAndSelfLoop(ChinesePostmanTest.java:198)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testDirectedGraph1" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.0" displayname="testDirectedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testDirectedGraph1(org.jgrapht.alg.cycle.ChinesePostmanTest)]">
        <error>java.lang.IllegalArgumentException: Graph supplied isn't complete bipartite with equally sized partitions!&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:96)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.solveCPPDirected(ChinesePostman.java:229)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.getCPPSolution(ChinesePostman.java:94)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.verifyClosedPath(ChinesePostmanTest.java:311)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.testDirectedGraph1(ChinesePostmanTest.java:213)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testDirectedGraph2" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.0" displayname="testDirectedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testDirectedGraph2(org.jgrapht.alg.cycle.ChinesePostmanTest)]">
        <error>java.lang.IllegalArgumentException: Graph supplied isn't complete bipartite with equally sized partitions!&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:96)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.solveCPPDirected(ChinesePostman.java:229)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.getCPPSolution(ChinesePostman.java:94)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.verifyClosedPath(ChinesePostmanTest.java:311)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.testDirectedGraph2(ChinesePostmanTest.java:229)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testDirectedGraph3" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.001" displayname="testDirectedGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testDirectedGraph3(org.jgrapht.alg.cycle.ChinesePostmanTest)]">
        <error>java.lang.IllegalArgumentException: Graph supplied isn't complete bipartite with equally sized partitions!&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:96)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.solveCPPDirected(ChinesePostman.java:229)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.getCPPSolution(ChinesePostman.java:94)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.verifyClosedPath(ChinesePostmanTest.java:311)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.testDirectedGraph3(ChinesePostmanTest.java:245)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testDirectedGraph4" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.001" displayname="testDirectedGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testDirectedGraph4(org.jgrapht.alg.cycle.ChinesePostmanTest)]">
        <error>java.lang.IllegalArgumentException: Graph supplied isn't complete bipartite with equally sized partitions!&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:96)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.solveCPPDirected(ChinesePostman.java:229)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.getCPPSolution(ChinesePostman.java:94)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.verifyClosedPath(ChinesePostmanTest.java:311)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.testDirectedGraph4(ChinesePostmanTest.java:266)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testDirectedGraph5" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.0" displayname="testDirectedGraph5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testDirectedGraph5(org.jgrapht.alg.cycle.ChinesePostmanTest)]">
        <error>java.lang.IllegalArgumentException: Graph supplied isn't complete bipartite with equally sized partitions!&#13;
	at org.jgrapht.core/org.jgrapht.alg.matching.KuhnMunkresMinimalWeightBipartitePerfectMatching.getMatching(KuhnMunkresMinimalWeightBipartitePerfectMatching.java:96)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.solveCPPDirected(ChinesePostman.java:229)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostman.getCPPSolution(ChinesePostman.java:94)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.verifyClosedPath(ChinesePostmanTest.java:311)&#13;
	at org.jgrapht.core/org.jgrapht.alg.cycle.ChinesePostmanTest.testDirectedGraph5(ChinesePostmanTest.java:289)&#13;
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1375)&#13;
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)&#13;
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)&#13;
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)&#13;
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)&#13;
&#13;
</error>
      </testcase>
      <testcase name="testGraphWithMultipleEdges" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.002" displayname="testGraphWithMultipleEdges" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testGraphWithMultipleEdges(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="temp" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.001" displayname="temp" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:temp(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testGraphWithSelfloop" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.0" displayname="testGraphWithSelfloop" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testGraphWithSelfloop(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testGraphNoVertices" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.0" displayname="testGraphNoVertices" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testGraphNoVertices(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testSingleEdgeGraph" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.0" displayname="testSingleEdgeGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testSingleEdgeGraph(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testUndirectedGraph1" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.001" displayname="testUndirectedGraph1" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testUndirectedGraph1(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testUndirectedGraph2" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.001" displayname="testUndirectedGraph2" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testUndirectedGraph2(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testUndirectedGraph3" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.0" displayname="testUndirectedGraph3" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testUndirectedGraph3(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testUndirectedGraph4" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.001" displayname="testUndirectedGraph4" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testUndirectedGraph4(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
      <testcase name="testUndirectedGraph5" classname="org.jgrapht.alg.cycle.ChinesePostmanTest" time="0.001" displayname="testUndirectedGraph5" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.cycle.ChinesePostmanTest]/[test:testUndirectedGraph5(org.jgrapht.alg.cycle.ChinesePostmanTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest" time="0.003" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest]">
      <testcase name="testPrediction" classname="org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest" time="0.003" displayname="testPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest]/[test:testPrediction(org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest)]"/>
      <testcase name="testInvalidPrediction" classname="org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest" time="0.0" displayname="testInvalidPrediction" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest]/[test:testInvalidPrediction(org.jgrapht.alg.linkprediction.SørensenIndexLinkPredictionTest)]"/>
    </testsuite>
    <testsuite name="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="1.394" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]">
      <testcase name="testSemanticCheck" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.107" displayname="testSemanticCheck" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testSemanticCheck(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
      <testcase name="testEdgeCasesDirectedGraph" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.0" displayname="testEdgeCasesDirectedGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testEdgeCasesDirectedGraph(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
      <testcase name="testExhaustive" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.0" displayname="testExhaustive" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testExhaustive(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
      <testcase name="testHugeGraph" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.558" displayname="testHugeGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testHugeGraph(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
      <testcase name="testRandomGraphs" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.194" displayname="testRandomGraphs" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testRandomGraphs(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
      <testcase name="testRandomGraphsExhaustive" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.517" displayname="testRandomGraphsExhaustive" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testRandomGraphsExhaustive(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
      <testcase name="testGraphTypes" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.001" displayname="testGraphTypes" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testGraphTypes(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
      <testcase name="testEdgeCasesSimpleGraph" classname="org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest" time="0.002" displayname="testEdgeCasesSimpleGraph" uniqueid="[engine:junit-vintage]/[runner:org.jgrapht.FastTestSuite]/[test:org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest]/[test:testEdgeCasesSimpleGraph(org.jgrapht.alg.isomorphism.VF2SubgraphIsomorphismInspectorTest)]"/>
    </testsuite>
  </testsuite>
</testrun>
